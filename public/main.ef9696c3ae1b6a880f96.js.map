{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/Routes.js","webpack:///./src/Pages/Login/Login.js","webpack:///./src/config.js","webpack:///./src/Pages/Signup/Signup.js","webpack:///./src/Pages/Main/Main.js","webpack:///./src/Components/Nav/NavList.js","webpack:///./src/Components/Nav/SubList.js","webpack:///./src/Pages/Product/ProductManagement.js","webpack:///./src/Pages/Product/Components/ProductDetail.js","webpack:///./src/Pages/Home/Home.js","webpack:///./src/Pages/Home/Components/ProductManage.js","webpack:///./src/Pages/Home/Components/RefundManage.js","webpack:///./src/Pages/Home/Components/Bookmark.js","webpack:///./src/Pages/Home/Components/QnA.js","webpack:///./src/Pages/Home/Data/DataQnA.js","webpack:///./src/Pages/Home/Components/Notice.js","webpack:///./src/Pages/Home/Data/DataNotification.js","webpack:///./src/Pages/Order/Order.js","webpack:///./src/Pages/Order/OrderManagement.js","webpack:///./src/Pages/Order/Filter.js","webpack:///./src/Pages/Order/DateFilter.js","webpack:///./src/Pages/Order/OrderList.js","webpack:///./src/Pages/Order/Table.js","webpack:///./src/Pages/Order/DataOrder.js","webpack:///./src/Pages/Order/DataOrderComponent.js","webpack:///./src/Store/Reducer/index.js","webpack:///./src/Store/Reducer/login.js","webpack:///./src/Store/Reducer/commonStatus.js","webpack:///./src/Styles/global.js","webpack:///./src/Styles/theme.js","webpack:///./src/Components/Header/Header.js","webpack:///./src/Components/Nav/Nav.js","webpack:///./src/Components/Footer/Footer.js","webpack:///./src/Store/Reducer/sideNav.js","webpack:///./src/Store/Reducer/nav.js","webpack:///./src/Store/Reducer/filter.js","webpack:///./src/Store/Reducer/userInfo.js","webpack:///./src/Pages/Login/LoginFooter.js","webpack:///./src/Components/ChangeTimeFormat.js","webpack:///./src/Pages/Product/Components/Purchase.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","store","createStore","combineReducers","ReactDOM","render","Provider","ThemeProvider","theme","document","getElementById","Switch","Route","exact","path","component","Login","Signup","Main","Home","ProductManagement","Order","dispatch","useDispatch","history","useHistory","useState","idValue","pwValue","inputValue","setInputValue","useForm","register","handleSubmit","errors","handleInput","e","nextInputValue","target","console","log","userInfo","useSelector","loggedIn","filter_list","filter","nav_list","nav","axios","post","identification","password","headers","success","is_master","localStorage","setItem","Authorization","saveFilter","saveNav","isMaster","sideNav","Container","Content","Logo","alt","src","LoginBox","LoginTitle","onSubmit","Input","ref","required","placeholder","className","onChange","Button","onClick","Join","Link","to","styled","div","flex","img","h3","input","label","props","color","fontWeight","button","API","watch","Title","SignupBox","SubTitle","confirm","InfoTitle","IconInput","id","TiUserOutline","type","minLength","message","TiLockClosedOutline","pattern","rePw","TiInputCheckedOutline","validate","ExtraInfo","primary","phone","TiPhoneOutline","mask","AiOutlineWarning","IntputRadio","sellerName","TiSortAlphabeticallyOutline","engSellerName","customerContact","ButtonGroup","readOnly","css","Section","Test","menuTitle","subTitle","index","subActive","active","setSubActive","handlePage","sidebarSmall","link","isSubActive","isPageActive","isHoverActive","setIsHoverActive","handleHover","handleClick","toggleSubNav","Fragment","NavElement","onMouseEnter","onMouseLeave","hoverActive","List","NAV_ICONS","HoverContainer","CategorySmall","categoryIdx","ArrowIcon","KeyboardArrowLeft","size","li","span","홈","VscHome","공지사항","VscComment","통계","VscGraph","주문관리","AiOutlineShoppingCart","VscPackage","상품관리","VscJersey","고객응대관리","AiOutlineSmile","정산관리","AiOutlineCalculator","진열관리","AiOutlineEye","VscGift","회원관리","VscAccount","고객센터","VscInfo","SubContainer","map","el","idx","Subcategory","sub_menu_id","subIdx","goToMenu","sub_url","sub_menu_title","ul","showModal","setShowModal","differentFilter","setDifferentFilter","product","setProduct","filters","setFilters","filterStatus","setFilterStatus","startDate","endDate","currentDate","setCurrentDate","activePage","setActivePage","sellerDetail","productDetail","sellerAttribute","salesStatus","displayStatus","discountStatus","limit","offset","query","setQuery","userType","createFilter","allFilter","filterTitle","Array","category","fill","_","getData","param","params","timeout","DataProductManage","masterData","sellerData","response","error","status","request","config","useEffect","changeFilter","filterId","multiFilter","changeBtn","setFilter","btnStatus","allSelectBtn","allSelected","every","item","allNotSelected","allCondition","selectedId","concat","addId","sendData","attribute","reduce","acc","salse","display","discount","queryObj","Number","FilterContainer","FilterCategoryTitle","FilterTitle","InquiryperiodBox","SelectPeriod","selected","locale","ko","dateFormat","date","handleStartDate","placeholderText","shouldCloseOnSelect","handleEndDate","FiltersCategoryTitle","SelectFilterCategory","SellerSearchBox","SellerSearch","SearchBox","ProductSearch","cate","SelectFilterTitle","FilterBtnBox","sub","SelectBtn","category_id","category_title","SearchContainer","SearchBtn","CanclehBtn","salesId","displayId","PeriodBox","DatePicker","productItem","isSelected","setIsSelected","allCheck","setAllCheck","checkProduct","setCheckProduct","changeStatus","setchangeStatus","ProductContainer","TitleContainer","RootTitle","GoListUnordered","GoChevronRight","LimitRange","handleLimit","ChangeContainer","PrintExcelBtn","GoFile","ApplyBtn","alert","sales","String","includes","is_on_sale","is_displayed","GoCheck","AllProductView","TableBox","ProductHead","ProductCategory","twidth","checked","ProductLine","ProductItem","newSelceted","selectProduct","registered_at","main_image_url","width","height","product_name","href","product_code","product_number","price","discount_price","is_discounted","BuyBtn","PaginationContainer","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","pageNumber","thead","th","tr","sellerStatus","setSellerStatus","DataHomeSeller","priceOfSales","chart_data","numOfSales","num","dateBySales","chartForm","series","tooltipTitle","tooltipUnit","title","text","credits","enabled","showInLegend","xAxis","categories","labels","formatter","this","substring","yAxis","format","tooltip","splitDate","x","split","y","SalesContainer","StaticsContainer","StaticsBox","StaticsStatus","StaticsTitle","GoGraph","StaticsGraph","highcharts","Highcharts","options","SalesBox","SalesStatus","SalesCategory","product_preparation","delivery_completed","all_product","displayed_product","StaticsQnA","NullLi","StaticsCategory","QnANickName","QnAQuestion","QnATitle","QnARegist","StaticsContent","DataQnA","question","SellerNoti","nickname","itemTitle","registration","AiOutlineNotification","DataNotification","CustomerQnA","NotiNum","categoryNum","NotiCategory","NotiTitle","categoryTitle","NotiWriter","writer","NotiRegistDate","registData","match","useParams","categoryId","pagetext","COMPONENT_ORDER","newDate","Date","changeDate","dayAgo","monthAgo","year","getFullYear","month","getMonth","day","getDate","searchDate","setSearchDate","searchKeyword","searchOption","setParams","orderList","setOrderList","selectDate","setSelectDate","filterReset","getProductInfo","url","ManagementContainer","description","handleDate","sendQuery","Div","Select","SearchInput","Divs","FilterBox","filter_date","DateBtn","periodButton","search","select","Pagebar","KeyboardArrowRight","checkOrder","setCheckOrder","UpperTable","Total","blue","order_status","changedApply","TableContainer","table_header","order","values","UnderTable","paid_at","order_number","detail_order_number","option_info","quantity","receiver_name","receiver_contact","shipment_from","shipment_until","confirmed_at","login","commonStatus","lonIn","lonOut","state","action","SELLER_ATTRIBUTE","CLEAR_ATTRIBUTE","initialState","getAttribute","payload","clearAttribute","GlobalStyle","createGlobalStyle","justify","align","direction","HeaderContainer","Contents","KeyboardArrowDown","StatusBtn","setActive","navData","setNavData","setSidebarSmall","NavContainer","SideToggler","sizeToggle","NavBox","menu_title","sub_menus","main_url","FooterContainer","scrollTo","top","behavior","KeyboardArrowUp","sellerNav","items","masterNav","clearNav","clearFilter","TYPE_NONE","isUnknown","FooterFantom","Footer","FooterInner","CompanyInfo","Policy","ModalOverlay","ModalWrapper","ModalInner"],"mappings":"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","file":"main.ef9696c3ae1b6a880f96.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([106,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport combineReducers from './Store/Reducer/index';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './Styles/global';\nimport theme from './Styles/theme';\n\nconst store = createStore(combineReducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <Routes />\n      <GlobalStyle />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\nif (module.hot) {\n  module.hot.accept();\n}\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport Login from './Pages/Login/Login';\nimport Signup from './Pages/Signup/Signup';\nimport Main from './Pages/Main/Main';\nimport ProductManagement from './Pages/Product/ProductManagement';\nimport Home from './Pages/Home/Home';\nimport Purchase from './Pages/Product/Components/Purchase';\nimport Order from './Pages/Order/Order';\n\nfunction Routes() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/signup\" component={Signup} />\n        <Route exact path=\"/\" component={Main} />\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/product\" component={ProductManagement} />\n        <Route exact path=\"/order\" component={Order} />\n        <Route exact path=\"/order/:id\" component={Order} />\n      </Switch>\n    </Router>\n  );\n}\nexport default Routes;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport regeneratorRuntime from 'regenerator-runtime';\nimport { useHistory, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { sellerNav, masterNav } from '../../Store/Reducer/sideNav';\nimport { saveNav } from '../../Store/Reducer/nav';\nimport { saveFilter } from '../../Store/Reducer/filter';\nimport { isMaster } from '../../Store/Reducer/userInfo';\nimport styled from 'styled-components';\nimport { useForm } from 'react-hook-form';\nimport API from '../../config';\nimport LoginFooter from './LoginFooter';\nexport default function Login() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [inputValue, setInputValue] = useState({\n    idValue: 'soojsooj',\n    pwValue: 'PW1!soojsooj',\n  });\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(data);\n  };\n\n  // 구조화\n  const { idValue, pwValue } = inputValue;\n\n  //id, password 입력 값 저장\n  const handleInput = (e) => {\n    const nextInputValue = {\n      ...inputValue,\n      [e.target.name]: e.target.value,\n    };\n    setInputValue(nextInputValue);\n    console.log('inputValue: ', inputValue);\n    console.log('idValue: ', idValue);\n  };\n\n  //master\n  //id:\n  // soojsooj\n  //pw:\n  // PW1!soojsooj\n\n  //seller\n  // id: seller1\n  //pw: PW1!seller1\n\n  const userInfo = useSelector(({ userInfo }) => userInfo);\n\n  // store에 있는 마스터 or 셀러 필터를 가져온다.\n  const { filter_list } = useSelector(({ filter }) => ({\n    filter_list: filter.filter_list,\n    // filter_list: filter.filter_list,\n  }));\n\n  const { nav_list } = useSelector(({ nav }) => ({\n    nav_list: nav.nav_list,\n    // filter_list: filter.filter_list,\n  }));\n\n  const loggedIn = async (e) => {\n    // e.preventDefault();\n    console.log('클릭', userInfo);\n    try {\n      const result = await axios.post(\n        `http://10.251.1.180:5000/account/signin`,\n        { identification: idValue, password: pwValue },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      const is_master = await result.data.success.is_master;\n      const nav_list = await result.data.success.nav_list;\n      const filter_list = await result.data.success.filter_list;\n      // if (\n      //   result.data.success.filter_list &&\n      //   result.data.success.nav_list &&\n      //   result.data.success.is_master\n      // ) {\n      //   dispatch(saveFilter(nav_list));\n      //   dispatch(saveNav(filter_list));\n      //   dispatch(isMaster(is_master));\n      // }\n\n      console.log('2', userInfo);\n      console.log('2', filter_list);\n      console.log('2', nav_list);\n\n      if (result.data.success) {\n        localStorage.setItem('token', result.data.success.Authorization);\n        dispatch(saveFilter(nav_list));\n        dispatch(saveNav(filter_list));\n        dispatch(isMaster(is_master));\n        history.push('/home');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    // postData();\n    // console.log(result);\n    // dispatch(isMaster(true));\n    // dispatch(saveNav());\n    // dispatch(saveFilter());\n\n    // const test = [1, 2, 3];\n\n    // dispatch(saveNav(test));\n    // console.log(nav);\n    // const getNav = () => {\n    //   dispatch(saveNav([1, 2, 3]));\n    // };\n    // getNav();\n    // console.log(nav);\n\n    // console.log(result);\n    // try {\n    //   fetch(`http://192.168.7.31:5000/account/signin`, {\n    //     method: 'POST',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //     },\n    //     body: JSON.stringify({\n    //       identification: idValue,\n    //       password: pwValue,\n    //     }),\n    //   })\n    //     // .then((response) => console.log(response));\n    //     .then((response) => response.json())\n    //     .then((result) => console.log(result));\n    // } catch (err) {\n    //   console.log(err);\n    // }\n    // .then((response) => {\n    //   if (response.token) {\n    //     localStorage.setItem('wtw-token', response.token);\n    //   }\n    // });\n    // .then((result) => console.log('result: ', result));\n    // .then((result) => {\n    //   if (result.data.Authorization) {\n    //     localStorage.setItem('token', result.data.Authorization);\n    //     alert('로그인 성공');\n    //     // history.push('./');\n    //   } else if (result.data.message === 'UNAUTHORIZED') {\n    //     alert('아이디와 비밀번호를 확인해주세요');\n    //   }\n    // });\n  };\n\n  const sideNav = useSelector(({ sideNav }) => sideNav);\n\n  console.log(sideNav);\n  return (\n    <Container>\n      <Content>\n        <Logo alt='브랜디로고' src='/public/Images/logo2.png' />\n        <LoginBox>\n          <LoginTitle>브랜디 어드민 로그인</LoginTitle>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Input\n              name='idValue'\n              ref={register({ required: true })}\n              placeholder='셀러 아이디'\n              className={errors.idValue && 'ErrorInput'}\n              onChange={handleInput}\n            />\n            {/* id와 password가 입력되지 않았을 때 나타날 오류 */}\n            {errors.idValue && errors.pwValue && <p>아이디를 입력해주세요</p>}\n            <Input\n              name='pwValue'\n              // ref={register({ required: true, pattern: /^[A-Za-z]+$/i })}\n              ref={register({ required: true })}\n              placeholder='셀러 비밀번호'\n              className={errors.pwValue && 'ErrorInput'}\n              onChange={handleInput}\n            />\n            {/* id와 password가 입력되지 않았을 때 나타날 오류 */}\n            {errors.pwValue && <p>비밀번호를 입력해주세요</p>}\n\n            <Button onClick={loggedIn}>로그인</Button>\n            {/* <Button>로그인</Button> */}\n            <Join>\n              <p>아직 셀러가 아니신가요?</p>\n              <p>\n                <Link to='/Signup'>회원가입하기</Link>\n              </p>\n            </Join>\n          </form>\n        </LoginBox>\n      </Content>\n      <LoginFooter />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  height: 100vh;\n  background-color: #fafafa;\n`;\n\nconst Content = styled.div`\n  ${({ theme }) => theme.flex('center', 'center', 'column')}\n  height: 100vh;\n  padding: 65px 0 50px;\n\n  p {\n    margin-top: 5px;\n    font-size: 12px;\n    font-weight: bold;\n  }\n`;\n\nconst Logo = styled.img`\n  width: 130px;\n  margin: 0 auto 40px auto;\n`;\n\nconst LoginBox = styled.div`\n  width: 380px;\n  height: 380px;\n  padding: 64px 30px 0 30px;\n  background-color: #fff;\n  border-radius: 20px;\n`;\n\nconst LoginTitle = styled.h3`\n  margin: 0 0 25px 0;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  margin: 5px 0;\n  padding: 13px 16px;\n  border: 1px solid #e5e5e5;\n  border-radius: 8px;\n\n  &.ErrorInput {\n    border: 1px solid #b94a48;\n  }\n`;\n\nconst Check = styled.div`\n  ${({ theme }) => theme.flex('space-between', 'center')}\n  margin-top: 20px;\n`;\n\nconst Label = styled.label`\n  ${({ theme }) => theme.flex(null, 'center')}\n  color: ${(props) => props.color};\n  font-weight: ${(props) => props.fontWeight};\n  font-size: 12px;\n`;\n\nconst Checkbox = styled.input`\n  width: 15px;\n  height: 15px;\n  margin-right: 5px;\n  font-weight: 100;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  margin-top: 20px;\n  padding: 13px 0;\n  background-color: black;\n  border-radius: 8px;\n  color: white;\n  text-align: center;\n`;\n\nconst Join = styled.div`\n  ${({ theme }) => theme.flex('center', 'center')}\n  margin-top: 20px;\n\n  p {\n    margin-right: 5px;\n    font-size: 12px;\n    font-weight: 100;\n    :nth-child(2) {\n      color: #3c72ff;\n      font-weight: bold;\n    }\n  }\n`;\n","export const API = 'http://192.168.7.31:';\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { useForm } from 'react-hook-form';\nimport InputMask from 'react-input-mask';\nimport LoginFooter from '../Login/LoginFooter';\nimport {\n  TiUserOutline,\n  TiLockClosedOutline,\n  TiPhoneOutline,\n  TiInputCheckedOutline,\n  TiSortAlphabeticallyOutline,\n} from 'react-icons/ti';\nimport { AiOutlineWarning } from 'react-icons/ai';\n\nexport default function Signup() {\n  const { register, errors, watch, handleSubmit } = useForm({ mode: 'all' });\n  const onSubmit = (data) => {\n    console.log(data);\n    if (confirm('입력하신 정보로 셀러신청을 하시겠습니까?') === true) {\n      history.push('/Login');\n    }\n  };\n  const history = useHistory();\n\n  function handleCancelBtn() {\n    if (confirm('브랜디 회원가입을 취소하시겠습니까?') === true) {\n      history.push('/Login');\n    } else {\n      return false;\n    }\n  }\n\n  // const hadleRadioBtn = (event) => {\n  //   let obj = {};\n  //   obj[event.target.value] = event.target.checked;\n  //   setRadioGroup(obj);\n  // };\n  // console.log(radioGroup);\n\n  return (\n    <Container>\n      <Content>\n        <Logo alt='브랜디로고' src='/public/Images/logo2.png' />\n        <Title>셀러 회원 가입</Title>\n        <hr></hr>\n        <SignupBox>\n          <SubTitle>정보입력</SubTitle>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <InfoTitle>가입 정보</InfoTitle>\n            {/*id를 입력하지 않거나 5글자 미만으로 입력한 경우, border에 색을 주기 위해 className 활용*/}\n            <IconInput className={errors.id && 'ErrorInput'}>\n              {/* id에 에러가 발생할 경우, */}\n              <TiUserOutline color={errors.id ? '#b94a48' : null} />\n              <input\n                name='id'\n                type='text'\n                placeholder='아이디'\n                ref={register({\n                  required: '필수 입력항목 입니다. ',\n                  minLength: {\n                    value: 5,\n                    message: '아이디의 최소 길이는 5글자 입니다.',\n                  },\n                })}\n              />\n            </IconInput>\n            {errors.id && <p>{errors.id.message}</p>}\n            <IconInput className={errors.password && 'ErrorInput'}>\n              <TiLockClosedOutline color={errors.password ? '#b94a48' : null} />\n              <input\n                name='password'\n                type='password'\n                placeholder='비밀번호'\n                ref={register({\n                  required: '필수 입력항목 입니다.',\n                  //패스워드 최소 8글자 최대 20글자, 영문 대소문자, 특수문자\n                  pattern: {\n                    value: /^.*(?=^.{8,20}$)(?=.*\\d)(?=.*[a-zA-Z])(?=.*[!@#$%^&+=]).*$/,\n                    message:\n                      '비밀번호는 8~20글자의 영문대소문자, 숫자, 특수문자를 조합해야 합니다.',\n                  },\n                })}\n              />\n            </IconInput>\n            {errors.password && <p>{errors.password.message}</p>}\n            <IconInput className={errors.rePw && 'ErrorInput'}>\n              <TiInputCheckedOutline color={errors.rePw ? '#b94a48' : null} />\n              <input\n                name='rePw'\n                type='password'\n                placeholder='비밀번호 재입력'\n                ref={register({\n                  validate: (value) =>\n                    value === watch('password') ||\n                    '비밀번호가 일치하지 않습니다',\n                })}\n              />\n            </IconInput>\n            {errors.rePw && <p>{errors.rePw.message}</p>}\n            <InfoTitle>\n              담당자 정보\n              <ExtraInfo primary> (*실제 샵을 운영하시는 분)</ExtraInfo>\n            </InfoTitle>\n            <IconInput className={errors.phone && 'ErrorInput'}>\n              <TiPhoneOutline color={errors.phone ? '#b94a48' : null} />\n              <InputMask\n                mask='999-9999-9999'\n                name='phone'\n                type='tel'\n                placeholder='핸드폰번호'\n                ref={register({\n                  required: '필수 입력항목입니다.',\n                })}\n              />\n            </IconInput>\n            {errors.phone && <p>{errors.phone.message}</p>}\n            <ExtraInfo>\n              <AiOutlineWarning />\n              입점 신청 후 브랜디 담당자가 연락을 드릴 수 있으니 정확한 정보를\n              기입해주세요.\n            </ExtraInfo>\n            <InfoTitle>셀러 정보</InfoTitle>\n            {/* <IntputRadio onClick={handleRadioValue}> */}\n            <IntputRadio>\n              <label>\n                <input\n                  name='seller'\n                  name='shoppingmall'\n                  type='radio'\n                  defaultChecked='checked'\n                  ref={register()}\n                />\n                쇼핑몰\n              </label>\n              <label>\n                <input\n                  name='seller'\n                  name='market'\n                  type='radio'\n                  ref={register()}\n                />\n                마켓\n              </label>\n              <label>\n                <input\n                  name='seller'\n                  name='roadshop'\n                  type='radio'\n                  ref={register()}\n                />\n                로드샵\n              </label>\n              <label>\n                <input\n                  name='seller'\n                  name='designer'\n                  type='radio'\n                  ref={register()}\n                />\n                디자이너브랜드\n              </label>\n              <label>\n                <input\n                  name='seller'\n                  name='general'\n                  type='radio'\n                  ref={register()}\n                />\n                제너럴브랜드\n              </label>\n              <label>\n                <input\n                  name='seller'\n                  name='national'\n                  type='radio'\n                  ref={register()}\n                />\n                내셔널브랜드\n              </label>\n              <label>\n                <input\n                  name='seller'\n                  name='beauty'\n                  type='radio'\n                  ref={register()}\n                />\n                뷰티\n              </label>\n            </IntputRadio>\n            <IconInput className={errors.sellerName && 'ErrorInput'}>\n              <TiSortAlphabeticallyOutline\n                color={errors.sellerName ? '#b94a48' : null}\n              />\n              <input\n                name='sellerName'\n                placeholder='셀러명 (상호)'\n                ref={register({\n                  required: '필수 입력항목입니다.',\n                  pattern: {\n                    value: /^[가-힣a-zA-Z0-9+]+$/,\n                    message: '한글,영문,숫자만 입력해주세요.',\n                  },\n                })}\n              />\n            </IconInput>\n            {errors.sellerName && <p>{errors.sellerName.message}</p>}\n            <IconInput className={errors.engSellerName && 'ErrorInput'}>\n              <TiSortAlphabeticallyOutline\n                color={errors.engSellerName ? '#b94a48' : null}\n              />\n              <input\n                name='engSellerName'\n                placeholder='영문 셀러명 (영문상호)'\n                ref={register({\n                  required: '필수 입력항목입니다.',\n                  pattern: {\n                    value: /^[A-Za-z0-9+]*$/,\n                    message: '셀러 영문명은 소문자만 입력가능합니다.',\n                  },\n                })}\n              />\n            </IconInput>\n            {errors.engSellerName && <p>{errors.engSellerName.message}</p>}\n            <IconInput className={errors.customerContact && 'ErrorInput'}>\n              <TiPhoneOutline\n                color={errors.customerContact ? '#b94a48' : null}\n              />\n              <input\n                name='customerContact'\n                placeholder='고객센터 전화번호'\n                ref={register({\n                  required: '필수 입력항목입니다.',\n                })}\n              />\n            </IconInput>\n            {errors.customerContact && <p>{errors.customerContact.message}</p>}\n            <ButtonGroup>\n              <Button primary type='submit' value='신청' />\n              <Button readOnly value='취소' onClick={handleCancelBtn} />\n            </ButtonGroup>\n          </form>\n        </SignupBox>\n      </Content>\n      <LoginFooter />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: #fafafa;\n`;\n\nconst Content = styled.div`\n  ${({ theme }) => theme.flex('center', 'center', 'column')};\n  width: 500px;\n  height: auto;\n  margin: 0 auto;\n  padding: 30px;\n  background-color: #fff;\n  overflow: auto;\n\n  hr {\n    width: 100%;\n    margin-bottom: 20px;\n    border: 1px solid #e0dfdf;\n  }\n`;\n\nconst Logo = styled.img`\n  width: 130px;\n  margin: 0 auto 40px auto;\n`;\n\nconst Title = styled.h3`\n  width: 100%;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 24px;\n  font-weight: 100;\n`;\n\nconst SignupBox = styled.div`\n  ${({ theme }) => theme.flex('center', 'center', 'column')};\n  width: 100%;\n\n  p {\n    margin-left: 5px;\n    margin-bottom: 10px;\n    font-size: 12px;\n    font-weight: bold;\n    color: #b94a48;\n  }\n`;\n\nconst SubTitle = styled.div`\n  width: 408px;\n  height: 45px;\n  padding-top: 10px;\n  background-color: #353535;\n  color: white;\n  font-size: 20px;\n  text-align: center;\n`;\n\nconst InfoTitle = styled.div`\n  ${({ theme }) => theme.flex(null, 'center')};\n  margin: 30px 0 5px 0;\n  font-size: 18px;\n\n  span {\n    color: #1e90ff;\n    font-size: 14px;\n    vertical-align: center;\n  }\n`;\n\nconst ExtraInfo = styled.div`\n  display: flex;\n  margin-left: 5px;\n  color: #1e90ff;\n  font-size: 12px;\n  ${(props) =>\n    props.primary &&\n    css`\n      font-size: 14px;\n    `};\n`;\n\nconst IconInput = styled.div`\n  ${({ theme }) => theme.flex(null, 'center')}\n  width: 100%;\n  margin: 10px 0;\n  padding: 13px 16px;\n  border: 1px solid #e5e5e5;\n  border-radius: 8px;\n\n  svg {\n    width: 18px;\n    height: 18px;\n  }\n\n  input {\n    margin-left: 10px;\n  }\n  &.ErrorInput {\n    border: 1px solid #b94a48;\n  }\n`;\n\nconst IntputRadio = styled.div`\n  ${({ theme }) => theme.flex(null, 'center')}\n  flex-wrap: wrap;\n  font-size: 13px;\n  line-height: 1.4;\n  label {\n    margin-right: 8px;\n    input {\n      margin-right: 5px;\n    }\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  ${({ theme }) => theme.flex('center')}\n  margin-top: 20px;\n`;\n\nconst Button = styled.input`\n  padding: 6px 12px;\n  width: 49px;\n  background-color: #d9534f;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  font-size: 14px;\n  text-align: center;\n  color: #fff;\n  ${(props) =>\n    props.primary &&\n    css`\n      background-color: #5bc0de;\n      border-top-left-radius: 4px;\n      border-bottom-left-radius: 4px;\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n    `};\n`;\n\nconst SIGNUP_SELLER_LIST = [\n  '쇼핑몰',\n  '마켓',\n  '로드샵',\n  '디자이너브랜드',\n  '제너럴브랜드',\n  '내셔널브랜드',\n  '뷰티',\n];\n\n// const SIGNUP_INFO_LIST = [\n//   {\n//     id: 1,\n//     title: '가입 정보',\n//     inputList: [\n//       {\n//         name: 'id',\n//         type: 'text',\n//         icon: <TiUserOutline />,\n//         placeholder: '아이디',\n//       },\n//       {\n//         name: 'password',\n//         type: 'password',\n//         icon: <TiLockClosedOutline />,\n//         placeholder: '비밀번호',\n//       },\n//       {\n//         name: 'rePasswrod',\n//         type: 'password',\n//         icon: <TiInputCheckedOutline />,\n//         placeholder: '비밀번호 재입력',\n//       },\n//     ],\n//   },\n//   {\n//     id: 2,\n//     title: '담당자 정보',\n//     inputList: [\n//       {\n//         name: 'phone',\n//         type: 'text',\n//         icon: <FiPhoneCall />,\n//         placeholder: '핸드폰번호',\n//       },\n//     ],\n//   },\n//   {\n//     id: 3,\n//     title: '셀러 정보',\n//     inputList: [\n//       {\n//         name: 'sellerName',\n//         type: 'text',\n//         icon: <TiSortAlphabeticallyOutline />,\n//         placeholder: '셀러명 (상호)',\n//       },\n//       {\n//         name: 'englishSellerName',\n//         type: 'text',\n//         icon: <TiSortAlphabeticallyOutline />,\n//         placeholder: '영문 셀러명 (영문상호)',\n//       },\n//       {\n//         name: 'customerCenterContact',\n//         type: 'text',\n//         icon: <FiPhoneCall />,\n//         placeholder: '고객센터 전화번호',\n//       },\n//     ],\n//   },\n// ];\n","import React from 'react';\nimport styled from 'styled-components';\nimport Header from '../../Components/Header/Header';\nimport Nav from '../../Components/Nav/Nav';\nimport Footer from '../../Components/Footer/Footer';\n\nexport default function Main() {\n  return (\n    <div>\n      <Header />\n      <Section>\n        <Nav />\n        <Test>\n          🌈 ✨ 🦾 🙌 🔥 <br />\n          브랜디 1팀 짱!!!!\n          <br /> 🥰 💚 👩‍💻 👨‍💻 💥\n        </Test>\n      </Section>\n      <Footer />\n    </div>\n  );\n}\n\nconst Section = styled.div`\n  display: flex;\n`;\n\nconst Test = styled.div`\n  ${({ theme }) => theme.flex('center', 'center', '')}\n  width: 100%;\n  height: 100vh;\n  padding-top: 45px;\n  background: pink;\n  border-radius: 0 0 0 14px;\n  font-size: 70px;\n  line-height: 1.5;\n  text-align: center;\n  color: white;\n`;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport SubList from './SubList';\nimport { KeyboardArrowLeft, KeyboardArrowDown } from '@styled-icons/material';\nimport {\n  VscHome,\n  VscGraph,\n  VscComment,\n  VscAccount,\n  VscInfo,\n  VscPackage,\n  VscGift,\n  VscJersey,\n} from 'react-icons/vsc';\nimport {\n  AiOutlineCalculator,\n  AiOutlineShoppingCart,\n  AiOutlineEye,\n  AiOutlineSmile,\n} from 'react-icons/ai';\n\nexport default function NavList({\n  menuTitle,\n  subTitle,\n  index,\n  subActive,\n  active,\n  setSubActive,\n  handlePage,\n  sidebarSmall,\n  link,\n}) {\n  const history = useHistory();\n  const isSubActive = index === subActive;\n  const isPageActive = index === active[0];\n  const [isHoverActive, setIsHoverActive] = useState(0);\n\n  const toggleSubNav = (index) => {\n    // 활성화 된 메뉴를 비활성화, 또는 새로운 메뉴를 활성화\n    isSubActive ? setSubActive(0) : setSubActive(index);\n  };\n\n  // nav바가 접혀있을 때, 호버시 효과\n  const handleHover = (index) => {\n    sidebarSmall && setIsHoverActive(index);\n  };\n\n  // 해당 nav가 클릭되었을 때 토글바 실행\n  const handleClick = (index, link) => {\n    toggleSubNav(index);\n    if (link === 'order') {\n      return;\n    }\n    link && history.push('/' + link);\n  };\n\n  return (\n    <Fragment>\n      <NavElement\n        onClick={() => handleClick(index, link)}\n        isPageActive={isPageActive}\n        isSubActive={isSubActive}\n        sidebarSmall={sidebarSmall}\n        onMouseEnter={() => handleHover(index)}\n        onMouseLeave={() => handleHover(0)}\n        hoverActive={index === isHoverActive}\n      >\n        <List>\n          {NAV_ICONS[menuTitle]}\n          {/* 사이드바 사이즈에 따른 카테고리의 형태 변화*/}\n          {sidebarSmall ? (\n            <HoverContainer>\n              <CategorySmall active={index === isHoverActive}>\n                <span>{menuTitle}</span>\n              </CategorySmall>\n              {subTitle && index === isHoverActive && (\n                <SubList\n                  categoryIdx={index}\n                  handlePage={handlePage}\n                  subTitle={subTitle}\n                  active={active}\n                  sidebarSmall={sidebarSmall}\n                />\n              )}\n            </HoverContainer>\n          ) : (\n            <span>{menuTitle}</span>\n          )}\n        </List>\n        {/* 사이드 바가 확장되어 있고 subcategory가 있는 경우에만 우측 화살표 아이콘 출력 */}\n        {!sidebarSmall && subTitle && (\n          <ArrowIcon isSubActive={isSubActive} isPageActive={isPageActive}>\n            <KeyboardArrowLeft size={19} />\n          </ArrowIcon>\n        )}\n      </NavElement>\n      {!sidebarSmall && isSubActive && subTitle && (\n        <SubList\n          categoryIdx={index}\n          handlePage={handlePage}\n          subTitle={subTitle}\n          active={active}\n          sidebarSmall={sidebarSmall}\n        />\n      )}\n    </Fragment>\n  );\n}\n\nconst NavElement = styled.li`\n  ${({ theme }) => theme.flex('space-between', 'center', 'row')}\n  position: relative;\n  width: 215px;\n  height: 40px;\n  padding: 10px 15px;\n  border-bottom: 1px solid #444;\n  color: #aaa;\n  cursor: pointer;\n  ${({ isSubActive }) =>\n    isSubActive &&\n    css`\n      background: #2b2b30;\n      border-bottom: 0px solid #444;\n    `};\n  ${({ isPageActive }) =>\n    isPageActive &&\n    css`\n      background: #2b2b30;\n      border-right: 4px solid #d12610;\n    `};\n  &:hover {\n    background-color: #2b2b30;\n  }\n  ${({ sidebarSmall }) =>\n    sidebarSmall &&\n    css`\n      width: 40px;\n      padding-left: 10px;\n    `}\n  ${({ hoverActive }) =>\n    hoverActive &&\n    css`\n      width: 214px;\n    `}\n`;\n\nconst List = styled.div`\n  ${({ theme }) => theme.flex('', 'center', 'row')}\n  position: absolute;\n  span {\n    margin-left: 10px;\n    font-size: 14px;\n    color: #eee;\n  }\n`;\n\nconst HoverContainer = styled.div`\n  position: relative;\n`;\n\nconst CategorySmall = styled.div`\n  ${({ theme }) => theme.flex('', 'center', 'row')}\n  position: relative;\n  top: 0;\n  left: 0;\n  padding-left: 5px;\n  display: ${({ active }) => (active ? 'block' : 'none')};\n`;\n\nconst ArrowIcon = styled.span`\n  position: absolute;\n  right: 15px;\n  color: #666;\n  ${({ isSubActive }) =>\n    isSubActive &&\n    css`\n      transform: rotate(270deg);\n      color: #a6a8ae;\n    `};\n  ${({ isPageActive }) =>\n    isPageActive &&\n    css`\n      color: white;\n    `};\n`;\n\nconst NAV_ICONS = {\n  홈: <VscHome size=\"20\" />,\n  공지사항: <VscComment size=\"20\" />,\n  통계: <VscGraph size=\"20\" />,\n  주문관리: <AiOutlineShoppingCart size=\"20\" />,\n  '취소/환불 관리': <VscPackage size=\"20\" />,\n  상품관리: <VscJersey size=\"20\" />,\n  고객응대관리: <AiOutlineSmile size=\"20\" />,\n  정산관리: <AiOutlineCalculator size=\"20\" />,\n  진열관리: <AiOutlineEye size=\"20\" />,\n  '기획전/쿠폰관리': <VscGift size=\"20\" />,\n  회원관리: <VscAccount size=\"20\" />,\n  고객센터: <VscInfo size=\"20\" />,\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\n\nexport default function SubList({\n  active,\n  subTitle,\n  categoryIdx,\n  handlePage,\n  sidebarSmall,\n}) {\n  const history = useHistory();\n  const [subActive, setSubActive] = useState(\n    active[0] === categoryIdx ? active[1] : 0\n  );\n\n  const goToMenu = (subIdx, link) => {\n    handlePage(categoryIdx, subIdx);\n    setSubActive(subIdx);\n\n    // order 페이지로 이동해야되는 url에는 order를 붙여준다.\n    if (\n      link === 'prepareList' ||\n      link === 'deliveryPrepareList' ||\n      link === 'deliveryList' ||\n      link === 'deliveryCompleteList' ||\n      link === 'orderConfirmList'\n    ) {\n      return history.push('/order/' + link);\n    }\n    // 여기에서 history push로 페이지 이동시켜주면 돼요!\n    history.push(link);\n  };\n\n  return (\n    <SubContainer sidebarSmall={sidebarSmall}>\n      {subTitle.map((el, idx) => (\n        <Subcategory\n          index={idx + 1}\n          subActive={subActive}\n          key={el.sub_menu_id}\n          onClick={() => goToMenu(idx + 1, el.sub_url)}\n          sidebarSmall={sidebarSmall}\n        >\n          {el.sub_menu_title}\n        </Subcategory>\n      ))}\n    </SubContainer>\n  );\n}\n\nconst SubContainer = styled.ul`\n  margin: 8px 0;\n  ${({ sidebarSmall }) =>\n    sidebarSmall &&\n    css`\n      background: #35373a;\n      position: absolute;\n      top: 20px;\n      left: 11px;\n      width: 173px;\n    `}\n`;\n\nconst Subcategory = styled.li`\n  ${({ theme }) => theme.flex('', 'center', '')}\n  width: 215px;\n  height: 30px;\n  padding: 5px 0 5px 35px;\n  color: #cecfd3;\n  font-size: 14px;\n  cursor: pointer;\n  &:hover {\n    color: white;\n    background-color: #414247;\n  }\n  ${({ index, subActive }) =>\n    index === subActive &&\n    css`\n      color: white;\n      background-color: #414247;\n    `}\n  ${({ sidebarSmall }) =>\n    sidebarSmall &&\n    css`\n      width: 173px;\n      padding-left: 15px;\n    `}\n`;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport regeneratorRuntime from 'regenerator-runtime';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport dateFormatChange from '../../Components/ChangeTimeFormat';\nimport { ko } from 'date-fns/esm/locale';\nimport DatePicker from 'react-datepicker';\nimport '../../Styles/datepick.css';\nimport styled from 'styled-components';\nimport ProductDetail from './Components/ProductDetail';\nimport Nav from '../../Components/Nav/Nav';\nimport Header from '../../Components/Header/Header';\nimport Footer from '../../Components/Footer/Footer';\nimport Purchase from './Components/Purchase';\n\nexport default function ProductManagement() {\n  const dispatch = useDispatch();\n  // 모달창 출력 유무를 관리\n  const [showModal, setShowModal] = useState(false);\n  // 마스터에만 사용되는 데이터를 관리\n  const [differentFilter, setDifferentFilter] = useState();\n  // 공통으로 사용되는 데이터를 관리\n  const [product, setProduct] = useState();\n  // 리덕스에서 가져온 필터를 상태로 관리\n  const [filters, setFilters] = useState({});\n  // 각 필터의 상태를 선택된 상태를 배열로 관리\n  const [filterStatus, setFilterStatus] = useState();\n  // 현재 페이지 관리\n  const [currentDate, setCurrentDate] = useState({\n    startDate: '',\n    endDate: '',\n  });\n  // 현재 페이지 관리\n  const [activePage, setActivePage] = useState(1);\n  const sellerNameId = 'seller_name';\n  const attributeId = 'attribute';\n  const salesId = 'sale';\n  const displayId = 'display';\n  const discountId = 'discount';\n\n  // axios할 쿼리url 생성\n  // const [queryUrl, setQueryUrl] = useState('');\n  // 쿼리스트링을 만들 상태를 따로 관리\n  const [query, setQuery] = useState({\n    startDate: null,\n    endDate: null,\n    sellerName: null,\n    sellerDetail: null,\n    productDetail: null,\n    sellerAttribute: [],\n    salesStatus: null,\n    displayStatus: null,\n    discountStatus: null,\n    limit: 10,\n    offset: 0,\n  });\n\n  // store에서 유저타입과 토큰을 가져온다.\n  const userType = useSelector(({ userInfo }) => userInfo);\n\n  // store에 있는 마스터 or 셀러 필터를 가져온다.\n  const { filter_list } = useSelector(({ filter }) => ({\n    filter_list: filter.filter_list,\n    // filter_list: filter.filter_list,\n  }));\n\n  // get을 통하여 들어오는 필터의 상태별로 각 버튼의 boolean 생성\n  const createFilter = (data) => {\n    const allFilter =\n      data &&\n      data.filter_list.map((el) => {\n        return {\n          [el.filterTitle]: new Array(el.category && el.category.length)\n            .fill()\n            .map((_, index) => (index === 0 ? true : false)),\n          selectedId: '',\n        };\n      });\n\n    setFilterStatus(allFilter);\n  };\n\n  ///public/Data/DataProductManage.json\n  ///http://10.58.7.141:5000/product\n\n  // Test : json형식 mock-data 생성\n  // axios get을 사용하여 데이터를 받아온다.\n\n  const getData = async (param) => {\n    try {\n      const result = await axios.get(`/public/Data/DataProductManage.json`, {\n        params: param,\n        timeout: 3000, //3초,\n        // paramsSerializer: function (params) {\n        //   return Qs.stringify(params, { arrayFormat: 'brackets' });\n        // },\n      });\n\n      // 받아온 데이터를 비구조 할당하여 data에 저장한다.\n      const { DataProductManage } = result.data;\n\n      // 유저 타입이 마스터인 경우,\n      if (userType && userType) {\n        // 셀러명 검색 필터만 분리하여 정의\n\n        const masterData =\n          filter_list && filter_list.filter((el) => el.id === sellerNameId)[0];\n\n        const sellerData = {\n          ...filter_list,\n          filter_list: filter_list.filter((el) => el.id !== sellerNameId),\n        };\n\n        // 각 필터의 상태를 관리하는 배열이 없다면 필터의 길이별로 배열 생성\n        if (!filterStatus) {\n          createFilter(sellerData);\n        }\n\n        // 마스터에서만 사용하는 데이터 저장\n        setDifferentFilter(masterData);\n        // 상품 리스트에 보여줄 데이터를 저장\n        setProduct(DataProductManage);\n        // 공용으로 사용하는 데이터 저장\n        setFilters(sellerData);\n      }\n      // 유저 타입이 셀러인 경우,\n      if (!userType) {\n        // 마스터와 셀러 공용 필터를 따로 저장\n        setProduct(DataProductManage);\n        // 각 필터별로 상태를 생성\n        setFilters(filter_list);\n        // 각 필터의 상태를 관리하는 배열이 없다면 필터의 길이별로 배열 생성\n        if (!filterStatus) {\n          createFilter(filter_list);\n        }\n      }\n    } catch (err) {\n      if (err.response) {\n        console.log('서버 응답을 받았으나 성공하지 못했습니다.');\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        console.log('서버 응답 실패');\n        console.log(error.request);\n      } else {\n        console.log(error.message);\n      }\n      console.log(error.config);\n    }\n  };\n\n  useEffect(() => {\n    getData(null);\n  }, [userType, filter_list]);\n\n  // 페이지 마운트시 axios하여 상품관리 페이지에 필요한 데이터를 get\n  useEffect(() => {\n    getData(null);\n  }, []);\n\n  // 각 필터 선택시 true <-> false로 바꿔준다.\n  const changeFilter = (id, idx, name, filterId) => {\n    // 단일선택하는 필터인 경우\n    if (filterId !== attributeId) {\n      setFilterStatus(\n        filterStatus.map((el) =>\n          !!el[name]\n            ? {\n                ...el,\n                id: filterId,\n                [name]: el[name].map((_, index) => {\n                  return index === idx ? true : false;\n                }),\n                selectedId: id,\n              }\n            : el\n        )\n      );\n    }\n\n    // 다중선택하는 필터인 경우\n    if (filterId === attributeId) {\n      // 필터 전체를 관리하는 배열에서 다중선택하는 필터인 셀러속성이 들어있는 배열만 가져온다.\n      const multiFilter =\n        filterStatus && filterStatus.filter((el) => el && !!el[name] && el)[0];\n\n      // 버튼을 클릭하고 해제하는 함수\n      const changeBtn = multiFilter[name].map((el, index) => {\n        return index === idx ? !el : el;\n      });\n\n      // 전체버튼이 아닌 다른 버튼이 눌렸을 때, 전체 버튼 해제\n      if (idx !== 0) {\n        changeBtn[0] = false;\n      }\n\n      //버튼이 눌렸을 때, 각 카테고리의 id를 상태로 저장하는 함수\n      const addId = (idx) => {\n        // 버튼이 클릭되었을 때, 선택된 id 배열에 해당 카테고리 id 추가\n        if (\n          multiFilter[name].map((el, index) => {\n            return index === idx && !el;\n          })[idx]\n        )\n          return [...multiFilter.selectedId].concat(id);\n\n        // 버튼이 해제되었을 때, 선택된 id 배열에서 해당 id 제거\n        if (\n          !multiFilter[name].map((el, index) => {\n            return index === idx && !el;\n          })[idx]\n        )\n          return (\n            // 선택되어 있는 상태를 관리하는 배열에서 클릭된 id를 제외한 값만 필터링한다.\n            multiFilter.selectedId &&\n            multiFilter.selectedId.filter((el) => {\n              return el !== id && el;\n            })\n          );\n      };\n\n      // 전체 상태에서 바꿔줄 값만 필터링하여 바꿔서 끼워준다.\n      const setFilter = (btnStatus) => {\n        return filterStatus.map((el) => {\n          return !!el[name] ? btnStatus : el;\n        });\n      };\n\n      // 전체 버튼이 눌렸을 때,\n      const allSelectBtn = changeBtn[0];\n\n      // 모든 버튼이 눌리게 되면,\n      const allSelected = changeBtn.slice(1).every((item) => {\n        return item;\n      });\n\n      // 모든 버튼이 눌리지 않았을 때,\n      const allNotSelected = changeBtn.slice(1).every((item) => {\n        return !item;\n      });\n\n      // 전체가 선택되어야 할 조건\n      const allCondition = allSelectBtn || allSelected || allNotSelected;\n\n      //전체가 선택되어야할 조건이 아니라면\n      if (!allCondition) {\n        setFilterStatus(\n          setFilter({\n            id: filterId,\n            [name]: changeBtn,\n            selectedId: addId(idx),\n          })\n        );\n      }\n      // 전체가 선택되어야 한다면\n      if (allCondition) {\n        setFilterStatus(\n          setFilter({\n            id: filterId,\n            [name]: multiFilter[name].map((el, index) => {\n              return index === 0 ? true : false;\n            }),\n            selectedId: [''],\n          })\n        );\n      }\n    }\n  };\n\n  // 검색 버튼일 눌리게 되면 동작할 함수.\n  const sendData = () => {\n    console.log(\n      'test',\n      filterStatus &&\n        filterStatus.filter((el) => {\n          return el.id === salesId && el.id;\n        })[0] &&\n        filterStatus.filter((el) => {\n          return el.id === salesId && el.id;\n        })[0].selectedId\n    );\n\n    // 셀러속성의 현재 버튼이 눌린 상태\n    const attribute =\n      filterStatus &&\n      filterStatus.filter((el) => {\n        return !!el['셀러속성'] && el.id;\n      })[0] &&\n      filterStatus\n        .filter((el) => {\n          return !!el['셀러속성'] && el.selectedId;\n        })[0]\n        .selectedId.reduce((acc, item) => {\n          return acc ? acc + ',' + item : acc + item;\n        });\n\n    // 판매여부의 현재 버튼이 눌린 상태\n    const salse =\n      filterStatus &&\n      filterStatus.filter((el) => {\n        return el.id === salesId && el.id;\n      })[0] &&\n      filterStatus.filter((el) => {\n        return el.id === salesId && el.id;\n      })[0].selectedId;\n\n    // 진열여부의 현재 버튼이 눌린 상태\n    const display =\n      filterStatus &&\n      filterStatus.filter((el) => {\n        return el.id === displayId && el.id;\n      })[0] &&\n      filterStatus.filter((el) => {\n        return el.id === displayId && el.id;\n      })[0].selectedId;\n\n    // 할인여부의 현재 버튼이 눌린 상태\n    const discount =\n      filterStatus &&\n      filterStatus.filter((el) => {\n        return el.id === discountId && el.id;\n      })[0] &&\n      filterStatus.filter((el) => {\n        return el.id === discountId && el.id;\n      })[0].selectedId;\n\n    const test = query.sellerDetail;\n    console.log({ ...query });\n\n    // 상태로 저장하고 있던 값을 params로 보내기 위해 data form 변경\n    const queryObj = {\n      ...query,\n      offset:\n        (activePage - 1) * query.limit !== 0\n          ? (activePage - 1) * query.limit\n          : null,\n      limit: Number(query.limit) !== 10 ? query.limit : null,\n      sellerAttribute: attribute ? attribute : null,\n      salesStatus: salse !== '' ? salse : null,\n      displayStatus: display !== '' ? display : null,\n      discountStatus: discount !== '' ? discount : null,\n      [`${query.sellerDetail}`]: query.productDetail,\n      sellerDetail: null,\n      productDetail: null,\n    };\n\n    console.log('전송');\n    console.log('전송된 파람스', queryObj);\n    //변경된 form을 param에 넣어 get Data\n    getData(queryObj);\n  };\n\n  // 검색버튼을 눌렀을 때 실행되는 함수\n  const handleSearch = () => {\n    sendData();\n    setActivePage(1);\n  };\n  // 초기화 버튼을 눌렀을 때, 상태를 초기화해준다.\n  const resetFilter = () => {\n    console.log('초기화');\n    createFilter(filters);\n    setQuery({\n      startDate: null,\n      endDate: null,\n      sellerName: null,\n      sellerDetail: null,\n      productDetail: null,\n      sellerAttribute: [],\n      salesStatus: null,\n      displayStatus: null,\n      discountStatus: null,\n      limit: Number(query.limit),\n      offset: Number(query.limit) ? Number(query.limit) : 10 * activePage,\n    });\n    setCurrentDate({\n      startDate: '',\n      endDate: '',\n    });\n  };\n\n  // DatePicker 라이브러리에서 지원하는 form과 관리하는 form이 달라서 따로 관리해주었다.\n  const handleEndDate = (date) => {\n    setCurrentDate({ ...currentDate, endDate: date });\n    setQuery({\n      ...query,\n      endDate: dateFormatChange(date),\n    });\n  };\n\n  // DatePicker 라이브러리에서 지원하는 form과 관리하는 form이 달라서 따로 관리해주었다.\n  const handleStartDate = (date) => {\n    setCurrentDate({ ...currentDate, startDate: date });\n    setQuery({\n      ...query,\n      startDate: dateFormatChange(date),\n    });\n  };\n\n  return (\n    <Fragment>\n      <Header />\n      <Main>\n        <Nav />\n        <Section>\n          <Purchase showModal={showModal} setShowModal={setShowModal} />\n          <h3>상품 관리</h3>\n          <FilterContainer>\n            <FilterCategoryTitle>\n              <FilterTitle>조회 기간</FilterTitle>\n              {/* 조회 가긴의 캘린더 렌더 */}\n              <InquiryperiodBox>\n                <SelectPeriod\n                  selected={currentDate.startDate || ''}\n                  locale={ko}\n                  dateFormat='yyyy-MM-dd'\n                  onChange={(date) => {\n                    handleStartDate(date);\n                  }}\n                  placeholderText='클릭해주세요.'\n                  shouldCloseOnSelect={false}\n                />\n                <span>~</span>\n                <SelectPeriod\n                  selected={currentDate.endDate || ''}\n                  locale={ko}\n                  dateFormat='yyyy-MM-dd'\n                  onChange={(date) => handleEndDate(date)}\n                  placeholderText='클릭해주세요.'\n                  shouldCloseOnSelect={false}\n                />\n              </InquiryperiodBox>\n            </FilterCategoryTitle>\n            <FiltersCategoryTitle>\n              {/* 마스터에만 있는 셀러명 필터 렌더 */}\n              {differentFilter && differentFilter.id === sellerNameId && (\n                <SelectFilterCategory>\n                  <FilterTitle>\n                    {differentFilter && differentFilter.filterTitle}\n                  </FilterTitle>\n                  <SellerSearchBox>\n                    <SellerSearch\n                      name='셀러이름'\n                      value={query.sellerName || ''}\n                      onChange={(e) =>\n                        setQuery({ ...query, sellerName: e.target.value })\n                      }\n                      type='text'\n                      placeholder='검색어를 입력하세요.'\n                    ></SellerSearch>\n                  </SellerSearchBox>\n                </SelectFilterCategory>\n              )}\n              <SelectFilterCategory>\n                <select\n                  value={query.sellerDetail || ''}\n                  onChange={(e) =>\n                    setQuery({ ...query, sellerDetail: e.target.value })\n                  }\n                >\n                  <option>Select</option>\n                  <option value='product_name'>상품명</option>\n                  <option value='product_number'>상품번호</option>\n                  <option value='product_code'>상품코드</option>\n                </select>\n                <SearchBox>\n                  <ProductSearch\n                    name='productDetail'\n                    value={query.productDetail || ''}\n                    onChange={(e) =>\n                      setQuery({ ...query, productDetail: e.target.value })\n                    }\n                    placeholder='검색어를 입력하세요.'\n                    type='text'\n                  ></ProductSearch>\n                </SearchBox>\n              </SelectFilterCategory>\n            </FiltersCategoryTitle>\n            {/* 각 필터별로 다른 name을 가지기 때문에 각각 렌더 */}\n            {filters.filter_list &&\n              filters.filter_list.map((cate, i) => {\n                return (\n                  <SelectFilterCategory cate={cate.category.length} key={i}>\n                    <SelectFilterTitle>{cate.filterTitle} :\u001c</SelectFilterTitle>\n                    <FilterBtnBox>\n                      {cate.category.map((sub, idx) => {\n                        return (\n                          <SelectBtn\n                            key={idx}\n                            onClick={() =>\n                              changeFilter(\n                                sub.category_id,\n                                idx,\n                                cate.filterTitle,\n                                cate.id\n                              )\n                            }\n                            idx={idx}\n                            filterStatus={filterStatus}\n                            name={cate.filterTitle}\n                          >\n                            {sub.category_title}\n                          </SelectBtn>\n                        );\n                      })}\n                    </FilterBtnBox>\n                  </SelectFilterCategory>\n                );\n              })}\n            <SearchContainer>\n              <SearchBtn onClick={handleSearch}>검색</SearchBtn>\n              <CanclehBtn onClick={resetFilter}>초기화</CanclehBtn>\n            </SearchContainer>\n          </FilterContainer>\n          <ProductDetail\n            product={product}\n            setProduct={setProduct}\n            query={query}\n            setQuery={setQuery}\n            activePage={activePage}\n            setActivePage={setActivePage}\n            filters={filters}\n            sendData={sendData}\n            setShowModal={setShowModal}\n            salesId={salesId}\n            displayId={displayId}\n          />\n        </Section>\n      </Main>\n      <Footer />\n    </Fragment>\n  );\n}\n\nconst Main = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Section = styled.div`\n  width: 100%;\n  padding: 20px 20px;\n  margin-top: 45px;\n  border-radius: 0 0 0 4px;\n  background-color: #fafafa;\n\n  h3 {\n    font-size: 26px;\n    margin-bottom: 15px;\n    font-weight: 300;\n    color: #666;\n  }\n`;\n\nconst FilterContainer = styled.div`\n  width: 100%;\n  border: 3px solid #eee;\n  background-color: #fff;\n  margin-bottom: 20px;\n`;\n\nconst FilterCategoryTitle = styled.div`\n  ${({ theme }) => theme.flex('', 'center')}\n  margin-top: 10px;\n  margin-bottom: 5px;\n  padding-right: 15px;\n\n  select {\n    ${({ theme }) => theme.flex('', 'center')}\n    width: 100px;\n    height: 30px;\n    margin-left: 15px;\n    border: 1px solid #e5e5e5;\n  }\n`;\n\nconst FiltersCategoryTitle = styled(FilterCategoryTitle)`\n  @media only screen and (max-width: 934px) {\n    ${({ theme }) => theme.flex('', 'center', 'column')}\n  }\n`;\n\nconst SelectFilterCategory = styled(FilterCategoryTitle)`\n  display: inline-flex;\n  width: ${({ cate }) => (cate > 5 ? '100%' : '50%')};\n\n  @media only screen and (max-width: 940px) {\n    width: 100%;\n  }\n`;\n\nconst FilterTitle = styled.div`\n  ${({ theme }) => theme.flex('', 'center')}\n  width: 100px;\n  height: 25px;\n  padding-left: 15px;\n  color: #222222;\n  text-overflow: hidden;\n  white-space: nowrap;\n`;\n\nconst SelectFilterTitle = styled(FilterTitle)`\n  display: inline-flex;\n`;\n\nconst InquiryperiodBox = styled.div`\n  display: table;\n  border: 1px solid #e5e5e5;\n  width: 25%;\n  margin: 0 15px;\n\n  @media only screen and (max-width: 934px) {\n    width: 100%;\n  }\n\n  span {\n    display: table-cell;\n    padding: 6px 12px;\n    background: #e5e5e5;\n  }\n`;\n\nconst PeriodBox = styled.input`\n  width: 100%;\n  display: table-cell;\n  padding: 6px 12px;\n  cursor: pointer;\n\n  ::placeholder {\n    text-align: center;\n  }\n`;\n\nconst SelectPeriod = styled(DatePicker)`\n  text-align: center;\n  cursor: pointer;\n`;\n\nconst SearchBox = styled(InquiryperiodBox)`\n  width: 51%;\n  margin: 0;\n\n  @media only screen and (max-width: 934px) {\n    width: 100%;\n  }\n`;\n\nconst SellerSearchBox = styled(InquiryperiodBox)`\n  width: 51%;\n  margin: 0 0 0 15px;\n\n  @media only screen and (max-width: 934px) {\n    width: 100%;\n  }\n`;\n\nconst SellerSearch = styled(PeriodBox)`\n  width: 100%;\n`;\n\nconst ProductSearch = styled(PeriodBox)`\n  cursor: inherit;\n`;\n\nconst FilterBtnBox = styled.div`\n  margin: 0px 15px;\n`;\n\nconst SelectBtn = styled.button`\n  background-color: ${({ name, filterStatus, idx }) =>\n    name &&\n    filterStatus &&\n    filterStatus.map((el) => !!el[name] && el[name][idx] && '#428bca')};\n\n  &:hover {\n    background-color: ${({ name, filterStatus, idx }) =>\n      name &&\n      filterStatus &&\n      filterStatus.map((el) => !!el[name] && el[name][idx] && '#3071a9')};\n\n    background-color: ${({ name, filterStatus, idx }) =>\n      name &&\n      filterStatus &&\n      filterStatus.map((el) => !!el[name] && !el[name][idx] && '#e6e6e6')};\n  }\n\n  color: ${({ name, filterStatus, idx }) =>\n    name &&\n    filterStatus &&\n    filterStatus.map((el) => !!el[name] && el[name][idx] && 'white')};\n\n  margin-right: 3px;\n  padding: 6px 12px;\n  border: 1px solid #adadad;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nconst SearchContainer = styled(FilterCategoryTitle)`\n  ${({ theme }) => theme.flex('center')}\n`;\n\nconst CanclehBtn = styled.button`\n  padding: 6px 50px;\n  border: 1px solid #adadad;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #e6e6e6;\n  }\n`;\n\nconst SearchBtn = styled.button`\n  padding: 6px 50px;\n  border: 1px solid #adadad;\n  margin-right: 4px;\n  background-color: #428bca;\n  color: white;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #3071a9;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Pagination from 'react-js-pagination';\nimport {\n  GoListUnordered,\n  GoChevronRight,\n  GoFile,\n  GoCheck,\n} from 'react-icons/go';\n\nexport default function ProductDetail({\n  product,\n  setQuery,\n  query,\n  setActivePage,\n  activePage,\n  setProduct,\n  filters,\n  setShowModal,\n  sendData,\n  salesId,\n  displayId,\n}) {\n  // 버튼의 클릭 상태를 나타내는 배열 생성\n  const [isSelected, setIsSelected] = useState(\n    new Array(product && product.productItem.length).fill(false)\n  );\n  // 전체 상품 체크 상태\n  const [allCheck, setAllCheck] = useState(false);\n  // 상품 디테일에서 체크된 id와 index를 관리하는 배열\n  const [checkProduct, setCheckProduct] = useState([]);\n  // 상품의 판매, 진열 상태 변경하기 위한 상태\n  const [changeStatus, setchangeStatus] = useState({\n    salesStatus: {\n      id: '',\n      // 판매여부가 담긴 필터 id\n      filterId: salesId,\n    },\n    displayStatus: {\n      id: '',\n      // 진열여부가 담긴 필터 id\n      filterId: displayId,\n    },\n  });\n\n  // 전체 버튼을 클릭했을 경우 실행\n  const handleClickAll = () => {\n    if (allCheck) {\n      setAllCheck(!allCheck);\n      setIsSelected(new Array(product.productItem.length).fill(!allCheck));\n      setCheckProduct([]);\n    } else {\n      setAllCheck(!allCheck);\n      setIsSelected(new Array(product.productItem.length).fill(!allCheck));\n      setCheckProduct(product.productItem.map((el) => String(el.id)));\n    }\n  };\n\n  //개별 버튼을 클릭했을 경우 실행\n  const selectProduct = (e, idx) => {\n    const { checked, id } = e.target;\n    const newSelceted = isSelected.map((el, i) => (idx === i ? !el : el));\n\n    setIsSelected(newSelceted);\n\n    // 모든 버튼이 눌렸을 경우\n    if (newSelceted.every((item) => item)) {\n      setAllCheck(true);\n    } else {\n      setAllCheck(false);\n    }\n\n    //체크된 상품의 id를 저장한다.\n    if (!!checked) {\n      setCheckProduct(checkProduct.concat(id));\n    } else {\n      setCheckProduct(checkProduct.filter((el) => el !== id));\n    }\n  };\n\n  // limit 상태 업데이트\n  const handleLimit = (e) => {\n    setActivePage(1);\n    setQuery({\n      ...query,\n      limit: e.target.value,\n    });\n  };\n\n  // limit 변경시 쿼리스트링 변경하여 get\n  useEffect(() => {\n    sendData();\n  }, [query.limit]);\n\n  // page 변경시 쿼리스트링 변경하여 get\n  useEffect(() => {\n    sendData();\n  }, [activePage]);\n\n  // 상품의 갯수 변경시 해당 갯수만큼 불리언 배열 생성\n  useEffect(() => {\n    if (product) {\n      setIsSelected(new Array(product.productItem.length).fill(false));\n    }\n  }, [product]);\n\n  // 상품 판매 진열 상태 적용 버튼이 눌렸을 때 실행하는 함수\n  const changedApply = (e) => {\n    // 판매 or 진열 상태를 입력하지 않았을 경우,\n    if (!changeStatus.salesStatus.id && !changeStatus.displayStatus.id) {\n      return alert('판매여부 or 진열여부를 선택하세요.');\n    }\n\n    // 상품이 하나도 체크되지 않았을 경우\n    if (!checkProduct.length) {\n      return alert('상품을 선택하세요');\n    }\n\n    // 전체버튼이 체크되지 않는 경우\n    if (\n      (!!changeStatus.salesStatus.id || !!changeStatus.displayStatus.id) &&\n      !!checkProduct.length\n    ) {\n      // 판매여부 필터에서 판매, 미판매 타이틀을 id 값으로 조회하여 찾아온다.\n      const sales = filters.filter_list\n        .filter((el) => el.id === changeStatus.salesStatus.filterId && el)[0]\n        .category.filter(\n          (item) =>\n            String(item.category_id) === changeStatus.salesStatus.id && item\n        )[0].category_title;\n\n      // 진열여부 필터에서 판매, 미판매 타이틀을 id 값으로 조회하여 찾아온다.\n      const display = filters.filter_list\n        .filter((el) => el.id === changeStatus.displayStatus.filterId && el)[0]\n        .category.filter(\n          (item) =>\n            String(item.category_id) === changeStatus.displayStatus.id && item\n        )[0].category_title;\n\n      // 상품의 진열여부, 판매여부를 변경한다.\n      setProduct({\n        ...product,\n        productItem: product.productItem.map((item) => {\n          if (checkProduct.includes(String(item.id))) {\n            return {\n              ...item,\n              is_on_sale: sales !== '전체' ? sales : item.is_on_sale,\n              is_displayed: display !== '전체' ? display : item.is_displayed,\n            };\n          } else {\n            return item;\n          }\n        }),\n      });\n      // 적용 후 모든 상태를 초기화시킨다.\n      setAllCheck(false);\n      setCheckProduct([]);\n      setchangeStatus({\n        salesStatus: {\n          id: '',\n          filterId: salesId,\n        },\n        displayStatus: {\n          id: '',\n          filterId: displayId,\n        },\n      });\n    }\n  };\n\n  return (\n    <ProductContainer>\n      <TitleContainer>\n        <RootTitle>\n          <li>\n            <GoListUnordered />\n          </li>\n          <li>\n            상품관리 / 상품 관리 <GoChevronRight />\n          </li>\n          <li>\n            상품관리 관리 <GoChevronRight />\n          </li>\n          <li> 리스트</li>\n        </RootTitle>\n        <LimitRange>\n          <select\n            value={query.limit}\n            onChange={(e) => {\n              handleLimit(e);\n            }}\n          >\n            <option value={10}>10개씩 보기</option>\n            <option value={20}>20개씩 보기</option>\n            <option value={50}>50개씩 보기</option>\n          </select>\n        </LimitRange>\n      </TitleContainer>\n      <ChangeContainer>\n        <PrintExcelBtn>\n          <GoFile />\n          선택상품 엑셀다운로드\n        </PrintExcelBtn>\n        <PrintExcelBtn>\n          <GoFile />\n          전체상품 엑셀다운로드\n        </PrintExcelBtn>\n        <select\n          value={changeStatus.salesStatus.id}\n          onChange={(e) =>\n            setchangeStatus({\n              ...changeStatus,\n              salesStatus: {\n                ...changeStatus.salesStatus,\n                id: e.target.value,\n              },\n            })\n          }\n        >\n          <option>판매여부</option>\n          {filters.filter_list &&\n            filters.filter_list.map((el) => {\n              return (\n                el.id === salesId &&\n                el.category.map((sub, i) => {\n                  return (\n                    i !== 0 && (\n                      <option value={sub.category_id} key={i}>\n                        {sub.category_title}\n                      </option>\n                    )\n                  );\n                })\n              );\n            })}\n        </select>\n        <select\n          value={changeStatus.displayStatus.id}\n          onChange={(e) =>\n            setchangeStatus({\n              ...changeStatus,\n              displayStatus: {\n                ...changeStatus.displayStatus,\n                id: e.target.value,\n              },\n            })\n          }\n        >\n          <option>진열여부</option>\n          {filters.filter_list &&\n            filters.filter_list.map((el) => {\n              return (\n                el.id === displayId &&\n                el.category.map((sub, i) => {\n                  return (\n                    i !== 0 && (\n                      <option\n                        value={sub.category_id}\n                        key={i}\n                        name={sub.category_title}\n                      >\n                        {sub.category_title}\n                      </option>\n                    )\n                  );\n                })\n              );\n            })}\n        </select>\n        <ApplyBtn onClick={changedApply}>\n          <GoCheck />\n          적용\n        </ApplyBtn>\n      </ChangeContainer>\n      <AllProductView>\n        <span>\n          전체 조회건 수 : <b> {product && product.productItem.length}</b>건\n        </span>\n      </AllProductView>\n      <TableBox>\n        <table>\n          <ProductHead>\n            <tr>\n              <ProductCategory twidth={'1%'}>\n                <input\n                  type=\"checkbox\"\n                  checked={allCheck ? 'checked' : ''}\n                  onChange={() => handleClickAll()}\n                ></input>\n              </ProductCategory>\n              <ProductCategory>등록일</ProductCategory>\n              <ProductCategory>대표이미지</ProductCategory>\n              <ProductCategory>상품명</ProductCategory>\n              <ProductCategory>상품코드</ProductCategory>\n              <ProductCategory>상품번호</ProductCategory>\n              <ProductCategory>판매가</ProductCategory>\n              <ProductCategory>할인가</ProductCategory>\n              <ProductCategory>판매여부</ProductCategory>\n              <ProductCategory>진열여부</ProductCategory>\n              <ProductCategory>할인여부</ProductCategory>\n              <ProductCategory>Actions</ProductCategory>\n            </tr>\n          </ProductHead>\n          <tbody>\n            {product &&\n              product.productItem.map((cate, idx) => {\n                return (\n                  <ProductLine idx={idx} key={idx}>\n                    <ProductItem>\n                      <input\n                        type=\"checkbox\"\n                        id={cate.id}\n                        checked={isSelected[idx] ? 'checked' : ''}\n                        onChange={(e) => selectProduct(e, idx)}\n                      ></input>\n                    </ProductItem>\n                    <ProductItem>{cate.registered_at}</ProductItem>\n                    <ProductItem>\n                      <img\n                        src={cate.main_image_url}\n                        width=\"70px\"\n                        height=\"70px\"\n                      />\n                    </ProductItem>\n                    <ProductItem>{cate.product_name}</ProductItem>\n                    <ProductItem>\n                      <a href=\"\">{cate.product_code}</a>\n                    </ProductItem>\n                    <ProductItem>{cate.product_number}</ProductItem>\n                    <ProductItem>{cate.price}</ProductItem>\n                    <ProductItem> {cate.discount_price}</ProductItem>\n                    <ProductItem>{cate.is_on_sale}</ProductItem>\n                    <ProductItem>{cate.is_displayed}</ProductItem>\n                    <ProductItem>{cate.is_discounted}</ProductItem>\n                    <ProductItem>\n                      <BuyBtn onClick={() => setShowModal(true)}>\n                        구매하기\n                      </BuyBtn>\n                    </ProductItem>\n                  </ProductLine>\n                );\n              })}\n          </tbody>\n        </table>\n      </TableBox>\n      <PaginationContainer>\n        <Pagination\n          activePage={activePage}\n          itemsCountPerPage={Number(query.limit)}\n          totalItemsCount={450}\n          pageRangeDisplayed={5}\n          onChange={(pageNumber) => {\n            setActivePage(pageNumber);\n          }}\n        />\n      </PaginationContainer>\n    </ProductContainer>\n  );\n}\nconst TableBox = styled.div`\n  overflow-x: scroll;\n  white-space: nowrap;\n\n  table {\n    width: 100%;\n  }\n`;\n\nconst ProductContainer = styled.div``;\n\nconst TitleContainer = styled.div`\n  ${({ theme }) => theme.flex('space-between', 'center')}\n  padding: 0 10px 0 20px;\n  margin-bottom: 10px;\n  background-color: #eeeeee;\n`;\n\nconst RootTitle = styled.ul`\n  display: flex;\n  padding: 8px;\n\n  svg {\n    color: #9b9b9b;\n    vertical-align: top;\n  }\n\n  li {\n    font-size: 13px;\n  }\n`;\n\nconst LimitRange = styled.div`\n  height: 100%;\n\n  select {\n    height: 100%;\n    border-radius: 1px;\n    height: 30px;\n  }\n`;\n\nconst ChangeContainer = styled.div`\n  width: 100%;\n  text-align: right;\n\n  select {\n    height: 30px;\n    width: 9%;\n    border: 1px solid #e5e5e5;\n    margin-left: 5px;\n  }\n`;\n\nconst PrintExcelBtn = styled.button`\n  height: 22px;\n  margin-left: 3px;\n  color: #fff;\n  background-color: #5cb85c;\n  border-color: #4cae4c;\n  font-size: 12px;\n  border-radius: 3px;\n  padding: 1px 5px;\n  cursor: pointer;\n\n  svg {\n    vertical-align: middle;\n  }\n`;\n\nconst ApplyBtn = styled.button`\n  width: 5%;\n  height: 30px;\n  color: #fff;\n  background-color: #f0ad4e;\n  border-color: #eea236;\n  margin-left: 5px;\n  border-radius: 3px;\n  cursor: pointer;\n\n  svg {\n    vertical-align: middle;\n  }\n`;\n\nconst AllProductView = styled.div`\n  margin-bottom: 3px;\n\n  span {\n    font-size: 13px;\n  }\n`;\n\nconst ProductHead = styled.thead`\n  width: 100%;\n`;\n\nconst ProductCategory = styled.th`\n  width: auto;\n  background-color: #eee;\n  padding: 9px;\n  border: 1px solid #ddd;\n  font-size: 14px;\n  font-weight: 600;\n  text-align: inherit;\n  overflow-x: hidden;\n  white-space: nowrap;\n`;\n\nconst ProductLine = styled.tr`\n  background-color: ${({ idx }) => (idx % 2 === 0 ? '#f5f5f5' : '#fff')};\n`;\n\nconst ProductItem = styled.th`\n  padding: 9px;\n  border: 1px solid #ddd;\n  font-size: 13px;\n  font-weight: 400;\n  text-align: inherit;\n  vertical-align: top;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  input {\n    width: 14px;\n  }\n\n  a {\n    color: #0d638f;\n\n    :hover {\n      text-decoration: revert;\n    }\n  }\n`;\n\nconst BuyBtn = styled.button`\n  background-color: #428bca;\n  border-radius: 2px;\n  font-size: 12px;\n  padding: 3px 0px;\n  color: white;\n  width: 100%;\n  cursor: pointer;\n`;\n\nconst PaginationContainer = styled.div`\n  ${({ theme }) => theme.flex('center')}\n  padding:15px 0px;\n\n  .pagination > li {\n    display: inline-block;\n    padding-left: 0;\n    font-size: 13px;\n  }\n\n  .pagination > li > a,\n  .pagination > li > span {\n    position: relative;\n    padding: 6px 12px;\n    margin-left: -1px;\n    line-height: 1.42857143;\n    color: #428bca;\n    text-decoration: none;\n    background-color: #fff;\n    border: 1px solid #ddd;\n  }\n\n  .pagination > li.active > a {\n    background: #eee;\n    border-color: #dddddd;\n    color: #333;\n    cursor: not-allowed;\n  }\n\n  .pagination > li > a:hover {\n    background: #eee;\n    border-color: #dddddd;\n    color: #333;\n  }\n\n  .pagination > li:first-child > a,\n  .pagination > li:first-child > span {\n    margin-left: 0;\n    border-bottom-left-radius: 4px;\n    border-top-left-radius: 4px;\n  }\n\n  .pagination > li:last-child > a,\n  .pagination > li:last-child > span {\n    margin-right: 0;\n    border-top-right-radius: 4px;\n    border-bottom-right-radius: 4px;\n  }\n`;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport regeneratorRuntime from 'regenerator-runtime';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport ProductManage from './Components/ProductManage';\nimport RefundManage from './Components/RefundManage';\nimport Bookmark from './Components/Bookmark';\nimport QnA from './Components/QnA';\nimport Notice from './Components/Notice';\nimport Nav from '../../Components/Nav/Nav';\nimport Header from '../../Components/Header/Header';\nimport Footer from '../../Components/Footer/Footer';\nimport { GoGraph } from 'react-icons/go';\n\nexport default function Home() {\n  // axios시 받은 data를 data 상태로 관리한다.\n  const [sellerStatus, setSellerStatus] = useState();\n\n  // Test : json형식 mock-data 생성\n  // axios get을 사용하여 데이터를 받아온다.\n  const getData = async () => {\n    try {\n      const result = await axios.get(`/public/Data/DataHomeSeller.json`);\n      // 받아온 데이터를 비구조 할당하여 data에 저장한다.\n      const { DataHomeSeller } = result.data;\n      setSellerStatus(DataHomeSeller);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // 페이지 마운트시 fetch 하여 배송, 즐겨찾기, 차트 데이터 등을 받아온다.\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // 매출 금액 차트에 들어가는 일별 Price\n  const priceOfSales =\n    sellerStatus &&\n    sellerStatus.chart_data.map((item) => {\n      return item.price;\n    });\n\n  // 매출 건수 차트에 들어가는 일별 건수\n  const numOfSales =\n    sellerStatus &&\n    sellerStatus.chart_data.map((item) => {\n      return item.num;\n    });\n\n  // 매출 차트에 공통으로 사용되는 금액, 건수의 날짜\n  const dateBySales =\n    sellerStatus &&\n    sellerStatus.chart_data.map((item) => {\n      return item.date;\n    });\n\n  // 매출 금액에 들어가는 차트 데이터\n  const priceChart = () =>\n    chartForm(priceOfSales, dateBySales, null, '결제 금액', '원');\n\n  // 매출 건수에 들어가는 차트 데이터\n  const numChart = () =>\n    chartForm(numOfSales, dateBySales, '#AA4643', '결제 건수', '건');\n\n  const chartForm = (series, date, color, tooltipTitle, tooltipUnit) => {\n    const options = {\n      title: {\n        // 차트에 표기되는 메인 Title을 보이지 않게 Null로 변경\n        text: null,\n      },\n      credits: {\n        // 차트에 표기되는 highchart 제거\n        enabled: false,\n      },\n      // 차트에 표시되는 선의 종류\n      series: [\n        {\n          color: color,\n          // 차트에 표기되는 Data ( 매출 건수, 매출 금액)\n          data: series,\n          // 차트에 표기되는 Data 이름\n          name: tooltipTitle,\n          // 차트 하단에 표기되는 Name을 표시하지 않게 해줍니다.\n          showInLegend: false,\n        },\n      ],\n      // X축 관련 Format 및 data\n      xAxis: {\n        // X축에 표시되는 Data\n        categories: date,\n        labels: {\n          // 차트에 월,일만 표기되도록 앞에 년도를 짤라서 출력 (데이터에 따른 수정 예정)\n          formatter: function () {\n            return this.value.substring(3);\n          },\n        },\n      },\n      // Y축 관련 Format 및 data\n      yAxis: {\n        // Y축 왼쪽에 표시되는 Title을 보이지 않게 null로 설정\n        title: {\n          text: null,\n        },\n        // Y축 표시도는 data format을 1 000단위로 설정\n        labels: {\n          format: '{value:,.0f} ',\n        },\n      },\n      // 차트에 hover 하였을때 출력되는 툴팁\n      tooltip: {\n        formatter: function () {\n          // axios에서 넘겨받은 날짜를 xx년 xx월 xx일 형식으로 바꾸기 위해서 split\n          const splitDate = this.x.split('/');\n          // 위에서 split한 Data를 각 Format에 맞게 넣어 출력한다.\n          var tooltipText = `${tooltipTitle} <br> <b> ${splitDate[0]}년 ${splitDate[1]}월  ${splitDate[2]}일 : ${this.y} ${tooltipUnit}</b>`;\n          return tooltipText;\n        },\n      },\n      showInLegend: true,\n    };\n    return options;\n  };\n\n  return (\n    <Fragment>\n      <Header />\n      <Main>\n        <Nav />\n        <Section>\n          <SalesContainer>\n            {/* 상품, 배송 상태 차트 컴포넌트 */}\n            <ProductManage sellerStatus={sellerStatus} />\n            {/* 환불, 반품 상태 차트 컴포넌트 */}\n            <RefundManage />\n            {/* 즐겨찾기, 전체 상품수 등 상태 차트 컴포넌트 */}\n            <Bookmark sellerStatus={sellerStatus} />\n          </SalesContainer>\n          <StaticsContainer>\n            {/* 매출 통계 건수 차트 생성하여 컴포넌트 분리 예정 */}\n            <StaticsBox>\n              <StaticsStatus>\n                <StaticsTitle>\n                  <GoGraph />\n                  <span>\n                    매출 통계[최근 30일간의 결제완료된 주문 건수의 합계]\n                  </span>\n                </StaticsTitle>\n                <StaticsGraph>\n                  <HighchartsReact\n                    highcharts={Highcharts}\n                    options={numChart()}\n                  />\n                </StaticsGraph>\n              </StaticsStatus>\n            </StaticsBox>\n            {/* 매출 통계 금액 차트 생성하여 컴포넌트 분리 예정 */}\n            <StaticsBox>\n              <StaticsStatus>\n                <StaticsTitle>\n                  <GoGraph />\n                  <span>\n                    매출 통계[최근 30일간의 결제완료된 주문 금액의 합계]\n                  </span>\n                </StaticsTitle>\n                <StaticsGraph>\n                  <HighchartsReact\n                    highcharts={Highcharts}\n                    options={priceChart()}\n                  />\n                </StaticsGraph>\n              </StaticsStatus>\n            </StaticsBox>\n          </StaticsContainer>\n          <StaticsContainer>\n            {/* Q&A 차트 컴포넌트 */}\n            <QnA />\n            {/* 공지사항 컴포넌트 */}\n            <Notice />\n          </StaticsContainer>\n        </Section>\n      </Main>\n      <Footer />\n    </Fragment>\n  );\n}\n\nconst Main = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Section = styled.div`\n  width: 100%;\n  padding: 20px;\n  padding-top: 65px;\n  border-radius: 0 0 0 4px;\n  background-color: #fafafa;\n`;\n\nconst SalesContainer = styled.div`\n  display: flex;\n`;\n\nconst StaticsContainer = styled.div`\n  display: flex;\n  margin-bottom: 22px;\n`;\n\nconst StaticsBox = styled.div`\n  display: inline-block;\n  width: 50%;\n  min-height: 1px;\n  padding: 0px 10px;\n`;\n\nconst StaticsStatus = styled.div`\n  border: 1px solid #dddddd;\n`;\n\nconst StaticsTitle = styled.div`\n  padding: 10px 15px;\n  background-color: #f5f5f5;\n  border-bottom: 1px solid #dddddd;\n\n  svg {\n    vertical-align: bottom;\n    color: gray;\n  }\n\n  span {\n    padding-left: 5px;\n    font-size: 13px;\n    color: gray;\n  }\n`;\n\nconst StaticsGraph = styled.div`\n  padding: 10px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function ProductManage({ sellerStatus }) {\n  return (\n    <SalesBox>\n      <SalesStatus>\n        <SalesCategory>\n          <span>상품 준비 : </span>\n          <b>{sellerStatus && sellerStatus.product_preparation}건 </b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>배송 준비 : </span>\n          <b>2건 </b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>배송 중 : </span>\n          <b>5건 </b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>배송 완료 : </span>\n          <b>{sellerStatus && sellerStatus.delivery_completed}건 </b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>구매 확정 : </span>\n          <b>3건 </b>\n        </SalesCategory>\n      </SalesStatus>\n    </SalesBox>\n  );\n}\n\nconst SalesBox = styled.div`\n  display: inline-block;\n  width: 33.3%;\n  padding: 0 15px;\n  margin-bottom: 22px;\n`;\n\nconst SalesStatus = styled.div`\n  background-color: #fff;\n  padding: 15px 20px 0px 20px;\n  border: 1px solid #dddddd;\n  border-radius: 3px;\n`;\n\nconst SalesCategory = styled.div`\n  ${({ theme }) => theme.flex('space-between')}\n  height:30px;\n\n  span {\n    font-size: 13px;\n  }\n\n  b {\n    font-size: 13px;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function RefundManage() {\n  return (\n    <SalesBox>\n      <SalesStatus>\n        <SalesCategory>\n          <span>환불 요청 :</span>\n          <b>1 건</b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>반품 진행 :</span>\n          <b>5 건</b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>주문 취소중 :</span>\n          <b>3 건</b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>환불 승인중 :</span>\n          <b>2 건</b>\n        </SalesCategory>\n      </SalesStatus>\n    </SalesBox>\n  );\n}\n\nconst SalesBox = styled.div`\n  display: inline-block;\n  width: 33.3%;\n  padding: 0 15px;\n  margin-bottom: 22px;\n`;\n\nconst SalesStatus = styled.div`\n  height: 100%;\n  background-color: #fff;\n  padding: 15px 20px 0px 20px;\n  border: 1px solid #dddddd;\n  border-radius: 3px;\n`;\n\nconst SalesCategory = styled.div`\n  ${({ theme }) => theme.flex('space-between')}\n  height:30px;\n\n  span,\n  b {\n    font-size: 13px;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function Bookmark({ sellerStatus }) {\n  return (\n    <SalesBox>\n      <SalesStatus>\n        <SalesCategory>\n          <span>즐겨찾기 수:\u001c</span>\n          <b>9 건</b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>전체 상품 수:\u001c</span>\n          <b>{sellerStatus && sellerStatus.all_product} 건</b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>노출 상품 수:\u001c</span>\n          <b>{sellerStatus && sellerStatus.displayed_product} 건</b>\n        </SalesCategory>\n      </SalesStatus>\n    </SalesBox>\n  );\n}\n\nconst SalesBox = styled.div`\n  display: inline-block;\n  width: 33.3%;\n  padding: 0 15px;\n  margin-bottom: 22px;\n`;\n\nconst SalesStatus = styled.div`\n  background-color: #fff;\n  height: 100%;\n  padding: 15px 20px 0px 20px;\n  border: 1px solid #dddddd;\n  border-radius: 3px;\n`;\n\nconst SalesCategory = styled.div`\n  ${({ theme }) => theme.flex('space-between')}\n  height:30px;\n\n  span,\n  b {\n    font-size: 13px;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport DataQnA from '../Data/DataQnA';\nimport { GoListUnordered } from 'react-icons/go';\n\nexport default function QnA() {\n  return (\n    <StaticsBox>\n      <StaticsStatus>\n        <StaticsTitle>\n          <GoListUnordered />\n          <span>Q&A 미답변</span>\n        </StaticsTitle>\n        <StaticsQnA>\n          <ul>\n            <li>전체</li>\n            <li>미답변</li>\n            <li>답변</li>\n            <NullLi></NullLi>\n          </ul>\n        </StaticsQnA>\n        <StaticsCategory>\n          <ul>\n            <QnANickName>회원 닉네임</QnANickName>\n            <QnAQuestion>질문</QnAQuestion>\n            <QnATitle>상품명</QnATitle>\n            <QnARegist>등록일</QnARegist>\n          </ul>\n        </StaticsCategory>\n        <StaticsContent>\n          {DataQnA.map((question, idx) => {\n            return (\n              <SellerNoti key={idx}>\n                <QnANickName>{question.nickname}</QnANickName>\n                <QnAQuestion>{question.question}</QnAQuestion>\n                <QnATitle>{question.itemTitle}</QnATitle>\n                <QnARegist>{question.registration}</QnARegist>\n              </SellerNoti>\n            );\n          })}\n        </StaticsContent>\n      </StaticsStatus>\n    </StaticsBox>\n  );\n}\n\nconst StaticsBox = styled.div`\n  display: inline-block;\n  width: 50%;\n  min-height: 1px;\n  padding: 0px 10px;\n`;\n\nconst StaticsStatus = styled.div`\n  border: 1px solid #dddddd;\n`;\n\nconst StaticsTitle = styled.div`\n  padding: 10px 15px;\n  background-color: #f5f5f5;\n  border-bottom: 1px solid #dddddd;\n\n  svg {\n    vertical-align: bottom;\n    color: gray;\n  }\n\n  span {\n    padding-left: 5px;\n    font-size: 13px;\n    color: gray;\n  }\n`;\n\nconst StaticsQnA = styled.div`\n  ul {\n    display: flex;\n    margin: 0px;\n    padding: 0px;\n    height: 100%;\n\n    li {\n      width: 18%;\n      padding: 10px 15px;\n      font-size: 13px;\n      text-align: center;\n      border-top: 1px solid #dddddd;\n      border-right: 1px solid #dddddd;\n      border-left: 1px solid #dddddd;\n    }\n  }\n`;\n\nconst NullLi = styled.div`\n  width: 100%;\n  border-bottom: 1px solid #dddddd;\n`;\n\nconst StaticsCategory = styled.div`\n  ul {\n    display: flex;\n    margin: 0px;\n    padding: 0px;\n  }\n`;\n\nconst StaticsContent = styled.div`\n  height: 100%;\n  ul {\n    display: flex;\n    margin: 0px;\n    padding: 0px;\n  }\n`;\n\nconst SellerNoti = styled.ul`\n  display: flex;\n  margin: 0px;\n  padding: 0px;\n  border-top: 1px solid #dddddd;\n\n  li {\n    font-size: 13px;\n  }\n`;\n\nconst QnANickName = styled.li`\n  text-align: center;\n  padding: 8px;\n  font-size: 13px;\n  width: 20%;\n`;\n\nconst QnAQuestion = styled(QnANickName)`\n  width: 36%;\n`;\n\nconst QnATitle = styled(QnANickName)`\n  width: 20%;\n`;\n\nconst QnARegist = styled(QnANickName)`\n  width: 24%;\n`;\n","const DataQnA = [\n  {\n    id: 1,\n    nickname: '상준',\n    question: '주문 취소 요청합니다.',\n    itemTitle: '셔츠',\n    registration: '2020.10.13',\n  },\n  {\n    id: 2,\n    nickname: '지형',\n    question: '배송 문의드립니다.',\n    itemTitle: '상의',\n    registration: '2020.10.14',\n  },\n  {\n    id: 3,\n    nickname: '지은',\n    question: '상품 수정 요청합니다.',\n    itemTitle: '가디건',\n    registration: '2020.10.19',\n  },\n  ,\n  {\n    id: 4,\n    nickname: '성은',\n    question: '오배송 문의드립니다.',\n    itemTitle: '와이드핏 슬랙스',\n    registration: '2020.10.20',\n  },\n  ,\n  {\n    id: 5,\n    nickname: '수정',\n    question: '환불 요청 방법을 알고 싶습니다.',\n    itemTitle: '블라우스',\n    registration: '2020.10.23',\n  },\n];\n\nexport default DataQnA;\n","import React from 'react';\nimport styled from 'styled-components';\nimport DataNotification from '../Data/DataNotification';\nimport { AiOutlineNotification } from 'react-icons/ai';\n\nexport default function Notice() {\n  return (\n    <StaticsBox>\n      <StaticsStatus>\n        <StaticsTitle>\n          <AiOutlineNotification />\n          <span>공지사항</span>\n        </StaticsTitle>\n        <StaticsContent>\n          {DataNotification.map((question, idx) => {\n            return (\n              <CustomerQnA key={idx}>\n                <NotiNum>{question.categoryNum}</NotiNum>\n                <NotiCategory>{question.category}</NotiCategory>\n                <NotiTitle>{question.categoryTitle}</NotiTitle>\n                <NotiWriter>{question.writer}</NotiWriter>\n                <NotiRegistDate>{question.registData}</NotiRegistDate>\n              </CustomerQnA>\n            );\n          })}\n        </StaticsContent>\n      </StaticsStatus>\n    </StaticsBox>\n  );\n}\n\nconst StaticsBox = styled.div`\n  display: inline-block;\n  width: 50%;\n  min-height: 1px;\n  padding: 0px 10px;\n`;\n\nconst StaticsStatus = styled.div`\n  border: 1px solid #dddddd;\n`;\n\nconst StaticsTitle = styled.div`\n  padding: 10px 15px;\n  background-color: #f5f5f5;\n  border-bottom: 1px solid #dddddd;\n\n  svg {\n    vertical-align: bottom;\n    color: gray;\n  }\n\n  span {\n    padding-left: 5px;\n    font-size: 13px;\n    color: gray;\n  }\n`;\n\nconst StaticsContent = styled.div`\n  height: 100%;\n\n  ul {\n    display: flex;\n    margin: 0px;\n    padding: 0px;\n  }\n`;\n\nconst CustomerQnA = styled.ul`\n  display: flex;\n  margin: 0px;\n  padding: 0px;\n  border-top: 1px solid #dddddd;\n\n  li {\n    font-size: 13px;\n  }\n`;\n\nconst NotiNum = styled.li`\n  text-align: center;\n  padding: 8px;\n  width: 10%;\n`;\n\nconst NotiCategory = styled(NotiNum)`\n  width: 24%;\n`;\n\nconst NotiTitle = styled(NotiNum)`\n  width: 24%;\n`;\n\nconst NotiWriter = styled(NotiNum)`\n  width: 18%;\n`;\n\nconst NotiRegistDate = styled(NotiNum)`\n  width: 24%;\n`;\n","const DataNotification = [\n  {\n    id: 1,\n    categoryNum: '공지',\n    category: '공통',\n    categoryTitle: '브랜디 공지글입니다',\n    writer: '은수',\n    registData: '2020.10.13',\n  },\n  {\n    id: 2,\n    categoryNum: '공지',\n    category: '일반',\n    categoryTitle: '브랜디 카페 이용 안내',\n    writer: '규덕',\n    registData: '2020.10.13',\n  },\n  {\n    id: 3,\n    categoryNum: 1,\n    category: '공통',\n    categoryTitle: '배송 환불 규정 안내',\n    writer: '성진',\n    registData: '2020.10.13',\n  },\n  ,\n  {\n    id: 4,\n    categoryNum: 2,\n    category: '일반',\n    categoryTitle: '명절 배송 관련 안내',\n    writer: '지선',\n    registData: '2020.10.14',\n  },\n  ,\n  {\n    id: 5,\n    categoryNum: 3,\n    category: '공통',\n    categoryTitle: '서비스 상세 안내',\n    writer: '다솜',\n    registData: '2020.10.18',\n  },\n  ,\n  {\n    id: 6,\n    categoryNum: 4,\n    category: '공통',\n    categoryTitle: '베스트 상품 안내',\n    writer: '도길',\n    registData: '2020.10.19',\n  },\n  ,\n  {\n    id: 7,\n    categoryNum: 5,\n    category: '공통',\n    categoryTitle: '사이즈 문의 내용',\n    writer: '상호',\n    registData: '2020.10.21',\n  },\n];\n\nexport default DataNotification;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Header from '../../Components/Header/Header';\nimport Nav from '../../Components/Nav/Nav';\nimport Footer from '../../Components/Footer/Footer';\nimport OrderManagement from './OrderManagement';\n\nexport default function Order() {\n  return (\n    <div>\n      <Header />\n      <Section>\n        <Nav />\n        <OrderManagement />\n      </Section>\n      <Footer />\n    </div>\n  );\n}\n\nconst Section = styled.div`\n  display: flex;\n  width: 100vw;\n`;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport regeneratorRuntime from 'regenerator-runtime';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Filter from './Filter';\nimport OrderList from './OrderList';\nimport dateFormatChange from '../../Components/ChangeTimeFormat';\nimport COMPONENT_ORDER from './DataOrderComponent';\n\nexport default function OrderManagement() {\n  // 주소에 있는 id 파라미터로 동일한 컴포넌트에서 다른 데이터를 사용하여 각 주문 상태에 따른 내용을 가져옵니다.\n  const match = useParams();\n  // 해당 주소가 담겨 오면 숫자로 리턴한다.\n  const categoryId = () => {\n    if (match.id === 'prepareList') {\n      return 1;\n    }\n    if (match.id === 'deliveryList') {\n      return 2;\n    }\n    if (match.id === 'deliveryPrepareList') {\n      return 2;\n    }\n    if (match.id === 'deliveryCompleteList') {\n      return 3;\n    }\n    if (match.id === 'orderConfirmList') {\n      return 4;\n    }\n    return match.id;\n  };\n\n  const pagetext = COMPONENT_ORDER[categoryId() - 1];\n\n  // 현재 시간을 newData에 할당\n  const newDate = new Date();\n\n  // 몇일전, 몇달전으로 리턴하는 함수\n  const changeDate = (dayAgo, monthAgo) => {\n    const year = newDate.getFullYear();\n    const month = newDate.getMonth() - monthAgo;\n    const day = newDate.getDate() - dayAgo;\n    return new Date(year, month, day);\n  };\n\n  // datePicker에서 현재 가지고 있는 상태\n  const [searchDate, setSearchDate] = useState({\n    startDate: changeDate(3, 0),\n    endDate: new Date(),\n  });\n\n  // 검색버튼 클릭시 보낼 데이터 관리\n  const [params, setParams] = useState({\n    startDate: null,\n    endDate: null,\n    searchKeyword: null,\n    searchOption: null,\n  });\n\n  // axios.get 시 주문 항목 관리\n  const [orderList, setOrderList] = useState();\n\n  // 현재 클릭되어 있는 날짜 상태\n  const [selectDate, setSelectDate] = useState([\n    false,\n    false,\n    true,\n    false,\n    false,\n    false,\n  ]);\n\n  const filterReset = () => {\n    setSearchDate({\n      startDate: changeDate(3, 0),\n      endDate: new Date(),\n    });\n    setParams({\n      startDate: null,\n      endDate: null,\n      searchKeyword: null,\n      searchOption: null,\n    });\n    setSelectDate([false, false, true, false, false, false]);\n  };\n\n  // axios.get 하게되는 함수이다. params를 따로 인자로 빼어 params만 넣어서 언제든 실행 가능\n  const getProductInfo = async (params) => {\n    try {\n      const url = () => {\n        if (categoryId() === 1) {\n          console.log('상품준비');\n          return `/public/Data/DataProductPreManage.json`;\n        }\n        if (categoryId() === 2) {\n          console.log('배송중');\n          return `/public/Data/DataShippingMansge.json`;\n        }\n        if (categoryId() === 3) {\n          console.log('배배완료송중');\n          return `/public/Data/DataDeliveryComplitedManage.json`;\n        }\n        if (categoryId() === 4) {\n          console.log('구매');\n          return `/public/Data/DataConfirmPurchase.json`;\n        }\n      };\n      const result = await axios.get(\n        url(),\n        // `/public/Data/DataProductPreManage.json`,\n        // `/public/Data/DataShippingMansge.json`,\n        // `/public/Data/DataDeliveryComplitedManage.json`,\n        // `/public/Data/DataConfirmPurchase.json`,\n        {\n          params: params,\n          timeout: 3000, //3초\n        }\n      );\n\n      const { DataProductManage } = result.data;\n      setOrderList(DataProductManage.productItem);\n      console.log('패치', DataProductManage);\n    } catch (err) {\n      //에러 처리 예정\n      console.log(err);\n    }\n  };\n\n  // 언마운트시 axios.get\n  useEffect(() => {\n    getProductInfo();\n  }, []);\n\n  useEffect(() => {\n    getProductInfo();\n    filterReset();\n  }, [categoryId()]);\n\n  // 현재 클릭된 버튼에 따라 동작한다.\n  const handleDate = (value, i) => {\n    setSelectDate(\n      selectDate && selectDate.map((el, idx) => (idx === i ? true : false))\n    );\n\n    if (value === '전체') {\n      setParams({ ...params, startDate: null, endDate: null });\n      setSearchDate({ startDate: null, endDate: null });\n    } else if (value === '오늘') {\n      setParams({\n        ...params,\n        startDate: dateFormatChange(newDate),\n        endDate: dateFormatChange(newDate),\n      });\n      setSearchDate({\n        startDate: new Date(),\n        endDate: new Date(),\n      });\n    } else if (value === '3일') {\n      // const dayAgo = new Date().getTime() - oneDay * 3;\n      setParams({\n        ...params,\n        startDate: dateFormatChange(changeDate(3, 0)),\n        endDate: dateFormatChange(newDate),\n      });\n      setSearchDate({\n        startDate: changeDate(3, 0),\n        endDate: new Date(),\n      });\n    } else if (value === '1주일') {\n      setParams({\n        ...params,\n        startDate: dateFormatChange(changeDate(7, 0)),\n        endDate: dateFormatChange(newDate),\n      });\n      setSearchDate({\n        startDate: changeDate(7, 0),\n        endDate: new Date(),\n      });\n    } else if (value === '1개월') {\n      setParams({\n        ...params,\n        startDate: dateFormatChange(changeDate(0, 1)),\n        endDate: dateFormatChange(newDate),\n      });\n      setSearchDate({\n        startDate: changeDate(0, 1),\n        endDate: new Date(),\n      });\n    } else if (value === '3개월') {\n      setParams({\n        ...params,\n        startDate: dateFormatChange(changeDate(0, 3)),\n        endDate: dateFormatChange(newDate),\n      });\n      setSearchDate({\n        startDate: changeDate(0, 3),\n        endDate: new Date(),\n      });\n    }\n  };\n\n  // 검색버튼 클릭시 파람스에 객체를 넣어 해당 쿼리로 get\n  const sendQuery = () => {\n    console.log('전송될 파람스', params);\n    getProductInfo(params);\n  };\n\n  // 현재 날짜가 변경되면 params도 최신화 시킨다.\n  useEffect(() => {\n    setParams({\n      ...params,\n      startDate: dateFormatChange(searchDate.startDate),\n      endDate: dateFormatChange(searchDate.endDate),\n    });\n  }, [searchDate]);\n\n  return (\n    <ManagementContainer>\n      <Title>\n        <h3>주문 관리</h3>\n        <span>{pagetext.title} 관리</span>\n        <div>\n          {pagetext.description &&\n            pagetext.description.map((el, index) => <p key={index}>{el}</p>)}\n        </div>\n      </Title>\n      <Filter\n        pagetext={pagetext}\n        searchDate={searchDate}\n        setSearchDate={setSearchDate}\n        handleDate={handleDate}\n        selectDate={selectDate}\n        params={params}\n        setParams={setParams}\n        sendQuery={sendQuery}\n        filterReset={filterReset}\n      />\n      <OrderList\n        pagetext={pagetext}\n        orderList={orderList}\n        setOrderList={setOrderList}\n        setOrderList={setOrderList}\n      />\n    </ManagementContainer>\n  );\n}\n\nconst ManagementContainer = styled.div`\n  width: 100%;\n  min-height: 875px;\n  padding: 72px 20px 20px 20px;\n  background: #fafafa;\n  border-radius: 0 0 0 4px;\n`;\n\nconst Title = styled.div`\n  h3 {\n    display: inline-block;\n    margin-right: 6px;\n    color: #666;\n    font-size: 26px;\n    font-weight: 400;\n    letter-spacing: -1px;\n  }\n  span {\n    font-size: 14px;\n    font-weight: 300;\n    color: #888;\n  }\n  div {\n    margin-top: 12px;\n    p {\n      font-size: 14px;\n      font-weight: 400;\n      color: #888;\n      margin-bottom: 5px;\n      line-height: 1.5;\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport DateFilter from './DateFilter';\n\nexport default function Filter({\n  pagetext,\n  searchDate,\n  setSearchDate,\n  handleDate,\n  selectDate,\n  params,\n  setParams,\n  sendQuery,\n  filterReset,\n}) {\n  return (\n    <FilterContainer>\n      <Div>\n        <Select\n          value={params.searchOption || ''}\n          onChange={(e) =>\n            setParams({ ...params, searchOption: e.target.value })\n          }\n        >\n          <option value=\"\" selected>\n            Select..\n          </option>\n          <option value=\"ORDER_DETAIL_NO\">주문상세번호</option>\n          <option value=\"ORDER_NO\">주문번호</option>\n          <option value=\"ORDRR_NAME\">주문자명</option>\n          <option value=\"ORDRR_HP\">핸드폰번호</option>\n          <option value=\"PRODUCT_NAME\">상품명</option>\n        </Select>\n        <SearchInput\n          onChange={(e) =>\n            setParams({ ...params, searchKeyword: e.target.value })\n          }\n          value={params.searchKeyword ? params.searchKeyword : ''}\n          type=\"text\"\n          placeholder=\"검색어를 입력하세요.\"\n        />\n      </Div>\n      <Divs>\n        <FilterBox>\n          <span>{pagetext.filter_date} :</span>\n          <DateBtn\n            idx={0}\n            selectDate={selectDate}\n            type=\"button\"\n            value=\"전체\"\n            onClick={(e) => handleDate(e.target.value, 0)}\n            selected={params.periodButton === '전체'}\n          />\n          <DateBtn\n            idx={1}\n            selectDate={selectDate}\n            type=\"button\"\n            value=\"오늘\"\n            onClick={(e) => handleDate(e.target.value, 1)}\n            selected={params.periodButton === '오늘'}\n          />\n          <DateBtn\n            idx={2}\n            selectDate={selectDate}\n            type=\"button\"\n            value=\"3일\"\n            onClick={(e) => handleDate(e.target.value, 2)}\n            selected={params.periodButton === '3일'}\n          />\n          <DateBtn\n            idx={3}\n            selectDate={selectDate}\n            type=\"button\"\n            value=\"1주일\"\n            onClick={(e) => handleDate(e.target.value, 3)}\n            selected={params.periodButton === '1주일'}\n          />\n          <DateBtn\n            idx={4}\n            selectDate={selectDate}\n            type=\"button\"\n            value=\"1개월\"\n            onClick={(e) => handleDate(e.target.value, 4)}\n            selected={params.periodButton === '1개월'}\n          />\n          <DateBtn\n            idx={5}\n            selectDate={selectDate}\n            type=\"button\"\n            value=\"3개월\"\n            onClick={(e) => handleDate(e.target.value, 5)}\n            selected={params.periodButton === '3개월'}\n          />\n        </FilterBox>\n        <DateFilter searchDate={searchDate} setSearchDate={setSearchDate} />\n      </Divs>\n      <Div>\n        <Button search onClick={() => sendQuery()}>\n          검색\n        </Button>\n        <Button onClick={filterReset}>초기화</Button>\n      </Div>\n    </FilterContainer>\n  );\n}\n\nconst FilterContainer = styled.div`\n  border: 3px solid #eee;\n  padding-left: 5px;\n  padding-bottom: 3px;\n  margin-top: 15px;\n  margin-bottom: 20px;\n`;\n\nconst Div = styled.div`\n  ${({ theme }) => theme.flex('', 'center')}\n  width: 100%;\n  margin-top: 10px;\n  margin-left: 20px;\n  &:last-child {\n    ${({ theme }) => theme.flex('center')}\n    padding-right: 100px;\n  }\n  span {\n    width: 90px;\n    margin-right: 35px;\n    font-size: 14px;\n    color: #222;\n  }\n`;\n\nconst Divs = styled(Div)`\n  @media only screen and (max-width: 1067px) {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst FilterBox = styled.div`\n  @media only screen and (max-width: 1067px) {\n    margin-bottom: 10px;\n  }\n\n  span {\n    margin-left: 15px;\n  }\n`;\n\nconst Select = styled.select`\n  margin-left: 15px;\n  height: 30px;\n  width: 120px;\n  margin-right: 5px;\n  padding: 2px 10px;\n  border: 1px solid #e5e5e5;\n  border-radius: 4px;\n  line-height: 28px;\n  color: #666;\n`;\n\nconst SearchInput = styled.input`\n  height: 30px;\n  width: 35%;\n  padding: 6px 10px;\n  background: white;\n  border: 1px solid #e5e5e5;\n  border-radius: 4px;\n  font-size: 13px;\n`;\n\nconst DateBtn = styled.input`\n  height: 32px;\n  margin-right: 3px;\n  padding: 6px 12px;\n  background: #fff;\n  color: #333;\n  font-size: 14px;\n  border: 1px solid #e5e5e5;\n  border-radius: 4px;\n  &:hover {\n    background: #e6e6e6;\n    border-color: #adadad;\n  }\n  ${({ selectDate, idx }) =>\n    selectDate &&\n    selectDate[idx] &&\n    css`\n      background: #428bca;\n      color: white;\n      &:hover {\n        background: #428bca;\n      }\n    `}\n`;\n\nconst Button = styled.button`\n  height: 34px;\n  margin: 10px 2px;\n  padding: 6px 50px;\n  background: white;\n  color: #333;\n  border: 1px solid #e5e5e5;\n  cursor: pointer;\n  &:hover {\n    background: #e6e6e6;\n    border-color: #adadad;\n  }\n  ${(props) =>\n    props.search &&\n    css`\n      background: #428bca;\n      border-color: #357ebd;\n      color: white;\n      &:hover {\n        background: #3071a9;\n        border-color: #285e8e;\n      }\n    `}\n`;\n","import React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport styled from 'styled-components';\nimport './datepick.css';\n\nexport default function DateFilter({ searchDate, setSearchDate }) {\n  return (\n    <InquiryperiodBox>\n      <SelectPeriod\n        selected={searchDate.startDate}\n        onChange={(date) => setSearchDate({ ...searchDate, startDate: date })}\n        dateFormat=\"yyyy-MM-dd\"\n        placeholderText=\"클릭해주세요.\"\n        shouldCloseOnSelect={false}\n      />\n      <span>~</span>\n      <SelectPeriod\n        selected={searchDate.endDate}\n        onChange={(date) => setSearchDate({ ...searchDate, endDate: date })}\n        dateFormat=\"yyyy-MM-dd\"\n        placeholderText=\"클릭해주세요.\"\n        shouldCloseOnSelect={false}\n      />\n    </InquiryperiodBox>\n  );\n}\n\nconst InquiryperiodBox = styled.div`\n  ${({ theme }) => theme.flex('center', 'center')};\n  display: table;\n  width: 22%;\n  height: 34px;\n  margin: 0 15px;\n  background: white;\n  border: 1px solid #e5e5e5;\n  border-radius: 4px;\n  span {\n    display: table-cell;\n    padding: 8px 12px;\n    background: #e5e5e5;\n    text-align: center;\n  }\n`;\n\nconst SelectPeriod = styled(DatePicker)`\n  text-align: center;\n  font-size: 14px;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { KeyboardArrowRight, List } from '@styled-icons/material';\nimport Table from './Table';\n\nexport default function OrderList({ pagetext, orderList, setOrderList }) {\n  console.log('asdasdads', orderList);\n  return (\n    <div>\n      <Pagebar>\n        <ul>\n          <li>\n            <List size={25} />\n          </li>\n          <li>\n            주문관리\n            <KeyboardArrowRight size={15} color=\"#999\" />\n          </li>\n          <li>\n            {pagetext.title} 관리\n            <KeyboardArrowRight size={15} color=\"#999\" />\n          </li>\n          <li>{pagetext.title} 리스트</li>\n        </ul>\n        <div>\n          <Select>\n            <option value=\"NEWEST\">최신주문일순</option>\n            <option value=\"OLDEST\">주문일의 역순</option>\n          </Select>\n          <Select>\n            <option value=\"10_EACH\">10개씩보기</option>\n            <option value=\"20_EACH\">20개씩보기</option>\n            <option value=\"50_EACH\" selected>\n              50개씩보기\n            </option>\n            <option value=\"100_EACH\">100개씩보기</option>\n            <option value=\"150_EACH\">150개씩보기</option>\n          </Select>\n        </div>\n      </Pagebar>\n      <Table\n        pagetext={pagetext}\n        orderList={orderList}\n        setOrderList={setOrderList}\n      />\n    </div>\n  );\n}\n\nconst Pagebar = styled.div`\n  ${({ theme }) => theme.flex('space-between', 'center', 'row')}\n  margin-left: -20px;\n  margin-right: -20px;\n  padding-left: 10px;\n  padding-right: 20px;\n  margin-bottom: 10px;\n  padding: 3px 0;\n  background: #eee;\n  ul {\n    ${({ theme }) => theme.flex('', 'center', '')}\n    padding-left: 20px;\n    li {\n      ${({ theme }) => theme.flex('', 'center', '')}\n      font-size: 14px;\n      color: #222;\n      &:first-child {\n        padding-right: 5px;\n      }\n    }\n  }\n`;\n\nconst Select = styled.select`\n  height: 30px;\n  width: 120px;\n  padding: 2px 10px;\n  border: 1px solid #e5e5e5;\n  border-radius: 4px;\n  line-height: 28px;\n  color: #666;\n  outline: none;\n  &:last-child {\n    margin-right: 20px;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport ORDER_EXAMPLE from './DataOrder';\n\nexport default function Table({ pagetext, orderList, setOrderList }) {\n  // 전체 버튼의 클릭 상태\n  const [allCheck, setAllCheck] = useState(false);\n\n  // 현재 클릭된 주문 항목의 id\n  const [checkOrder, setCheckOrder] = useState([]);\n\n  // 현재 클릭된 배열의 상태\n  const [isSelected, setIsSelected] = useState(\n    new Array(orderList && orderList.length).fill(false)\n  );\n\n  // 전체 주문 리스트가 변경하게 되면 배열 새로 생성\n  useEffect(() => {\n    setIsSelected(new Array(orderList && orderList.length).fill(false));\n  }, [orderList]);\n\n  // 전체 버튼을 클릭했을 경우 실행\n  const handleClickAll = () => {\n    if (allCheck) {\n      setAllCheck(!allCheck);\n      setIsSelected(new Array(orderList.length).fill(!allCheck));\n      setCheckOrder([]);\n    } else {\n      setAllCheck(!allCheck);\n      setIsSelected(new Array(orderList.length).fill(!allCheck));\n      setCheckOrder(orderList.map((el) => String(el.id)));\n    }\n  };\n\n  //개별 버튼을 클릭했을 경우 실행\n  const selectProduct = (e, idx) => {\n    const { checked, id } = e.target;\n    const newSelceted = isSelected.map((el, i) => (idx === i ? !el : el));\n\n    setIsSelected(newSelceted);\n\n    // 모든 버튼이 눌렸을 경우\n    if (newSelceted.every((item) => item)) {\n      setAllCheck(true);\n    } else {\n      setAllCheck(false);\n    }\n\n    // 체크된 상품의 id를 저장한다.\n    if (!!checked) {\n      setCheckOrder(checkOrder.concat(id));\n    } else {\n      setCheckOrder(checkOrder.filter((el) => el !== id));\n    }\n  };\n\n  const changedApply = (e) => {\n    // 상품이 하나도 체크되지 않았을 경우\n    if (!checkOrder.length) {\n      console.log(checkOrder);\n      return alert('상품을 선택하세요');\n    }\n\n    // 전체버튼이 체크되지 않는 경우\n    if (!!checkOrder.length) {\n      // 상품의 진열여부, 판매여부를 변경한다.\n      setOrderList(\n        orderList.map((el) => {\n          if (checkOrder.includes(String(el.id))) {\n            return { ...el, order_status: pagetext.button };\n          } else {\n            return el;\n          }\n        })\n      );\n\n      // 적용 후 모든 상태를 초기화시킨다.\n      setAllCheck(false);\n      setCheckOrder([]);\n    }\n  };\n  return (\n    <div>\n      <UpperTable>\n        <div>\n          <Total>\n            전체 조회건 수: <b>0</b> 건\n          </Total>\n          {pagetext.button && (\n            <Button blue onClick={(e) => changedApply(e)}>\n              {pagetext.button}\n            </Button>\n          )}\n        </div>\n        <div>\n          <Button>전체주문 엑셀다운로드</Button>\n          <Button>선택주문 엑셀다운로드</Button>\n        </div>\n      </UpperTable>\n      <TableContainer>\n        <table>\n          <thead>\n            <th className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                checked={allCheck ? 'checked' : ''}\n                onChange={handleClickAll}\n              />\n            </th>\n            {pagetext.table_header &&\n              pagetext.table_header.map((el) => <th>{el}</th>)}\n          </thead>\n          <tbody>\n            {orderList &&\n              orderList.map((order, index) => (\n                <tr>\n                  <td className=\"checkbox\">\n                    <input\n                      type=\"checkbox\"\n                      id={order.id}\n                      checked={isSelected[index] ? 'checked' : ''}\n                      onChange={(e) => selectProduct(e, index)}\n                    />\n                  </td>\n                  {Object.values(order)\n                    .slice(1)\n                    .map((el) => (\n                      <td>{el}</td>\n                    ))}\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </TableContainer>\n      <UnderTable>\n        <Button>전체주문 엑셀다운로드</Button>\n        <Button>선택주문 엑셀다운로드</Button>\n      </UnderTable>\n    </div>\n  );\n}\n\nconst UpperTable = styled.div`\n  ${({ theme }) => theme.flex('space-between')}\n`;\n\nconst Total = styled.span`\n  font-size: 13px;\n  margin-right: 15px;\n`;\n\nconst Button = styled.button`\n  height: 22px;\n  padding: 2px 5px;\n  margin-left: 3px;\n  color: white;\n  background: #5cb85c;\n  border: 1px solid #4cae4c;\n  border-radius: 4px;\n  font-size: 12px;\n  ${(props) =>\n    props.blue &&\n    css`\n      background: #428bca;\n      border-color: #357ebd;\n    `}\n`;\n\nconst TableContainer = styled.div`\n  width: 100%;\n  overflow-x: scroll;\n  white-space: nowrap;\n  table {\n    margin-top: 10px;\n    width: 100%;\n    th {\n      padding: 8px;\n      background: #eee;\n      border: 1px solid #ddd;\n      font-size: 14px;\n      font-weight: 500;\n      text-align: start;\n      overflow-x: hidden;\n      white-space: nowrap;\n      &.checkbox {\n        width: 25px;\n        text-align: center;\n      }\n    }\n    td {\n      padding: 8px;\n      border: 1px solid #ddd;\n      font-size: 14px;\n      color: #222;\n      overflow-x: hidden;\n      white-space: nowrap;\n      &.checkbox {\n        width: 25px;\n        text-align: center;\n      }\n    }\n    input[type='checkbox'] {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst UnderTable = styled.div`\n  ${({ theme }) => theme.flex('flex-end')}\n  margin-top: 10px;\n`;\n","// 실제 백에서 전달해줄 key값에 맞는 Mockdata를 만들었습니다\n\nconst ORDER_EXAMPLE = [\n  [\n    // 상품준비관리에서 받는 데이터 형태\n    {\n      id: 1,\n      paid_at: '2020-10-18 11:21:39',\n      order_number: 20201018000001000,\n      detail_order_number: 'B2020101800001001',\n      product_name: '행복하세요-*',\n      option_info: '1234',\n      quantity: 1,\n      receiver_name: '이지형',\n      receiver_contact: '010-2017-9999',\n      order_status: '상품준비',\n    },\n    {\n      id: 2,\n      paid_at: '2020-10-23 14:21:08',\n      order_number: 20201018000002000,\n      detail_order_number: 'B2020101800001002',\n      product_name: '고군분투상준님 화이팅 아자아자',\n      option_info: '4321',\n      quantity: 1,\n      receiver_name: '김상준',\n      receiver_contact: '010-9937-1234',\n      order_status: '상품준비',\n    },\n    {\n      id: 3,\n      paid_at: '2020-10-23 14:21:08',\n      order_number: 20201018000002000,\n      detail_order_number: 'B2020101800001002',\n      product_name: '도길님 맨날 놀려서 미안해요 030',\n      option_info: '4321',\n      quantity: 1,\n      receiver_name: '김도길',\n      receiver_contact: '010-9937-1234',\n      order_status: '상품준비',\n    },\n  ],\n  [\n    // 배송중관리에서 받는 데이터 형태\n    {\n      id: 1,\n      paid_at: '2020-10-18 11:21:39',\n      order_number: 20201018000001000,\n      shipment_from: '2020-10-18 11:21:39',\n      detail_order_number: 'B2020101800001001',\n      product_name: '고생하셨어요 다솜님',\n      receiver_name: '정다솜',\n      receiver_contact: '010-2017-9999',\n      order_status: '배송중',\n    },\n    {\n      id: 2,\n      paid_at: '2020-10-18 11:21:39',\n      order_number: 20201018000001000,\n      shipment_from: '2020-10-18 11:21:39',\n      detail_order_number: 'B2020101800001001',\n      product_name: '지은님 보고싶어여',\n      receiver_name: '나지은',\n      receiver_contact: '010-2017-9999',\n      order_status: '배송중',\n    },\n  ],\n  [\n    // 배송완료관리에서 받는 데이터 형태\n    {\n      id: 1,\n      paid_at: '2020-10-18 11:21:39',\n      order_number: 20201018000001000,\n      shipment_until: '2020-10-18 11:21:39',\n      detail_order_number: 'B2020101800001001',\n      product_name: '종일님 남은 협업 화이팅입니다',\n      receiver_name: '손종일',\n      receiver_contact: '010-2017-9999',\n      order_status: '배송완료',\n    },\n    {\n      id: 2,\n      paid_at: '2020-10-18 11:21:39',\n      order_number: 20201018000001000,\n      shipment_until: '2020-10-18 11:21:39',\n      detail_order_number: 'B2020101800001001',\n      product_name: '맥북 2020 16 inch...선물드리고 싶네요',\n      receiver_name: '김수정',\n      receiver_contact: '010-2017-9999',\n      order_status: '배송완료',\n    },\n  ],\n  [\n    // 구매확정관리에서 받는 데이터 형태\n    {\n      id: 1,\n      paid_at: '2020-10-18 11:21:39',\n      confirmed_at: '2020-10-23 11:21:39',\n      order_number: 20201018000001000,\n      detail_order_number: 'B2020101800001001',\n      product_name: '성은님 감사합니다-!',\n      option_info: '1234',\n      quantity: 1,\n      receiver_name: '홍성은',\n      receiver_contact: '010-2017-9999',\n      order_status: '구매확정',\n    },\n    {\n      id: 2,\n      paid_at: '2020-10-23 14:21:08',\n      confirmed_at: '2020-10-22 13:01:23',\n      order_number: 20201018000002000,\n      detail_order_number: 'B2020101800001002',\n      product_name: '호큐니파이리',\n      option_info: '4321',\n      quantity: 1,\n      receiver_name: '김호균',\n      receiver_contact: '010-9937-1234',\n      order_status: '구매확정',\n    },\n    {\n      id: 3,\n      paid_at: '2020-10-23 14:21:08',\n      confirmed_at: '2020-10-22 13:01:23',\n      order_number: 20201018000002000,\n      detail_order_number: 'B2020101800001002',\n      product_name: '주희님짱!',\n      option_info: '4321',\n      quantity: 1,\n      receiver_name: '장주희',\n      receiver_contact: '010-9937-1234',\n      order_status: '구매확정',\n    },\n  ],\n  [],\n];\n\nexport default ORDER_EXAMPLE;\n","const COMPONENT_ORDER = [\n  {\n    id: 1,\n    title: '상품준비',\n    filter_date: '결제완료일',\n    description: [\n      '( 상품준비 단계에서는 구매회원의 주문취소가 가능하며, 배송준비단계로 처리할 경우 3영업일 동안은 구매회원의 주문취소가 불가능합니다. )',\n      '( 배송준비로 변경하신 후 3영업일 이내로 상품 배송이 시작되지 않을 경우 구매회원의 주문취소가 가능하며 이에 따른 책임은 판매자 회원에게 있습니다. (전자상거래법 제 15조 1항에 근거) )',\n    ],\n    table_header: [\n      '결제일자',\n      '주문번호',\n      '주문상세번호',\n      '상품명',\n      '옵션정보',\n      '수량',\n      '주문자명',\n      '핸드폰번호',\n      '주문상태',\n    ],\n    button: '배송처리',\n  },\n  {\n    id: 2,\n    title: '배송중',\n    filter_date: '배송시작일',\n    table_header: [\n      '결제일자',\n      '배송시작일',\n      '주문번호',\n      '주문상세번호',\n      '상품명',\n      '주문자명',\n      '핸드폰번호',\n      '주문상태',\n    ],\n    button: '배송완료처리',\n  },\n  {\n    id: 3,\n    title: '배송완료',\n    filter_date: '배송시작일',\n    table_header: [\n      '결제일자',\n      '배송완료일',\n      '주문번호',\n      '주문상세번호',\n      '상품명',\n      '주문자명',\n      '핸드폰번호',\n      '주문상태',\n    ],\n  },\n  {\n    id: 4,\n    title: '구매확정',\n    filter_date: '구매확정일',\n    table_header: [\n      '결제일자',\n      '결제확정일',\n      '주문번호',\n      '주문상세번호',\n      '상품명',\n      '옵션정보',\n      '수량',\n      '주문자명',\n      '핸드폰번호',\n      '주문상태',\n    ],\n  },\n];\nexport default COMPONENT_ORDER;\n","import { combineReducers } from 'redux';\nimport login from './login';\nimport userInfo from './userInfo';\nimport commonStatus from './commonStatus';\nimport filter from './filter';\nimport sideNav from './sideNav';\nimport nav from './nav';\n\nexport default combineReducers({\n  login,\n  userInfo,\n  commonStatus,\n  filter,\n  sideNav,\n  nav,\n});\n","const LOGGED_IN = 'login/LOGGED_IN';\nconst LOGGED_OUT = 'login/LOGGED_OUT';\n\nexport const lonIn = () => ({\n  type: LOGGED_IN,\n});\n\nexport const lonOut = () => ({\n  type: LOGGED_OUT,\n});\n\nconst initialState = false;\n\nconst login = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGGED_IN:\n      return true;\n    case LOGGED_OUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default login;\n","const SELLER_ATTRIBUTE = 'sellerAttribute/SELLER_ATTRIBUTE';\nconst CLEAR_ATTRIBUTE = 'sellerAttribute/CLEAR_ATTRIBUTE';\n\nexport const getAttribute = (attribute) => ({\n  type: SELLER_ATTRIBUTE,\n  payload: attribute,\n});\n\nexport const clearAttribute = () => ({\n  type: CLEAR_ATTRIBUTE,\n});\n\nconst initialState = { category: '' };\n\nconst commonStatus = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SELLER_ATTRIBUTE:\n      return { category: payload };\n    case CLEAR_ATTRIBUTE:\n      return { category: '' };\n    default:\n      return state;\n  }\n};\n\nexport default commonStatus;\n","import { createGlobalStyle } from 'styled-components';\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap');\n  * {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  box-sizing: border-box;\n  font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  }\n\n  a {\n  text-decoration: none;\n  color: inherit;\n  }\n\n  img {\n    max-width: 100%;\n  }\n\n  button,\n  input {\n    outline: 0;\n    border: 0;\n    background: none;\n    cursor: pointer;\n  }\n\n  body {\n    line-height: 1;\n    margin: 0;\n    height: 100vh;\n    width: 100vw;\n    background-color: #34373A;\n  }\n\n  ol,\n  ul {\n    list-style: none;\n  }\n\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  \n  html,\n  body {\n    width: 100%;\n    height: 100%;\n    font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  }\n`;\nexport default GlobalStyle;\n","import { css } from 'styled-components';\n\nconst theme = {\n  flex: (justify = null, align = null, direction = null) => {\n    return css`\n      display: flex;\n      justify-content: ${justify};\n      align-items: ${align};\n      flex-direction: ${direction};\n    `;\n  },\n};\nexport default theme;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { KeyboardArrowDown } from '@styled-icons/material';\n\nexport default function Header() {\n  return (\n    <HeaderContainer>\n      <Contents>\n        <div>\n          <img src=\"public/Images/logo.png\" />\n          <KeyboardArrowDown size=\"16\" color=\"#CCC\" />\n        </div>\n      </Contents>\n      <StatusBtn>\n        <span>intern_master</span>\n        <KeyboardArrowDown size=\"15\" color=\"#999ba2\" />\n      </StatusBtn>\n    </HeaderContainer>\n  );\n}\n\nconst HeaderContainer = styled.div`\n  ${({ theme }) => theme.flex('space-between', 'center', 'row')}\n  position: fixed;\n  width: 100vw;\n  height: 45px;\n  background: #873b53;\n  z-index: 100;\n  div {\n    ${({ theme }) => theme.flex('', 'center', 'row')}\n  }\n  img {\n    width: 100px;\n    margin-right: 3px;\n  }\n  span {\n    color: white;\n    font-size: 13px;\n    font-weight: 400;\n    margin: 0 0 2px 10px;\n  }\n`;\n\nconst Contents = styled.div`\n  ${({ theme }) => theme.flex('', 'center', 'row')}\n  margin: 0 20px;\n`;\n\nconst StatusBtn = styled.div`\n  ${({ theme }) => theme.flex('', 'center', 'row')}\n  width: 130px;\n  height: 45px;\n  margin-right: 20px;\n  border-left: 1px solid white;\n  span {\n    color: #cecfd3;\n    margin-right: 3px;\n    margin-left: 16px;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport NavList from './NavList';\nimport { KeyboardArrowLeft } from '@styled-icons/material';\n// import SELLER_NAV from './DataSellerNav';\n// import MASTER_NAV from './DataMasterNav';\n\nexport default function Nav() {\n  const [active, setActive] = useState([0, 0]);\n  const [navData, setNavData] = useState([]);\n  const [subActive, setSubActive] = useState(0);\n  const [sidebarSmall, setSidebarSmall] = useState(false);\n\n  // store에 있는 nav 정보를 가져온다.\n  const { nav } = useSelector(({ nav }) => ({\n    nav: nav.nav_list,\n    // filter_list: filter.filter_list,\n  }));\n\n  //nav가 변경되면 nav 데이터를 최신화\n  useEffect(() => {\n    setNavData(nav);\n  }, [nav]);\n\n  // 네브가 눌렸을때, 페이지 이동 함수\n  const handlePage = (menuTitle, subTitle) => {\n    setActive([menuTitle, subTitle]);\n  };\n\n  return (\n    <NavContainer sidebarSmall={sidebarSmall}>\n      <SideToggler\n        sizeToggle={sidebarSmall}\n        onClick={() => setSidebarSmall(!sidebarSmall)}\n      >\n        <KeyboardArrowLeft size={20} />\n      </SideToggler>\n      <NavBox>\n        {navData &&\n          navData.map((el, idx) => (\n            <NavList\n              setSubActive={(e) => setSubActive(e)}\n              active={active}\n              subActive={subActive}\n              key={idx}\n              index={idx + 1}\n              menuTitle={el.menu_title}\n              subTitle={el.sub_menus}\n              handlePage={handlePage}\n              sidebarSmall={sidebarSmall}\n              link={el.main_url}\n            />\n          ))}\n      </NavBox>\n    </NavContainer>\n  );\n}\n\nconst NavContainer = styled.div`\n  width: 215px;\n  height: 100vh;\n  padding-top: 45px;\n  background: #35373a;\n  z-index: 10;\n  ${({ sidebarSmall }) =>\n    sidebarSmall &&\n    css`\n      width: 40px;\n    `}\n  @media only screen and (max-width: 934px) {\n    display: none;\n  }\n`;\n\nconst NavBox = styled.ul`\n  padding-top: 53px;\n`;\n\nconst SideToggler = styled.div`\n  ${({ theme }) => theme.flex('center', 'center')}\n  width: 23px;\n  height: 23px;\n  margin-top: 15px;\n  background-color: #fcfcfc;\n  border-radius: 4px 0 0 4px;\n  float: right;\n  cursor: pointer;\n  ${({ sizeToggle }) =>\n    sizeToggle &&\n    css`\n      transform: rotate(180deg);\n      border-radius: 0 4px 4px 0;\n    `};\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { KeyboardArrowUp } from '@styled-icons/material';\n\nexport default function Footer() {\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <FooterContainer>\n      <div>\n        {' '}\n        | 상호 : (주)브랜디 | 주소 : (06223) 서울특별시 강남구 테헤란로 32길 26\n        청송빌딩 | 사업자등록번호 : 220-88-93187 | 통신판매업신고 :\n        2016-서울강남-00359호 | 이메일 : help@brandi.co.kr\n        <br />\n        2018 © brandi inc.\n      </div>\n      <div onClick={() => scrollToTop()}>\n        <span>\n          <KeyboardArrowUp size={25} />\n        </span>\n      </div>\n    </FooterContainer>\n  );\n}\n\nconst FooterContainer = styled.div`\n  ${({ theme }) => theme.flex('space-between', '', '')}\n  width: 100vw;\n  height: 50px;\n  padding: 10px 20px 5px 20px;\n  background: #35373a;\n  z-index: 100;\n  div {\n    color: #999ba2;\n    line-height: 1.5;\n    font-size: 12px;\n  }\n  span {\n    display: block;\n    width: 25px;\n    height: 25px;\n    background-color: #4d4f55;\n    border-radius: 20px;\n    cursor: pointer;\n  }\n`;\n","const SELLER_NAV = 'sideNav/SELLER_NAV';\nconst MASTER_NAV = 'sideNav/MASTER_NAV';\n\nexport const sellerNav = (items) => ({\n  type: SELLER_NAV,\n  payload: items,\n});\n\nexport const masterNav = (items) => ({\n  type: MASTER_NAV,\n  payload: items,\n});\n\nconst initialState = [];\n\nconst sideNav = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SELLER_NAV:\n      return payload;\n    case MASTER_NAV:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default sideNav;\n","const SAVE_NAV = 'nav/SAVE_NAV';\n// const IS_SELLER_FILTER = 'filter/IS_SELLER_FILTER';\nconst CLEAR_NAV = 'nav/CLEAR_NAV';\n\nexport const saveNav = (items) => ({\n  type: SAVE_NAV,\n  payload: items,\n});\n\n// export const sellerFilter = (items) => ({\n//   type: IS_SELLER_FILTER,\n//   payload: items,\n// });\n\nexport const clearNav = () => ({\n  type: CLEAR_NAV,\n});\n\nconst initialState = {\n  nav_list: [],\n  // [\n  //   {\n  //     id: 1,\n  //     main_url: 'home',\n  //     menu_title: '홈',\n  //     sub_menus: [\n  //       {\n  //         sub_menu_id: 1,\n  //         sub_menu_title: '홈',\n  //         sub_url: 'home',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     id: 2,\n  //     main_url: '',\n  //     menu_title: '통계',\n  //     sub_menus: [\n  //       {\n  //         sub_menu_id: 2,\n  //         sub_menu_title: '생략',\n  //         sub_url: '',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     id: 3,\n  //     main_url: 'order',\n  //     menu_title: '주문관리',\n  //     sub_menus: [\n  //       {\n  //         sub_menu_id: 4,\n  //         sub_menu_title: '상품준비관리',\n  //         sub_url: 'prepareList',\n  //         // sub_url: 'prepareList',\n  //       },\n  //       {\n  //         sub_menu_id: 5,\n  //         sub_menu_title: '배송준비관리',\n  //         sub_url: 'deliveryPrepareList',\n  //         // sub_url: 'deliveryPrepareList',\n  //       },\n  //       {\n  //         sub_menu_id: 6,\n  //         sub_menu_title: '배송중관리',\n  //         sub_url: 'deliveryList',\n  //         // sub_url: 'deliveryList',\n  //       },\n  //       {\n  //         sub_menu_id: 7,\n  //         sub_menu_title: '배송완료관리',\n  //         sub_url: 'deliveryCompleteList',\n  //         // sub_url: 'deliveryCompleteList',\n  //       },\n  //       {\n  //         sub_menu_id: 8,\n  //         sub_menu_title: '구매확정관리',\n  //         sub_url: 'orderConfirmList',\n  //         // sub_url: 'orderConfirmList',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     id: 4,\n  //     main_url: '',\n  //     menu_title: '취소/환불관리',\n  //     sub_menus: [\n  //       {\n  //         sub_menu_id: 2,\n  //         sub_menu_title: '생략',\n  //         sub_url: '',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     id: 5,\n  //     main_url: 'product',\n  //     menu_title: '상품관리',\n  //     sub_menus: [\n  //       {\n  //         sub_menu_id: 9,\n  //         sub_menu_title: '상품관리',\n  //         sub_url: 'product',\n  //       },\n  //       {\n  //         sub_menu_id: 10,\n  //         sub_menu_title: '상품등록',\n  //         sub_url: 'product',\n  //         // sub_url: 'register',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     id: 6,\n  //     main_url: '',\n  //     menu_title: '고객응대관리',\n  //     sub_menus: [\n  //       {\n  //         sub_menu_id: 2,\n  //         sub_menu_title: '생략',\n  //         sub_url: '',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     id: 7,\n  //     main_url: '',\n  //     menu_title: '기획전/쿠폰관리',\n  //     sub_menus: [\n  //       {\n  //         sub_menu_id: 2,\n  //         sub_menu_title: '생략',\n  //         sub_url: '',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     id: 8,\n  //     main_url: 'account',\n  //     menu_title: '회원 관리',\n  //     sub_menus: [\n  //       {\n  //         sub_menu_id: 14,\n  //         sub_menu_title: '회원 관리_커뮤니티',\n  //         sub_url: '',\n  //       },\n  //       {\n  //         sub_menu_id: 15,\n  //         sub_menu_title: '셀러 계정 관리',\n  //         sub_url: 'seller',\n  //       },\n  //     ],\n  //   },\n  // ],\n\n  // filter_list: [\n  //   {\n  //     filterTitle: '판매여부',\n  //     id: 'sale',\n  //     category: [\n  //       {\n  //         category_id: '',\n  //         category_title: '전체',\n  //       },\n  //       {\n  //         category_id: 1,\n  //         category_title: '판매',\n  //       },\n  //       {\n  //         category_id: 0,\n  //         category_title: '미판매',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     filterTitle: '진열여부',\n  //     id: 'display',\n  //     category: [\n  //       {\n  //         category_id: '',\n  //         category_title: '전체',\n  //       },\n  //       {\n  //         category_id: 1,\n  //         category_title: '진열',\n  //       },\n  //       {\n  //         category_id: 0,\n  //         category_title: '미진열',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     filterTitle: '할인여부',\n  //     id: 'discount',\n  //     category: [\n  //       {\n  //         category_id: '',\n  //         category_title: '전체',\n  //       },\n  //       {\n  //         category_id: 1,\n  //         category_title: '할인',\n  //       },\n  //       {\n  //         category_id: 0,\n  //         category_title: '미할인',\n  //       },\n  //     ],\n  //   },\n  // ],\n};\n\nconst nav = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SAVE_NAV:\n      return { nav_list: payload };\n    // case IS_SELLER_FILTER:\n    //   return { filter_list: payload };\n    case CLEAR_NAV:\n      return { nav_list: [] };\n    default:\n      return state;\n  }\n};\n\nexport default nav;\n","const SAVE_FILTER = 'filter/SAVE_FILTER';\nconst IS_SELLER_FILTER = 'filter/IS_SELLER_FILTER';\nconst CLEAR_FILTER = 'filter/CLEAR_FILTER';\n\nexport const saveFilter = (items) => ({\n  type: SAVE_FILTER,\n  payload: items,\n});\n\n// export const sellerFilter = (items) => ({\n//   type: IS_SELLER_FILTER,\n//   payload: items,\n// });\n\nexport const clearFilter = () => ({\n  type: CLEAR_FILTER,\n});\n\nconst initialState = {\n  filter_list: [],\n  // [\n  //   {\n  //     filterTitle: '판매여부',\n  //     id: 'sale',\n  //     category: [\n  //       {\n  //         category_id: '',\n  //         category_title: '전체',\n  //       },\n  //       {\n  //         category_id: 1,\n  //         category_title: '판매',\n  //       },\n  //       {\n  //         category_id: 0,\n  //         category_title: '미판매',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     filterTitle: '진열여부',\n  //     id: 'display',\n  //     category: [\n  //       {\n  //         category_id: '',\n  //         category_title: '전체',\n  //       },\n  //       {\n  //         category_id: 1,\n  //         category_title: '진열',\n  //       },\n  //       {\n  //         category_id: 0,\n  //         category_title: '미진열',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     filterTitle: '할인여부',\n  //     id: 'discount',\n  //     category: [\n  //       {\n  //         category_id: '',\n  //         category_title: '전체',\n  //       },\n  //       {\n  //         category_id: 1,\n  //         category_title: '할인',\n  //       },\n  //       {\n  //         category_id: 0,\n  //         category_title: '미할인',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     filterTitle: '셀러명',\n  //     id: 'seller_name',\n  //   },\n  //   {\n  //     filterTitle: '셀러속성',\n  //     id: 'attribute',\n  //     category: [\n  //       {\n  //         category_id: 0,\n  //         category_title: '전체',\n  //       },\n  //       {\n  //         category_id: 1,\n  //         category_title: '마켓',\n  //       },\n  //       {\n  //         category_id: 2,\n  //         category_title: '쇼핑몰',\n  //       },\n  //     ],\n  //   },\n  // ],\n\n  // filter_list: [\n  //   {\n  //     filterTitle: '판매여부',\n  //     id: 'sale',\n  //     category: [\n  //       {\n  //         category_id: '',\n  //         category_title: '전체',\n  //       },\n  //       {\n  //         category_id: 1,\n  //         category_title: '판매',\n  //       },\n  //       {\n  //         category_id: 0,\n  //         category_title: '미판매',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     filterTitle: '진열여부',\n  //     id: 'display',\n  //     category: [\n  //       {\n  //         category_id: '',\n  //         category_title: '전체',\n  //       },\n  //       {\n  //         category_id: 1,\n  //         category_title: '진열',\n  //       },\n  //       {\n  //         category_id: 0,\n  //         category_title: '미진열',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     filterTitle: '할인여부',\n  //     id: 'discount',\n  //     category: [\n  //       {\n  //         category_id: '',\n  //         category_title: '전체',\n  //       },\n  //       {\n  //         category_id: 1,\n  //         category_title: '할인',\n  //       },\n  //       {\n  //         category_id: 0,\n  //         category_title: '미할인',\n  //       },\n  //     ],\n  //   },\n  // ],\n};\n\nconst filter = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SAVE_FILTER:\n      return { filter_list: payload };\n    // case IS_SELLER_FILTER:\n    //   return { filter_list: payload };\n    case CLEAR_FILTER:\n      return { filter_list: [] };\n    default:\n      return state;\n  }\n};\n\nexport default filter;\n","const TYPE_MASTER = 'userInfo/TYPE_MASTER';\n// const TYPE_SELLER = 'userInfo/isSeller';\nconst TYPE_NONE = 'userInfo/TYPE_NONE';\n\nexport const isMaster = (items) => ({\n  type: TYPE_MASTER,\n  payload: items,\n});\n\n// export const isSeller = () => ({\n//   type: TYPE_SELLER,\n// });\n\nexport const isUnknown = () => ({\n  type: TYPE_NONE,\n});\n\nconst initialState = null;\n\nconst userInfo = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case TYPE_MASTER:\n      return payload;\n    // case TYPE_SELLER:\n    //   return false;\n    case TYPE_NONE:\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default userInfo;\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nexport default function LoginFooter() {\n  return (\n    <Fragment>\n      <FooterFantom></FooterFantom>\n      <Footer>\n        <FooterInner>\n          <CompanyInfo>\n            회사명 : (주)브랜디 | 주소 : (06223) 서울특별시 강남구 테헤란로 32길\n            26 청송빌딩 | 사업자등록번호 : 220-88-93187 I 통신판매업신고 :\n            2016-서울강남-00359호\n          </CompanyInfo>\n          <CompanyInfo>\n            이메일 : help@brandi.co.kr | 2018 © brandi inc.\n          </CompanyInfo>\n          <Policy>\n            <a>이용약관</a> | <a>개인정보처리방침</a>\n          </Policy>\n        </FooterInner>\n      </Footer>\n    </Fragment>\n  );\n}\n\nconst Footer = styled.div`\n  ${({ theme }) => theme.flex('cneter')}\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  padding: 20px 0;\n  background-color: #212121;\n`;\n\nconst FooterFantom = styled.div`\n  display: block;\n  width: 100%;\n  height: 100px;\n  padding: 20px 0;\n  background-color: #212121;\n`;\n\nconst FooterInner = styled.div`\n  width: 720px;\n  font-size: 11px;\n  color: #999ba2;\n  a {\n    margin-top: 2px;\n    color: #fff;\n  }\n`;\n\nconst CompanyInfo = styled.p`\n  line-height: 1.5;\n`;\n\nconst Policy = styled.div`\n  margin-top: 10px;\n`;\n","import React from 'react';\n\nexport default function dateFormatChange(date) {\n  if (!!date) {\n    var year = date.getFullYear(); //YYYY\n    var month = 1 + date.getMonth(); //MM\n    month = month >= 10 ? month : '0' + month; //MM 두자리로 저장\n    var day = date.getDate(); //D\n    day = day >= 10 ? day : '0' + day; //DD\n    return `${year}-${month}-${day}`;\n  }\n}\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nexport default function Purchase({ showModal, setShowModal }) {\n  return (\n    <Fragment>\n      <ModalOverlay showModal={showModal} />\n      <ModalWrapper showModal={showModal} onClick={() => setShowModal(false)}>\n        <ModalInner>123123123</ModalInner>\n      </ModalWrapper>\n    </Fragment>\n  );\n}\n\nconst ModalOverlay = styled.div`\n  pointer-events: ${({ showModal }) => (showModal ? 'initial' : 'none')};\n  opacity: ${({ showModal }) => (showModal ? 1 : 0)};\n  transition: all 0.25s ease-in;\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 999;\n`;\nconst ModalWrapper = styled.div`\n  pointer-events: ${({ showModal }) => (showModal ? 'initial' : 'none')};\n  transform: translateY(${({ showModal }) => (showModal ? '0' : '700px')});\n  opacity: ${({ showModal }) => (showModal ? 1 : 0)};\n  transition: all 0.25s ease-in;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  outline: 0;\n  z-index: 1000;\n`;\nconst ModalInner = styled.div`\n  ${({ theme }) => theme.flex(null, null, 'column')};\n  box-sizing: border-box;\n  position: relative;\n  box-shadow: 0 0 6px #ebebeb;\n  background-color: white;\n  border-radius: 10px;\n  width: 70%;\n  top: 50%;\n  transform: translateY(-50%);\n  margin: 0 auto;\n  padding: 20px;\n  height: 90vh;\n`;\n"],"sourceRoot":""}