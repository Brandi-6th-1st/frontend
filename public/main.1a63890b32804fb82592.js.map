{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/Routes.js","webpack:///./src/Pages/Login/Login.js","webpack:///./src/Pages/Signup/Signup.js","webpack:///./src/Pages/Main/Main.js","webpack:///./src/Components/Nav/NavList.js","webpack:///./src/Components/Nav/SubList.js","webpack:///./src/Pages/Product/ProductManagement.js","webpack:///./src/Pages/Product/Components/ProductDetail.js","webpack:///./src/Components/Purchase.js","webpack:///./src/Pages/Product/Components/FiltersContainer.js","webpack:///./src/Components/SelectSearch.js","webpack:///./src/Components/FilterBox.js","webpack:///./src/Components/SellerSearchFilter.js","webpack:///./src/Pages/ProductDetailManage/ProductDetailManage.js","webpack:///./src/Pages/Home/Home.js","webpack:///./src/Pages/Home/Components/ProductManage.js","webpack:///./src/Pages/Home/Components/RefundManage.js","webpack:///./src/Pages/Home/Components/Bookmark.js","webpack:///./src/Pages/Home/Components/QnA.js","webpack:///./src/Pages/Home/Data/DataQnA.js","webpack:///./src/Pages/Home/Components/Notice.js","webpack:///./src/Pages/Home/Data/DataNotification.js","webpack:///./src/Pages/Home/Components/Chart.js","webpack:///./src/Pages/Order/Order.js","webpack:///./src/Pages/Order/OrderManagement.js","webpack:///./src/Pages/Order/Filter.js","webpack:///./src/Pages/Order/DateFilter.js","webpack:///./src/Pages/Order/OrderList.js","webpack:///./src/Pages/Order/Table.js","webpack:///./src/Pages/Order/DataOrder.js","webpack:///./src/Pages/Order/DataOrderComponent.js","webpack:///./src/Store/Reducer/index.js","webpack:///./src/Styles/global.js","webpack:///./src/Styles/theme.js","webpack:///./src/config.js","webpack:///./src/Components/Header/Header.js","webpack:///./src/Components/Nav/Nav.js","webpack:///./src/Components/Footer/Footer.js","webpack:///./src/Store/Reducer/userInfo.js","webpack:///./src/Pages/Login/LoginFooter.js","webpack:///./src/Components/ChangeTimeFormat.js","webpack:///./src/Components/CallendarManage.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","store","createStore","combineReducers","ReactDOM","render","Provider","ThemeProvider","theme","document","getElementById","Switch","Route","exact","path","component","Login","Signup","Main","Home","ProductManagement","ProductDetailManage","Order","useState","idValue","pwValue","inputValue","setInputValue","useForm","register","handleSubmit","errors","dispatch","useDispatch","history","useHistory","handleInput","e","nextInputValue","target","useSelector","userInfo","is_master","filter_list","nav_list","loggedIn","console","log","API","preventDefault","axios","post","identification","password","headers","timeout","success","status","getIsMaster","getNavList","getFilterList","Authorization","localStorage","setItem","saveFilter","saveNav","isMaster","alert","client_message","response","statusText","error","request","message","Container","Content","Logo","alt","src","LoginBox","LoginTitle","onSubmit","Input","ref","required","placeholder","className","onChange","Button","onClick","Join","Link","to","styled","div","flex","img","h3","input","label","props","color","fontWeight","button","watch","Title","SignupBox","SubTitle","confirm","InfoTitle","IconInput","id","TiUserOutline","type","minLength","TiLockClosedOutline","pattern","rePw","TiInputCheckedOutline","validate","ExtraInfo","primary","phone","TiPhoneOutline","mask","AiOutlineWarning","IntputRadio","sellerName","TiSortAlphabeticallyOutline","engSellerName","customerContact","ButtonGroup","readOnly","css","Section","Test","menuTitle","subTitle","index","subActive","active","setSubActive","handlePage","sidebarSmall","link","isSubActive","isPageActive","isHoverActive","setIsHoverActive","handleHover","handleClick","toggleSubNav","Fragment","NavElement","onMouseEnter","onMouseLeave","hoverActive","List","NAV_ICONS","HoverContainer","CategorySmall","categoryIdx","ArrowIcon","KeyboardArrowLeft","size","li","span","홈","VscHome","공지사항","VscComment","통계","VscGraph","주문관리","AiOutlineShoppingCart","VscPackage","상품관리","VscJersey","고객응대관리","AiOutlineSmile","정산관리","AiOutlineCalculator","진열관리","AiOutlineEye","VscGift","회원관리","VscAccount","고객센터","VscInfo","SubContainer","map","el","idx","Subcategory","sub_menu_id","subIdx","goToMenu","sub_url","sub_menu_title","ul","isMounted","setIsMounted","showModal","setShowModal","product","setProduct","filters","setFilters","startDate","endDate","currentDate","setCurrentDate","activePage","setActivePage","setSellerName","select","search","selectBox","setSelectBox","limit","setLimit","btnFilter","setBtnFilter","createBoolean","Array","fill","_","createFilter","filter","category","reduce","acc","useEffect","changeBtnFilter","mainId","selected","getData","param","params","localToken","validateStatus","filterList","DataProductManage","sendData","queryString","until","from","seller_name","Number","handleStartDate","date","handleEndDate","handleSearch","handleSellerName","hadleSelectSearch","handleBtnFilter","subId","chnageSelected","selectedId","addId","includes","concat","allSelected","every","item","allNotSelected","resetFilter","salesId","displayId","isSelected","setIsSelected","allCheck","setAllCheck","checkProduct","setCheckProduct","salesStatus","filterId","displayStatus","changeStatus","setchangeStatus","changeProduct","getItem","removeEl","changeDetail","sales","displayed","product_ids","ProductContainer","TitleContainer","RootTitle","GoListUnordered","GoChevronRight","LimitRange","handleLimit","ChangeContainer","PrintExcelBtn","GoFile","sub","category_id","category_title","ApplyBtn","String","display","product_number","is_on_sale","is_displayed","GoCheck","AllProductView","total_product","TableBox","ProductHead","ProductCategory","twidth","checked","cate","ProductLine","ProductItem","newSelceted","selectProduct","created_at","image_url","width","height","product_name","href","product_code","price","DiscountPrice","discount_rate","BuyBtn","PaginationContainer","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","pageNumber","thead","th","tr","ModalOverlay","ModalWrapper","ModalInner","differentFilter","FilterContainer","FilterCategoryTitle","FilterTitle","FiltersCategoryTitle","SelectFilterCategory","SearchContainer","SearchBtn","CanclehBtn","SearchBox","ProductSearch","changeFilter","filterStatus","SelectFilterTitle","filterTitle","FilterBtnBox","SelectBtn","SellerSearchBox","SellerSearch","sellerStatus","setSellerStatus","DataHomeSeller","priceOfSales","statistics","numOfSales","count","dateBySales","datetime","chartForm","series","tooltipTitle","tooltipUnit","title","text","credits","enabled","showInLegend","xAxis","categories","labels","formatter","this","yAxis","format","tooltip","splitDate","x","split","y","SalesContainer","StaticsContainer","highcharts","Highcharts","options","SalesBox","SalesStatus","SalesCategory","order_preparing","order_delivered","products_on_sale","StaticsBox","StaticsStatus","StaticsTitle","StaticsQnA","NullLi","StaticsCategory","QnANickName","QnAQuestion","QnATitle","QnARegist","StaticsContent","DataQnA","question","SellerNoti","nickname","itemTitle","registration","AiOutlineNotification","DataNotification","CustomerQnA","NotiNum","categoryNum","NotiCategory","NotiTitle","categoryTitle","NotiWriter","writer","NotiRegistDate","registData","GoGraph","StaticsGraph","match","useParams","categoryId","pagetext","COMPONENT_ORDER","newDate","Date","changeDate","dayAgo","monthAgo","year","getFullYear","month","getMonth","day","getDate","searchKeyword","searchOption","setParams","orderList","setOrderList","selectDate","setSelectDate","filterReset","getProductInfo","url","productItem","ManagementContainer","description","handleDate","sendQuery","changeParams","Div","Select","SearchInput","Divs","FilterBox","filter_date","DateBtn","InquiryperiodBox","SelectPeriod","searchDate","dateFormat","placeholderText","shouldCloseOnSelect","DatePicker","Pagebar","KeyboardArrowRight","defaultValue","checkOrder","setCheckOrder","changeId","setChangeId","sendChangeProduct","changeData","UpperTable","Total","blue","order_status","changeQuery","status_id","changedApply","TableContainer","table_header","order","orderId","order_status_id","values","detail_order_number","code","UnderTable","paid_at","order_number","option_info","quantity","receiver_name","receiver_contact","shipment_from","shipment_until","confirmed_at","GlobalStyle","createGlobalStyle","justify","align","direction","HeaderContainer","Contents","KeyboardArrowDown","StatusBtn","LogoutBox","LogoutText","removeItem","isClear","GoSignOut","setActive","navData","setNavData","setSidebarSmall","NavContainer","SideToggler","sizeToggle","NavBox","menu_title","sub_menus","main_url","FooterContainer","scrollTo","top","behavior","KeyboardArrowUp","SAVE_NAV","initialState","items","payload","state","FooterFantom","Footer","FooterInner","CompanyInfo","Policy","locale","ko"],"mappings":"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","file":"main.1a63890b32804fb82592.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([104,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport combineReducers from './Store/Reducer/index';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './Styles/global';\nimport theme from './Styles/theme';\n\nconst store = createStore(combineReducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <Routes />\n      <GlobalStyle />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\nif (module.hot) {\n  module.hot.accept();\n}\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport Login from './Pages/Login/Login';\nimport Signup from './Pages/Signup/Signup';\nimport Main from './Pages/Main/Main';\nimport ProductManagement from './Pages/Product/ProductManagement';\nimport ProductDetailManage from './Pages/ProductDetailManage/ProductDetailManage';\nimport Home from './Pages/Home/Home';\nimport Order from './Pages/Order/Order';\n\nfunction Routes() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/signup\" component={Signup} />\n        <Route exact path=\"/main\" component={Main} />\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/product\" component={ProductManagement} />\n        <Route exact path=\"/product_detail\" component={ProductDetailManage} />\n        <Route exact path=\"/order\" component={Order} />\n        <Route exact path=\"/order/:id\" component={Order} />\n      </Switch>\n    </Router>\n  );\n}\nexport default Routes;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport regeneratorRuntime from 'regenerator-runtime';\nimport { useHistory, Link } from 'react-router-dom';\nimport axios from 'axios';\n// import { saveNav } from '../../Store/Reducer/nav';\n// import { saveFilter } from '../../Store/Reducer/filter';\nimport { isMaster, saveNav, saveFilter } from '../../Store/Reducer/userInfo';\nimport styled from 'styled-components';\nimport { useForm } from 'react-hook-form';\nimport LoginFooter from './LoginFooter';\nimport { API } from '../../config';\n\nexport default function Login() {\n  const [inputValue, setInputValue] = useState({\n    idValue: 'soojsooj',\n    pwValue: 'PW1!soojsooj',\n    // idValue: 'lovemono',\n    // pwValue: 'PW1!lovemono',\n  });\n  // 구조화\n  const { idValue, pwValue } = inputValue;\n  const { register, handleSubmit, errors } = useForm();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  //로그인 버튼 클릭시 입력된 데이터 출력\n  const onSubmit = (data) => {\n    console.log('로그인 data', data);\n  };\n\n  //id, password 입력 값 저장\n  const handleInput = (e) => {\n    const nextInputValue = {\n      ...inputValue,\n      [e.target.name]: e.target.value,\n    };\n    setInputValue(nextInputValue);\n  };\n\n  //master\n  //id:\n  // soojsooj\n  //pw:\n  // PW1!soojsooj\n\n  // lovemono\n  // PW1!lovemono\n\n  //seller\n  // id: seller1\n  //pw: PW1!seller1\n\n  const { is_master, filter_list, nav_list } = useSelector(({ userInfo }) => ({\n    is_master: userInfo.is_master,\n    filter_list: userInfo.filter_list,\n    nav_list: userInfo.nav_list,\n  }));\n\n  const loggedIn = async (e) => {\n    console.log(API + '/account/signin');\n    e.preventDefault();\n    try {\n      const result = await axios.post(\n        `${API}/account/signin`,\n        { identification: idValue, password: pwValue },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          timeout: 3000,\n        }\n      );\n      console.log('결과', result);\n      console.log(result.data.success);\n\n      if (result.status === 200) {\n        const getIsMaster = await result.data.success.is_master;\n        const getNavList = await result.data.success.nav_list;\n        const getFilterList = await result.data.success.filter_list;\n\n        if (!!result.data.success.Authorization) {\n          localStorage.setItem('token', result.data.success.Authorization);\n          dispatch(saveFilter(getFilterList));\n          dispatch(saveNav(getNavList));\n          dispatch(isMaster(getIsMaster));\n          history.push('/home');\n        }\n      } else {\n        return alert(result.data.client_message);\n      }\n    } catch (err) {\n      console.log('erer', err);\n      if (err.response) {\n        if (err.response.statusText === 'UNAUTHORIZED') {\n          alert(err.response.data.client_message);\n        }\n      } else if (error.request) {\n        alert('서버에서 응답이 없습니다.', err.request);\n        console.log('서버 응답 실패');\n        console.log(error.request);\n      } else {\n        alert('메세지 에러', err.message);\n        console.log(error.message);\n        if (error.message === '[INVILD_MESSAGE]') {\n          alert('무슨 응답을 받았습니다.', error.message);\n        }\n      }\n    }\n  };\n\n  return (\n    <Container>\n      <Content>\n        <Logo alt=\"브랜디로고\" src=\"/public/Images/logo2.png\" />\n        <LoginBox>\n          <LoginTitle>브랜디 어드민 로그인</LoginTitle>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Input\n              name=\"idValue\"\n              ref={register({ required: true })}\n              placeholder=\"셀러 아이디\"\n              className={errors.idValue && 'ErrorInput'}\n              onChange={handleInput}\n            />\n            {/* id와 password가 입력되지 않았을 때 나타날 오류 */}\n            {errors.idValue && errors.pwValue && <p>아이디를 입력해주세요</p>}\n            <Input\n              name=\"pwValue\"\n              ref={register({ required: true })}\n              placeholder=\"셀러 비밀번호\"\n              className={errors.pwValue && 'ErrorInput'}\n              onChange={handleInput}\n            />\n            {/* id와 password가 입력되지 않았을 때 나타날 오류 */}\n            {errors.pwValue && <p>비밀번호를 입력해주세요</p>}\n\n            <Button onClick={loggedIn}>로그인</Button>\n            <Join>\n              <p>아직 셀러가 아니신가요?</p>\n              <p>\n                <Link to=\"/Signup\">회원가입하기</Link>\n              </p>\n            </Join>\n          </form>\n        </LoginBox>\n      </Content>\n      <LoginFooter />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  height: 100vh;\n  background-color: #fafafa;\n`;\n\nconst Content = styled.div`\n  ${({ theme }) => theme.flex('center', 'center', 'column')}\n  height: 100vh;\n  padding: 65px 0 50px;\n\n  p {\n    margin-top: 5px;\n    font-size: 12px;\n    font-weight: bold;\n  }\n`;\n\nconst Logo = styled.img`\n  width: 130px;\n  margin: 0 auto 40px auto;\n`;\n\nconst LoginBox = styled.div`\n  width: 380px;\n  height: 380px;\n  padding: 64px 30px 0 30px;\n  background-color: #fff;\n  border-radius: 20px;\n`;\n\nconst LoginTitle = styled.h3`\n  margin: 0 0 25px 0;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  margin: 5px 0;\n  padding: 13px 16px;\n  border: 1px solid #e5e5e5;\n  border-radius: 8px;\n\n  &.ErrorInput {\n    border: 1px solid #b94a48;\n  }\n`;\n\nconst Check = styled.div`\n  ${({ theme }) => theme.flex('space-between', 'center')}\n  margin-top: 20px;\n`;\n\nconst Label = styled.label`\n  ${({ theme }) => theme.flex(null, 'center')}\n  color: ${(props) => props.color};\n  font-weight: ${(props) => props.fontWeight};\n  font-size: 12px;\n`;\n\nconst Checkbox = styled.input`\n  width: 15px;\n  height: 15px;\n  margin-right: 5px;\n  font-weight: 100;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  margin-top: 20px;\n  padding: 13px 0;\n  background-color: black;\n  border-radius: 8px;\n  color: white;\n  text-align: center;\n`;\n\nconst Join = styled.div`\n  ${({ theme }) => theme.flex('center', 'center')}\n  margin-top: 20px;\n\n  p {\n    margin-right: 5px;\n    font-size: 12px;\n    font-weight: 100;\n    :nth-child(2) {\n      color: #3c72ff;\n      font-weight: bold;\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { useForm } from 'react-hook-form';\nimport InputMask from 'react-input-mask';\nimport LoginFooter from '../Login/LoginFooter';\nimport {\n  TiUserOutline,\n  TiLockClosedOutline,\n  TiPhoneOutline,\n  TiInputCheckedOutline,\n  TiSortAlphabeticallyOutline,\n} from 'react-icons/ti';\nimport { AiOutlineWarning } from 'react-icons/ai';\n\nexport default function Signup() {\n  const history = useHistory();\n  const { register, errors, watch, handleSubmit } = useForm({ mode: 'all' });\n\n  const onSubmit = (data) => {\n    console.log(data);\n    if (confirm('입력하신 정보로 셀러신청을 하시겠습니까?') === true) {\n      history.push('/Login');\n    }\n  };\n\n  function handleCancelBtn() {\n    if (confirm('브랜디 회원가입을 취소하시겠습니까?') === true) {\n      history.push('/Login');\n    } else {\n      return false;\n    }\n  }\n\n  return (\n    <Container>\n      <Content>\n        <Logo alt='브랜디로고' src='/public/Images/logo2.png' />\n        <Title>셀러 회원 가입</Title>\n        <hr></hr>\n        <SignupBox>\n          <SubTitle>정보입력</SubTitle>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <InfoTitle>가입 정보</InfoTitle>\n            {/*id를 입력하지 않거나 5글자 미만으로 입력한 경우, border에 색을 주기 위해 className 활용*/}\n            <IconInput className={errors.id && 'ErrorInput'}>\n              {/* id에 에러가 발생할 경우, */}\n              <TiUserOutline color={errors.id ? '#b94a48' : null} />\n              <input\n                name='id'\n                type='text'\n                placeholder='아이디'\n                ref={register({\n                  required: '필수 입력항목 입니다. ',\n                  minLength: {\n                    value: 5,\n                    message: '아이디의 최소 길이는 5글자 입니다.',\n                  },\n                })}\n              />\n            </IconInput>\n            {errors.id && <p>{errors.id.message}</p>}\n            <IconInput className={errors.password && 'ErrorInput'}>\n              <TiLockClosedOutline color={errors.password ? '#b94a48' : null} />\n              <input\n                name='password'\n                type='password'\n                placeholder='비밀번호'\n                ref={register({\n                  required: '필수 입력항목 입니다.',\n                  //패스워드 최소 8글자 최대 20글자, 영문 대소문자, 특수문자\n                  pattern: {\n                    value: /^.*(?=^.{8,20}$)(?=.*\\d)(?=.*[a-zA-Z])(?=.*[!@#$%^&+=]).*$/,\n                    message:\n                      '비밀번호는 8~20글자의 영문대소문자, 숫자, 특수문자를 조합해야 합니다.',\n                  },\n                })}\n              />\n            </IconInput>\n            {errors.password && <p>{errors.password.message}</p>}\n            <IconInput className={errors.rePw && 'ErrorInput'}>\n              <TiInputCheckedOutline color={errors.rePw ? '#b94a48' : null} />\n              <input\n                name='rePw'\n                type='password'\n                placeholder='비밀번호 재입력'\n                ref={register({\n                  validate: (value) =>\n                    value === watch('password') ||\n                    '비밀번호가 일치하지 않습니다',\n                })}\n              />\n            </IconInput>\n            {errors.rePw && <p>{errors.rePw.message}</p>}\n            <InfoTitle>\n              담당자 정보\n              <ExtraInfo primary> (*실제 샵을 운영하시는 분)</ExtraInfo>\n            </InfoTitle>\n            <IconInput className={errors.phone && 'ErrorInput'}>\n              <TiPhoneOutline color={errors.phone ? '#b94a48' : null} />\n              <InputMask\n                mask='999-9999-9999'\n                name='phone'\n                type='tel'\n                placeholder='핸드폰번호'\n                ref={register({\n                  required: '필수 입력항목입니다.',\n                })}\n              />\n            </IconInput>\n            {errors.phone && <p>{errors.phone.message}</p>}\n            <ExtraInfo>\n              <AiOutlineWarning />\n              입점 신청 후 브랜디 담당자가 연락을 드릴 수 있으니 정확한 정보를\n              기입해주세요.\n            </ExtraInfo>\n            <InfoTitle>셀러 정보</InfoTitle>\n            {/* <IntputRadio onClick={handleRadioValue}> */}\n            <IntputRadio>\n              <label>\n                <input\n                  name='seller'\n                  name='shoppingmall'\n                  type='radio'\n                  defaultChecked='checked'\n                  ref={register()}\n                />\n                쇼핑몰\n              </label>\n              <label>\n                <input\n                  name='seller'\n                  name='market'\n                  type='radio'\n                  ref={register()}\n                />\n                마켓\n              </label>\n              <label>\n                <input\n                  name='seller'\n                  name='roadshop'\n                  type='radio'\n                  ref={register()}\n                />\n                로드샵\n              </label>\n              <label>\n                <input\n                  name='seller'\n                  name='designer'\n                  type='radio'\n                  ref={register()}\n                />\n                디자이너브랜드\n              </label>\n              <label>\n                <input\n                  name='seller'\n                  name='general'\n                  type='radio'\n                  ref={register()}\n                />\n                제너럴브랜드\n              </label>\n              <label>\n                <input\n                  name='seller'\n                  name='national'\n                  type='radio'\n                  ref={register()}\n                />\n                내셔널브랜드\n              </label>\n              <label>\n                <input\n                  name='seller'\n                  name='beauty'\n                  type='radio'\n                  ref={register()}\n                />\n                뷰티\n              </label>\n            </IntputRadio>\n            <IconInput className={errors.sellerName && 'ErrorInput'}>\n              <TiSortAlphabeticallyOutline\n                color={errors.sellerName ? '#b94a48' : null}\n              />\n              <input\n                name='sellerName'\n                placeholder='셀러명 (상호)'\n                ref={register({\n                  required: '필수 입력항목입니다.',\n                  pattern: {\n                    value: /^[가-힣a-zA-Z0-9+]+$/,\n                    message: '한글,영문,숫자만 입력해주세요.',\n                  },\n                })}\n              />\n            </IconInput>\n            {errors.sellerName && <p>{errors.sellerName.message}</p>}\n            <IconInput className={errors.engSellerName && 'ErrorInput'}>\n              <TiSortAlphabeticallyOutline\n                color={errors.engSellerName ? '#b94a48' : null}\n              />\n              <input\n                name='engSellerName'\n                placeholder='영문 셀러명 (영문상호)'\n                ref={register({\n                  required: '필수 입력항목입니다.',\n                  pattern: {\n                    value: /^[A-Za-z0-9+]*$/,\n                    message: '셀러 영문명은 소문자만 입력가능합니다.',\n                  },\n                })}\n              />\n            </IconInput>\n            {errors.engSellerName && <p>{errors.engSellerName.message}</p>}\n            <IconInput className={errors.customerContact && 'ErrorInput'}>\n              <TiPhoneOutline\n                color={errors.customerContact ? '#b94a48' : null}\n              />\n              <input\n                name='customerContact'\n                placeholder='고객센터 전화번호'\n                ref={register({\n                  required: '필수 입력항목입니다.',\n                })}\n              />\n            </IconInput>\n            {errors.customerContact && <p>{errors.customerContact.message}</p>}\n            <ButtonGroup>\n              <Button primary type='submit' value='신청' />\n              <Button readOnly value='취소' onClick={handleCancelBtn} />\n            </ButtonGroup>\n          </form>\n        </SignupBox>\n      </Content>\n      <LoginFooter />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: #fafafa;\n`;\n\nconst Content = styled.div`\n  ${({ theme }) => theme.flex('center', 'center', 'column')};\n  width: 500px;\n  height: auto;\n  margin: 0 auto;\n  padding: 30px;\n  background-color: #fff;\n  overflow: auto;\n\n  hr {\n    width: 100%;\n    margin-bottom: 20px;\n    border: 1px solid #e0dfdf;\n  }\n`;\n\nconst Logo = styled.img`\n  width: 130px;\n  margin: 0 auto 40px auto;\n`;\n\nconst Title = styled.h3`\n  width: 100%;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 24px;\n  font-weight: 100;\n`;\n\nconst SignupBox = styled.div`\n  ${({ theme }) => theme.flex('center', 'center', 'column')};\n  width: 100%;\n\n  p {\n    margin-left: 5px;\n    margin-bottom: 10px;\n    font-size: 12px;\n    font-weight: bold;\n    color: #b94a48;\n  }\n`;\n\nconst SubTitle = styled.div`\n  width: 408px;\n  height: 45px;\n  padding-top: 10px;\n  background-color: #353535;\n  color: white;\n  font-size: 20px;\n  text-align: center;\n`;\n\nconst InfoTitle = styled.div`\n  ${({ theme }) => theme.flex(null, 'center')};\n  margin: 30px 0 5px 0;\n  font-size: 18px;\n\n  span {\n    color: #1e90ff;\n    font-size: 14px;\n    vertical-align: center;\n  }\n`;\n\nconst ExtraInfo = styled.div`\n  display: flex;\n  margin-left: 5px;\n  color: #1e90ff;\n  font-size: 12px;\n  ${(props) =>\n    props.primary &&\n    css`\n      font-size: 14px;\n    `};\n`;\n\nconst IconInput = styled.div`\n  ${({ theme }) => theme.flex(null, 'center')}\n  width: 100%;\n  margin: 10px 0;\n  padding: 13px 16px;\n  border: 1px solid #e5e5e5;\n  border-radius: 8px;\n\n  svg {\n    width: 18px;\n    height: 18px;\n  }\n\n  input {\n    margin-left: 10px;\n  }\n  &.ErrorInput {\n    border: 1px solid #b94a48;\n  }\n`;\n\nconst IntputRadio = styled.div`\n  ${({ theme }) => theme.flex(null, 'center')}\n  flex-wrap: wrap;\n  font-size: 13px;\n  line-height: 1.4;\n  label {\n    margin-right: 8px;\n    input {\n      margin-right: 5px;\n    }\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  ${({ theme }) => theme.flex('center')}\n  margin-top: 20px;\n`;\n\nconst Button = styled.input`\n  padding: 6px 12px;\n  width: 49px;\n  background-color: #d9534f;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  font-size: 14px;\n  text-align: center;\n  color: #fff;\n  ${(props) =>\n    props.primary &&\n    css`\n      background-color: #5bc0de;\n      border-top-left-radius: 4px;\n      border-bottom-left-radius: 4px;\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n    `};\n`;\n\nconst SIGNUP_SELLER_LIST = [\n  '쇼핑몰',\n  '마켓',\n  '로드샵',\n  '디자이너브랜드',\n  '제너럴브랜드',\n  '내셔널브랜드',\n  '뷰티',\n];\n\n// const SIGNUP_INFO_LIST = [\n//   {\n//     id: 1,\n//     title: '가입 정보',\n//     inputList: [\n//       {\n//         name: 'id',\n//         type: 'text',\n//         icon: <TiUserOutline />,\n//         placeholder: '아이디',\n//       },\n//       {\n//         name: 'password',\n//         type: 'password',\n//         icon: <TiLockClosedOutline />,\n//         placeholder: '비밀번호',\n//       },\n//       {\n//         name: 'rePasswrod',\n//         type: 'password',\n//         icon: <TiInputCheckedOutline />,\n//         placeholder: '비밀번호 재입력',\n//       },\n//     ],\n//   },\n//   {\n//     id: 2,\n//     title: '담당자 정보',\n//     inputList: [\n//       {\n//         name: 'phone',\n//         type: 'text',\n//         icon: <FiPhoneCall />,\n//         placeholder: '핸드폰번호',\n//       },\n//     ],\n//   },\n//   {\n//     id: 3,\n//     title: '셀러 정보',\n//     inputList: [\n//       {\n//         name: 'sellerName',\n//         type: 'text',\n//         icon: <TiSortAlphabeticallyOutline />,\n//         placeholder: '셀러명 (상호)',\n//       },\n//       {\n//         name: 'englishSellerName',\n//         type: 'text',\n//         icon: <TiSortAlphabeticallyOutline />,\n//         placeholder: '영문 셀러명 (영문상호)',\n//       },\n//       {\n//         name: 'customerCenterContact',\n//         type: 'text',\n//         icon: <FiPhoneCall />,\n//         placeholder: '고객센터 전화번호',\n//       },\n//     ],\n//   },\n// ];\n","import React from 'react';\nimport styled from 'styled-components';\nimport Header from '../../Components/Header/Header';\nimport Nav from '../../Components/Nav/Nav';\nimport Footer from '../../Components/Footer/Footer';\n\nexport default function Main() {\n  return (\n    <div>\n      <Header />\n      <Section>\n        <Nav />\n        <Test>\n          🌈 ✨ 🦾 🙌 🔥 <br />\n          브랜디 1팀 짱!!!!\n          <br /> 🥰 💚 👩‍💻 👨‍💻 💥\n        </Test>\n      </Section>\n      <Footer />\n    </div>\n  );\n}\n\nconst Section = styled.div`\n  display: flex;\n`;\n\nconst Test = styled.div`\n  ${({ theme }) => theme.flex('center', 'center', '')}\n  width: 100%;\n  height: 100vh;\n  padding-top: 45px;\n  background: pink;\n  border-radius: 0 0 0 14px;\n  font-size: 70px;\n  line-height: 1.5;\n  text-align: center;\n  color: white;\n`;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport SubList from './SubList';\nimport { KeyboardArrowLeft, KeyboardArrowDown } from '@styled-icons/material';\nimport {\n  VscHome,\n  VscGraph,\n  VscComment,\n  VscAccount,\n  VscInfo,\n  VscPackage,\n  VscGift,\n  VscJersey,\n} from 'react-icons/vsc';\nimport {\n  AiOutlineCalculator,\n  AiOutlineShoppingCart,\n  AiOutlineEye,\n  AiOutlineSmile,\n} from 'react-icons/ai';\n\nexport default function NavList({\n  menuTitle,\n  subTitle,\n  index,\n  subActive,\n  active,\n  setSubActive,\n  handlePage,\n  sidebarSmall,\n  link,\n}) {\n  const history = useHistory();\n  const isSubActive = index === subActive;\n  const isPageActive = index === active[0];\n  const [isHoverActive, setIsHoverActive] = useState(0);\n\n  const toggleSubNav = (index) => {\n    // 활성화 된 메뉴를 비활성화, 또는 새로운 메뉴를 활성화\n    isSubActive ? setSubActive(0) : setSubActive(index);\n  };\n\n  // nav바가 접혀있을 때, 호버시 효과\n  const handleHover = (index) => {\n    sidebarSmall && setIsHoverActive(index);\n  };\n\n  // 해당 nav가 클릭되었을 때 토글바 실행\n  const handleClick = (index, link) => {\n    toggleSubNav(index);\n    if (link === 'order') {\n      return;\n    }\n    link && history.push('/' + link);\n  };\n\n  return (\n    <Fragment>\n      <NavElement\n        onClick={() => handleClick(index, link)}\n        isPageActive={isPageActive}\n        isSubActive={isSubActive}\n        sidebarSmall={sidebarSmall}\n        onMouseEnter={() => handleHover(index)}\n        onMouseLeave={() => handleHover(0)}\n        hoverActive={index === isHoverActive}\n      >\n        <List>\n          {NAV_ICONS[menuTitle]}\n          {/* 사이드바 사이즈에 따른 카테고리의 형태 변화*/}\n          {sidebarSmall ? (\n            <HoverContainer>\n              <CategorySmall active={index === isHoverActive}>\n                <span>{menuTitle}</span>\n              </CategorySmall>\n              {subTitle && index === isHoverActive && (\n                <SubList\n                  categoryIdx={index}\n                  handlePage={handlePage}\n                  subTitle={subTitle}\n                  active={active}\n                  sidebarSmall={sidebarSmall}\n                />\n              )}\n            </HoverContainer>\n          ) : (\n            <span>{menuTitle}</span>\n          )}\n        </List>\n        {/* 사이드 바가 확장되어 있고 subcategory가 있는 경우에만 우측 화살표 아이콘 출력 */}\n        {!sidebarSmall && subTitle && (\n          <ArrowIcon isSubActive={isSubActive} isPageActive={isPageActive}>\n            <KeyboardArrowLeft size={19} />\n          </ArrowIcon>\n        )}\n      </NavElement>\n      {!sidebarSmall && isSubActive && subTitle && (\n        <SubList\n          categoryIdx={index}\n          handlePage={handlePage}\n          subTitle={subTitle}\n          active={active}\n          sidebarSmall={sidebarSmall}\n        />\n      )}\n    </Fragment>\n  );\n}\n\nconst NavElement = styled.li`\n  ${({ theme }) => theme.flex('space-between', 'center', 'row')}\n  position: relative;\n  width: 215px;\n  height: 40px;\n  padding: 10px 15px;\n  border-bottom: 1px solid #444;\n  color: #aaa;\n  cursor: pointer;\n  ${({ isSubActive }) =>\n    isSubActive &&\n    css`\n      background: #2b2b30;\n      border-bottom: 0px solid #444;\n    `};\n  ${({ isPageActive }) =>\n    isPageActive &&\n    css`\n      background: #2b2b30;\n      border-right: 4px solid #d12610;\n    `};\n  &:hover {\n    background-color: #2b2b30;\n  }\n  ${({ sidebarSmall }) =>\n    sidebarSmall &&\n    css`\n      width: 40px;\n      padding-left: 10px;\n    `}\n  ${({ hoverActive }) =>\n    hoverActive &&\n    css`\n      width: 214px;\n    `}\n`;\n\nconst List = styled.div`\n  ${({ theme }) => theme.flex('', 'center', 'row')}\n  position: absolute;\n  span {\n    margin-left: 10px;\n    font-size: 14px;\n    color: #eee;\n  }\n`;\n\nconst HoverContainer = styled.div`\n  position: relative;\n`;\n\nconst CategorySmall = styled.div`\n  ${({ theme }) => theme.flex('', 'center', 'row')}\n  position: relative;\n  top: 0;\n  left: 0;\n  padding-left: 5px;\n  display: ${({ active }) => (active ? 'block' : 'none')};\n`;\n\nconst ArrowIcon = styled.span`\n  position: absolute;\n  right: 15px;\n  color: #666;\n  ${({ isSubActive }) =>\n    isSubActive &&\n    css`\n      transform: rotate(270deg);\n      color: #a6a8ae;\n    `};\n  ${({ isPageActive }) =>\n    isPageActive &&\n    css`\n      color: white;\n    `};\n`;\n\nconst NAV_ICONS = {\n  홈: <VscHome size=\"20\" />,\n  공지사항: <VscComment size=\"20\" />,\n  통계: <VscGraph size=\"20\" />,\n  주문관리: <AiOutlineShoppingCart size=\"20\" />,\n  '취소/환불관리': <VscPackage size=\"20\" />,\n  상품관리: <VscJersey size=\"20\" />,\n  고객응대관리: <AiOutlineSmile size=\"20\" />,\n  정산관리: <AiOutlineCalculator size=\"20\" />,\n  진열관리: <AiOutlineEye size=\"20\" />,\n  '기획전/쿠폰관리': <VscGift size=\"20\" />,\n  회원관리: <VscAccount size=\"20\" />,\n  고객센터: <VscInfo size=\"20\" />,\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\n\nexport default function SubList({\n  active,\n  subTitle,\n  categoryIdx,\n  handlePage,\n  sidebarSmall,\n}) {\n  const history = useHistory();\n  const [subActive, setSubActive] = useState(\n    active[0] === categoryIdx ? active[1] : 0\n  );\n\n  const goToMenu = (subIdx, link) => {\n    handlePage(categoryIdx, subIdx);\n    setSubActive(subIdx);\n\n    // order 페이지로 이동해야되는 url에는 order를 붙여준다.\n    if (\n      link === 'prepareList' ||\n      link === 'deliveryPrepareList' ||\n      link === 'deliveryList' ||\n      link === 'deliveryCompleteList' ||\n      link === 'orderConfirmList'\n    ) {\n      return history.push('/order/' + link);\n    }\n    // 세부 메뉴 클릭시 페이지 이동\n    history.push(link);\n  };\n\n  return (\n    <SubContainer sidebarSmall={sidebarSmall}>\n      {subTitle.map((el, idx) => (\n        <Subcategory\n          index={idx + 1}\n          subActive={subActive}\n          key={el.sub_menu_id}\n          onClick={() => goToMenu(idx + 1, el.sub_url)}\n          sidebarSmall={sidebarSmall}\n        >\n          {el.sub_menu_title}\n        </Subcategory>\n      ))}\n    </SubContainer>\n  );\n}\n\nconst SubContainer = styled.ul`\n  margin: 8px 0;\n  ${({ sidebarSmall }) =>\n    sidebarSmall &&\n    css`\n      background: #35373a;\n      position: absolute;\n      top: 20px;\n      left: 11px;\n      width: 173px;\n    `}\n`;\n\nconst Subcategory = styled.li`\n  ${({ theme }) => theme.flex('', 'center', '')}\n  width: 215px;\n  height: 30px;\n  padding: 5px 0 5px 35px;\n  color: #cecfd3;\n  font-size: 14px;\n  cursor: pointer;\n  &:hover {\n    color: white;\n    background-color: #414247;\n  }\n  ${({ index, subActive }) =>\n    index === subActive &&\n    css`\n      color: white;\n      background-color: #414247;\n    `}\n  ${({ sidebarSmall }) =>\n    sidebarSmall &&\n    css`\n      width: 173px;\n      padding-left: 15px;\n    `}\n`;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport regeneratorRuntime from 'regenerator-runtime';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport dateFormatChange from '../../Components/ChangeTimeFormat';\nimport styled from 'styled-components';\nimport ProductDetail from './Components/ProductDetail';\nimport Nav from '../../Components/Nav/Nav';\nimport Header from '../../Components/Header/Header';\nimport Footer from '../../Components/Footer/Footer';\nimport Purchase from '../../Components/Purchase';\nimport FiltersContainer from './Components/FiltersContainer';\nimport { API } from '../../config';\nimport { localToken } from '../../config';\n\nexport default function ProductManagement() {\n  // 히스토리 선언\n  const history = useHistory();\n  // 여러번 렌더되는 것을 막기위한 상태값\n  const [isMounted, setIsMounted] = useState(false);\n  // 모달창 출력 유무를 관리\n  const [showModal, setShowModal] = useState(false);\n  // 공통으로 사용되는 데이터를 관리\n  const [product, setProduct] = useState();\n  // 리덕스에서 가져온 필터를 상태로 관리\n  const [filters, setFilters] = useState({});\n  // 현재 페이지 관리\n  const [currentDate, setCurrentDate] = useState({\n    startDate: '',\n    endDate: '',\n  });\n  // 현재 페이지 관리\n  const [activePage, setActivePage] = useState(1);\n\n  // 셀러명 검색\n  const [sellerName, setSellerName] = useState(null);\n\n  // 상품검색 필터 설정 후 검색\n  const [selectBox, setSelectBox] = useState({\n    select: null,\n    search: null,\n  });\n\n  const [limit, setLimit] = useState(10);\n\n  const [btnFilter, setBtnFilter] = useState();\n\n  const sellerNameId = 'seller_name';\n  const attributeId = 'attribute';\n  const salesId = 'sale';\n  const displayId = 'display';\n  const discountId = 'discount';\n\n  // store에 저장되어 있는 filter_list를 가져온다.\n  const { filter_list } = useSelector(({ userInfo }) => ({\n    filter_list: userInfo.filter_list,\n  }));\n\n  // 조회기간 시작 날짜 필터\n  const handleEndDate = (date) => {\n    setCurrentDate({ ...currentDate, endDate: date });\n  };\n\n  // 조회기간 끝나는 날짜 필터\n  const handleStartDate = (date) => {\n    setCurrentDate({ ...currentDate, startDate: date });\n  };\n\n  // 셀러명 검색 필터\n  const handleSellerName = (e) => {\n    setSellerName(e.target.value);\n  };\n\n  // 상품검색 종류 선택 후 검색하는 필터\n  const hadleSelectSearch = (e) => {\n    const { name, value } = e.target;\n\n    setSelectBox({\n      ...selectBox,\n      [name]: value,\n    });\n  };\n\n  // 길이별로 boolean 값 생성\n  const createBoolean = (length) => {\n    return new Array(length)\n      .fill()\n      .map((_, index) => (index === 0 ? true : false));\n  };\n\n  // 각 필터별로 선택되었을때 담을 id, boolean 상태 생성\n  const createFilter = (filter) => {\n    setBtnFilter(\n      filter\n        .map((el) => {\n          return {\n            [el.id]: null,\n            [`${el.id}Selected`]: createBoolean(\n              el.category && el.category.length\n            ),\n          };\n        })\n        .reduce((acc, filter) => {\n          return {\n            ...acc,\n            ...filter,\n          };\n        })\n    );\n  };\n\n  useEffect(() => {\n    console.log(btnFilter);\n  }, [btnFilter]);\n\n  // 버튼 필터가 선택되었을 때,\n  const handleBtnFilter = (mainId, subId, idx) => {\n    const chnageSelected = (mainId) => {\n      // 다중 선택 필터인 경우,\n      if (mainId === attributeId) {\n        const result = btnFilter[`${mainId}Selected`].map((el, index) => {\n          return index === idx ? !el : el;\n        });\n\n        // 다중 선택일 경우, 배열에 선택된 필터값을 담아놓는다.\n        const selectedId = () => {\n          const addId = !btnFilter[mainId] ? [subId] : btnFilter[mainId];\n\n          // 배열로 현재 선택된 필터값을 관리\n          if (!btnFilter[mainId]) {\n            return [subId];\n          } else if (addId.includes(subId)) {\n            return addId.filter((el) => {\n              return el !== subId;\n            });\n          } else {\n            return [...addId].concat(subId);\n          }\n        };\n\n        if (idx !== 0) {\n          result[0] = false;\n          return { id: selectedId(), selected: result };\n        }\n\n        return { id: selectedId(), selected: result };\n      }\n\n      // 단일 선택 필터인 경우,\n      else {\n        const result = btnFilter[`${mainId}Selected`].map((el, index) => {\n          return index === idx ? !el : false;\n        });\n        return { id: subId, selected: result };\n      }\n    };\n\n    console.log('어디수정해ㅑㅇ되니', chnageSelected(mainId));\n    // 모든 버튼이 눌렸을 경우,\n    const allSelected = chnageSelected(mainId)\n      .selected.slice(1)\n      .every((item) => {\n        return item;\n      });\n\n    // 모든 버튼이 눌리지 않았을 때,\n    const allNotSelected = chnageSelected(mainId)\n      .selected.slice(1)\n      .every((item) => {\n        return !item;\n      });\n\n    // 전체 버튼 선택\n    if (\n      chnageSelected(mainId).selected[0] ||\n      !!allSelected ||\n      !!allNotSelected\n    ) {\n      console.log(\n        'asdasdas',\n        createBoolean(btnFilter[`${mainId}Selected`].length)\n      );\n      return changeBtnFilter(\n        mainId,\n        null,\n        createBoolean(btnFilter[`${mainId}Selected`].length)\n      );\n    }\n\n    // 상태를 변경할, 필터 이름, id, 현재 선택한 boolean값을 인자로 넣어서 현재 필터의 상태 변경\n    changeBtnFilter(\n      mainId,\n      chnageSelected(mainId).id,\n      chnageSelected(mainId).selected\n    );\n  };\n\n  // 필터의 상태 변경\n  const changeBtnFilter = (mainId, id, selected) => {\n    setBtnFilter({\n      ...btnFilter,\n      [mainId]: id,\n      [`${mainId}Selected`]: selected,\n    });\n  };\n\n  const resetFilter = () => {\n    createFilter(filter_list);\n    setCurrentDate({\n      startDate: '',\n      endDate: '',\n    });\n    setSellerName(null);\n    setSelectBox({\n      select: null,\n      search: null,\n    });\n  };\n\n  // 상품 리스트에 출력할 Data를 서버에서 요청하여 받아옵니다.\n  const getData = async (param = null) => {\n    try {\n      // const result = await axios.get(`/public/Data/DataProductManage.json`, {\n      const result = await axios.get(`${API}/product`, {\n        params: param,\n        timeout: 3000,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: localToken,\n        },\n        // 상태 코드가 500 이상일 경우 거부. 나머지(500보다 작은)는 허용.\n        validateStatus: function (status) {\n          return status < 500;\n        },\n      });\n\n      // 통신에 성공했을 경우,\n      // if (result.status === 200) {\n      // 마스터에서만 사용하는 데이터 분리\n      // const masterData =\n      //   filter_list && filter_list.filter((el) => el.id === sellerNameId)[0];\n\n      // 공통으로 사용하는 데이터\n      const filterList = {\n        filter_list: filter_list.filter((el) => el.id !== sellerNameId),\n      };\n\n      // 상품리스트를 저장\n      const DataProductManage = result.data.success;\n      // const DataProductManage = result.data.DataProductManage;\n\n      setProduct(DataProductManage);\n      setFilters(filterList);\n    } catch (err) {\n      if (err.response) {\n        // 토큰의 정보가 바뀌었다면, 백엔드에서 받은 message 팝업창 출력\n        if (err.response.statusText === 'UNAUTHORIZED') {\n          alert(err.response.data.client_message);\n          history.push('/');\n        }\n      } else if (err.request) {\n        alert('서버에서 응답이 없습니다.', err.request);\n      } else {\n        alert('메세지 에러', err.message);\n      }\n    }\n  };\n\n  // 페이지 언마운트시 실행\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  // 페이지 언마운트 완료 후 실행\n  useEffect(() => {\n    createFilter(filter_list);\n    if (isMounted) {\n      if (!filter_list[0]) {\n        alert('다시 로그인 해주세요.');\n        history.push('/');\n      }\n\n      getData();\n    }\n  }, [filter_list]);\n\n  // 검색 버튼일 눌리게 되면 동작할 함수.\n  const sendData = () => {\n    // 상태로 저장하고 있던 값을 params로 보내기 위해 data form 변경\n    const queryString = {\n      until: dateFormatChange(currentDate.endDate) || null,\n      from: dateFormatChange(currentDate.startDate) || null,\n      seller_name: sellerName || null,\n      [`${selectBox.select}`]: selectBox.search,\n      attribute:\n        (btnFilter &&\n          btnFilter['attribute'] &&\n          btnFilter['attribute'].reduce((acc, el) => {\n            return acc ? acc + ',' + el : acc + el;\n          })) ||\n        null,\n      sale: btnFilter && btnFilter['sale'] !== '' ? btnFilter['sale'] : null,\n      displayed:\n        btnFilter && btnFilter['display'] !== '' ? btnFilter['display'] : null,\n      discount:\n        btnFilter && btnFilter['discount'] !== ''\n          ? btnFilter['discount']\n          : null,\n      offset: (activePage - 1) * limit !== 0 ? (activePage - 1) * limit : null,\n      limit: Number(limit) !== 10 ? limit : null,\n    };\n\n    console.log('전송된 파람스', queryString);\n    //변경된 form을 param에 넣어 get Data\n    getData(queryString);\n  };\n\n  // 검색버튼을 눌렀을 때 실행되는 함수\n  const handleSearch = () => {\n    sendData();\n    setActivePage(1);\n  };\n\n  return (\n    <Fragment>\n      <Header />\n      <Main>\n        <Nav />\n        <Section>\n          <Purchase showModal={showModal} setShowModal={setShowModal} />\n          <h3>상품 관리</h3>\n          <FiltersContainer\n            currentDate={currentDate}\n            handleStartDate={handleStartDate}\n            handleEndDate={handleEndDate}\n            filters={filters}\n            handleSearch={handleSearch}\n            sellerName={sellerName}\n            handleSellerName={handleSellerName}\n            selectBox={selectBox}\n            hadleSelectSearch={hadleSelectSearch}\n            btnFilter={btnFilter}\n            handleBtnFilter={handleBtnFilter}\n            resetFilter={resetFilter}\n          />\n          <ProductDetail\n            product={product}\n            setProduct={setProduct}\n            setLimit={setLimit}\n            limit={limit}\n            activePage={activePage}\n            setActivePage={setActivePage}\n            filters={filters}\n            sendData={sendData}\n            setShowModal={setShowModal}\n            salesId={salesId}\n            displayId={displayId}\n          />\n        </Section>\n      </Main>\n      <Footer />\n    </Fragment>\n  );\n}\n\nconst Main = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Section = styled.div`\n  width: 100%;\n  padding: 20px 20px;\n  margin-top: 45px;\n  border-radius: 0 0 0 4px;\n  background-color: #fafafa;\n\n  h3 {\n    font-size: 26px;\n    margin-bottom: 15px;\n    font-weight: 300;\n    color: #666;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport regeneratorRuntime from 'regenerator-runtime';\nimport styled from 'styled-components';\nimport Pagination from 'react-js-pagination';\nimport axios from 'axios';\nimport { API } from '../../../config';\nimport {\n  GoListUnordered,\n  GoChevronRight,\n  GoFile,\n  GoCheck,\n} from 'react-icons/go';\n\nexport default function ProductDetail({\n  product,\n  setLimit,\n  limit,\n  setActivePage,\n  activePage,\n  setProduct,\n  filters,\n  setShowModal,\n  sendData,\n  salesId,\n  displayId,\n}) {\n  const [isMounted, setIsMounted] = useState(0);\n  // 버튼의 클릭 상태를 나타내는 배열 생성\n  const [isSelected, setIsSelected] = useState(\n    new Array(product && product.data && product.data.length).fill(false)\n  );\n  // 전체 상품 체크 상태\n  const [allCheck, setAllCheck] = useState(false);\n  // 상품 디테일에버 체크된 id와 index를 관리하는 배열\n  const [checkProduct, setCheckProduct] = useState([]);\n  // 상품의 판매, 진열 상태 변경하기 위한 상태\n  const [changeStatus, setchangeStatus] = useState({\n    salesStatus: {\n      id: '',\n      // 판매여부가 담긴 필터 id\n      filterId: salesId,\n    },\n    displayStatus: {\n      id: '',\n      // 진열여부가 담긴 필터 id\n      filterId: displayId,\n    },\n  });\n\n  // 전체 버튼을 클릭했을 경우 실행\n  const handleClickAll = () => {\n    if (allCheck) {\n      setAllCheck(!allCheck);\n      setIsSelected(new Array(product.data.length).fill(!allCheck));\n      setCheckProduct([]);\n    } else {\n      setAllCheck(!allCheck);\n      setIsSelected(new Array(product.data.length).fill(!allCheck));\n      setCheckProduct(product.data.map((el) => String(el.product_number)));\n    }\n  };\n\n  //개별 버튼을 클릭했을 경우 실행\n  const selectProduct = (e, idx) => {\n    const { checked, id } = e.target;\n    const newSelceted = isSelected.map((el, i) => (idx === i ? !el : el));\n\n    setIsSelected(newSelceted);\n\n    // 모든 버튼이 눌렸을 경우\n    if (newSelceted.every((item) => item)) {\n      setAllCheck(true);\n    } else {\n      setAllCheck(false);\n    }\n\n    //체크된 상품의 id를 저장한다.\n    if (!!checked) {\n      setCheckProduct(checkProduct.concat(id));\n    } else {\n      setCheckProduct(checkProduct.filter((el) => el !== id));\n    }\n  };\n\n  // limit 상태 업데이트\n  const handleLimit = (e) => {\n    setActivePage(1);\n    setLimit(e.target.value);\n  };\n\n  // limit or page 변경시 쿼리스트링 변경하여 get\n  useEffect(() => {\n    sendData();\n  }, [limit, activePage]);\n\n  // 상품의 갯수 변경시 해당 갯수만큼 불리언 배열 생성\n  useEffect(() => {\n    if (product && product.data && product.data) {\n      sendData();\n      setIsSelected(new Array(product.data.length).fill(false));\n    }\n  }, [product]);\n\n  const changeProduct = async () => {\n    const localToken = localStorage.getItem('token');\n\n    const removeEl = () => {\n      const changeDetail = {\n        sales: !!changeStatus.salesStatus.id\n          ? Number(changeStatus.salesStatus.id)\n          : null,\n        displayed: !!changeStatus.displayStatus.id\n          ? Number(changeStatus.displayStatus.id)\n          : null,\n        product_ids: checkProduct.map((el) => Number(el)),\n      };\n\n      if (changeDetail.sales === null) {\n        delete changeDetail['sales'];\n      }\n      if (changeDetail.displayed === null) {\n        delete changeDetail['displayed'];\n      }\n      return changeDetail;\n    };\n\n    try {\n      const result = await axios.post(\n        `${API}/product`,\n        { ...removeEl() },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: localToken,\n          },\n          timeout: 3000,\n        }\n      );\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // 상품 판매 진열 상태 적용 버튼이 눌렸을 때 실행하는 함수\n  const changedApply = (e) => {\n    // 판매 or 진열 상태를 입력하지 않았을 경우,\n    if (!changeStatus.salesStatus.id && !changeStatus.displayStatus.id) {\n      return alert('판매여부 or 진열여부를 선택하세요.');\n    }\n\n    // 상품이 하나도 체크되지 않았을 경우\n    if (!checkProduct.length) {\n      return alert('상품을 선택하세요');\n    }\n\n    // 전체버튼이 체크되지 않는 경우\n    if (\n      (!!changeStatus.salesStatus.id || !!changeStatus.displayStatus.id) &&\n      !!checkProduct.length\n    ) {\n      // 판매여부 필터에서 판매, 미판매 타이틀을 id 값으로 조회하여 찾아온다.\n      const sales = filters.filter_list\n        .filter((el) => el.id === changeStatus.salesStatus.filterId && el)[0]\n        .category.filter(\n          (item) =>\n            String(item.category_id) === changeStatus.salesStatus.id && item\n        )[0].category_id;\n\n      // 진열여부 필터에서 판매, 미판매 타이틀을 id 값으로 조회하여 찾아온다.\n      const display = filters.filter_list\n        .filter((el) => el.id === changeStatus.displayStatus.filterId && el)[0]\n        .category.filter(\n          (item) =>\n            String(item.category_id) === changeStatus.displayStatus.id && item\n        )[0].category_id;\n\n      // 상품의 진열여부, 판매여부를 변경한다.\n      console.log(\n        '바뀔 값',\n        product &&\n          product.data.map((item) => {\n            if (checkProduct.includes(String(item.product_number))) {\n              return {\n                ...item,\n                is_on_sale: sales !== '' ? sales : item.is_on_sale,\n                is_displayed: display !== '' ? display : item.is_displayed,\n              };\n            } else {\n              return item;\n            }\n          })\n      );\n      setProduct(\n        // {\n        // ...product,\n        // DataProductManage:\n        product &&\n          product.data.map((item) => {\n            if (checkProduct.includes(String(item.product_number))) {\n              return {\n                ...item,\n                is_on_sale: sales !== '' ? sales : item.is_on_sale,\n                is_displayed: display !== '' ? display : item.is_displayed,\n              };\n            } else {\n              return item;\n            }\n          })\n        // }\n      );\n      // sendData();\n\n      changeProduct();\n\n      // 적용 후 모든 상태를 초기화시킨다.\n      setAllCheck(false);\n      setCheckProduct([]);\n      setchangeStatus({\n        salesStatus: {\n          id: '',\n          filterId: salesId,\n        },\n        displayStatus: {\n          id: '',\n          filterId: displayId,\n        },\n      });\n    }\n  };\n\n  return (\n    <ProductContainer>\n      <TitleContainer>\n        <RootTitle>\n          <li>\n            <GoListUnordered />\n          </li>\n          <li>\n            상품관리 / 상품 관리 <GoChevronRight />\n          </li>\n          <li>\n            상품관리 관리 <GoChevronRight />\n          </li>\n          <li> 리스트</li>\n        </RootTitle>\n        <LimitRange>\n          <select\n            value={limit}\n            onChange={(e) => {\n              handleLimit(e);\n            }}\n          >\n            <option value={10}>10개씩 보기</option>\n            <option value={20}>20개씩 보기</option>\n            <option value={50}>50개씩 보기</option>\n          </select>\n        </LimitRange>\n      </TitleContainer>\n      <ChangeContainer>\n        <PrintExcelBtn>\n          <GoFile />\n          선택상품 엑셀다운로드\n        </PrintExcelBtn>\n        <PrintExcelBtn>\n          <GoFile />\n          전체상품 엑셀다운로드\n        </PrintExcelBtn>\n        <select\n          value={changeStatus.salesStatus.id}\n          onChange={(e) =>\n            setchangeStatus({\n              ...changeStatus,\n              salesStatus: {\n                ...changeStatus.salesStatus,\n                id: e.target.value,\n              },\n            })\n          }\n        >\n          <option>판매여부</option>\n          {filters.filter_list &&\n            filters.filter_list.map((el) => {\n              return (\n                el.id === salesId &&\n                el.category.map((sub, i) => {\n                  return (\n                    i !== 0 && (\n                      <option value={sub.category_id} key={i}>\n                        {sub.category_title}\n                      </option>\n                    )\n                  );\n                })\n              );\n            })}\n        </select>\n        <select\n          value={changeStatus.displayStatus.id}\n          onChange={(e) =>\n            setchangeStatus({\n              ...changeStatus,\n              displayStatus: {\n                ...changeStatus.displayStatus,\n                id: e.target.value,\n              },\n            })\n          }\n        >\n          <option>진열여부</option>\n          {filters.filter_list &&\n            filters.filter_list.map((el) => {\n              return (\n                el.id === displayId &&\n                el.category.map((sub, i) => {\n                  return (\n                    i !== 0 && (\n                      <option\n                        value={sub.category_id}\n                        key={i}\n                        name={sub.category_title}\n                      >\n                        {sub.category_title}\n                      </option>\n                    )\n                  );\n                })\n              );\n            })}\n        </select>\n        <ApplyBtn onClick={changedApply}>\n          <GoCheck />\n          적용\n        </ApplyBtn>\n      </ChangeContainer>\n      <AllProductView>\n        <span>\n          전체 조회건 수 : <b> {product && product.total_product}</b>건\n        </span>\n      </AllProductView>\n      <TableBox>\n        <table>\n          <ProductHead>\n            <tr>\n              <ProductCategory twidth={'1%'}>\n                <input\n                  type=\"checkbox\"\n                  checked={allCheck ? 'checked' : ''}\n                  onChange={() => handleClickAll()}\n                ></input>\n              </ProductCategory>\n              <ProductCategory>등록일</ProductCategory>\n              <ProductCategory>대표이미지</ProductCategory>\n              <ProductCategory>상품명</ProductCategory>\n              <ProductCategory>상품코드</ProductCategory>\n              <ProductCategory>상품번호</ProductCategory>\n              <ProductCategory>판매가</ProductCategory>\n              <ProductCategory>할인가</ProductCategory>\n              <ProductCategory>판매여부</ProductCategory>\n              <ProductCategory>진열여부</ProductCategory>\n              <ProductCategory>할인여부</ProductCategory>\n              <ProductCategory>Actions</ProductCategory>\n            </tr>\n          </ProductHead>\n          <tbody>\n            {product &&\n              product.data &&\n              product.data.map((cate, idx) => {\n                return (\n                  <ProductLine idx={idx} key={idx}>\n                    <ProductItem>\n                      <input\n                        type=\"checkbox\"\n                        id={cate.product_number}\n                        checked={isSelected[idx] ? 'checked' : ''}\n                        onChange={(e) => selectProduct(e, idx)}\n                      ></input>\n                    </ProductItem>\n                    <ProductItem>{cate.created_at}</ProductItem>\n                    <ProductItem>\n                      <img src={cate.image_url} width=\"70px\" height=\"70px\" />\n                    </ProductItem>\n                    <ProductItem>{cate.product_name}</ProductItem>\n                    <ProductItem>\n                      <a href=\"\">{cate.product_code}</a>\n                    </ProductItem>\n                    <ProductItem>{cate.product_number}</ProductItem>\n                    <ProductItem>{cate.price}</ProductItem>\n                    <ProductItem>\n                      {cate.price}\n                      <DiscountPrice>\n                        {cate.discount_rate &&\n                          Number(cate.price) *\n                            ((100 - Number(cate.discount_rate)) / 100)}\n                      </DiscountPrice>\n                    </ProductItem>\n                    <ProductItem>\n                      {cate.is_on_sale ? '판매' : '미판매'}\n                    </ProductItem>\n                    <ProductItem>\n                      {cate.is_displayed ? '진열' : '미진열 '}\n                    </ProductItem>\n                    <ProductItem>{cate.discount_rate}</ProductItem>\n                    <ProductItem>\n                      <BuyBtn onClick={() => setShowModal(true)}>\n                        구매하기\n                      </BuyBtn>\n                    </ProductItem>\n                  </ProductLine>\n                );\n              })}\n          </tbody>\n        </table>\n      </TableBox>\n      <PaginationContainer>\n        <Pagination\n          activePage={activePage}\n          itemsCountPerPage={Number(limit)}\n          totalItemsCount={\n            product && product.total_product && Number(product.total_product)\n          }\n          pageRangeDisplayed={5}\n          onChange={(pageNumber) => {\n            setActivePage(pageNumber);\n          }}\n        />\n      </PaginationContainer>\n    </ProductContainer>\n  );\n}\nconst TableBox = styled.div`\n  overflow-x: scroll;\n  white-space: nowrap;\n\n  table {\n    width: 100%;\n  }\n`;\n\nconst ProductContainer = styled.div``;\n\nconst TitleContainer = styled.div`\n  ${({ theme }) => theme.flex('space-between', 'center')}\n  padding: 0 10px 0 20px;\n  margin-bottom: 10px;\n  background-color: #eeeeee;\n`;\n\nconst RootTitle = styled.ul`\n  display: flex;\n  padding: 8px;\n\n  svg {\n    color: #9b9b9b;\n    vertical-align: top;\n  }\n\n  li {\n    font-size: 13px;\n  }\n`;\n\nconst LimitRange = styled.div`\n  height: 100%;\n\n  select {\n    height: 100%;\n    border-radius: 1px;\n    height: 30px;\n  }\n`;\n\nconst ChangeContainer = styled.div`\n  width: 100%;\n  text-align: right;\n\n  select {\n    height: 30px;\n    width: 9%;\n    border: 1px solid #e5e5e5;\n    margin-left: 5px;\n  }\n`;\n\nconst PrintExcelBtn = styled.button`\n  height: 22px;\n  margin-left: 3px;\n  color: #fff;\n  background-color: #5cb85c;\n  border-color: #4cae4c;\n  font-size: 12px;\n  border-radius: 3px;\n  padding: 1px 5px;\n  cursor: pointer;\n\n  svg {\n    vertical-align: middle;\n  }\n`;\n\nconst ApplyBtn = styled.button`\n  width: 5%;\n  height: 30px;\n  color: #fff;\n  background-color: #f0ad4e;\n  border-color: #eea236;\n  margin-left: 5px;\n  border-radius: 3px;\n  cursor: pointer;\n\n  svg {\n    vertical-align: middle;\n  }\n`;\n\nconst AllProductView = styled.div`\n  margin-bottom: 3px;\n\n  span {\n    font-size: 13px;\n  }\n`;\n\nconst ProductHead = styled.thead`\n  width: 100%;\n`;\n\nconst ProductCategory = styled.th`\n  width: auto;\n  background-color: #eee;\n  padding: 9px;\n  border: 1px solid #ddd;\n  font-size: 14px;\n  font-weight: 600;\n  text-align: inherit;\n  overflow-x: hidden;\n  white-space: nowrap;\n`;\n\nconst ProductLine = styled.tr`\n  background-color: ${({ idx }) => (idx % 2 === 0 ? '#f5f5f5' : '#fff')};\n`;\n\nconst ProductItem = styled.th`\n  padding: 9px;\n  border: 1px solid #ddd;\n  font-size: 13px;\n  font-weight: 400;\n  text-align: inherit;\n  vertical-align: top;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  input {\n    width: 14px;\n  }\n\n  a {\n    color: #0d638f;\n\n    :hover {\n      text-decoration: revert;\n    }\n  }\n`;\n\nconst DiscountPrice = styled.span`\n  display: block;\n  color: red;\n`;\n\nconst BuyBtn = styled.button`\n  background-color: #428bca;\n  border-radius: 2px;\n  font-size: 12px;\n  padding: 3px 0px;\n  color: white;\n  width: 100%;\n  cursor: pointer;\n`;\n\nconst PaginationContainer = styled.div`\n  ${({ theme }) => theme.flex('center')}\n  padding:15px 0px;\n\n  .pagination > li {\n    display: inline-block;\n    padding-left: 0;\n    font-size: 13px;\n  }\n\n  .pagination > li > a,\n  .pagination > li > span {\n    position: relative;\n    padding: 6px 12px;\n    margin-left: -1px;\n    line-height: 1.42857143;\n    color: #428bca;\n    text-decoration: none;\n    background-color: #fff;\n    border: 1px solid #ddd;\n  }\n\n  .pagination > li.active > a {\n    background: #eee;\n    border-color: #dddddd;\n    color: #333;\n    cursor: not-allowed;\n  }\n\n  .pagination > li > a:hover {\n    background: #eee;\n    border-color: #dddddd;\n    color: #333;\n  }\n\n  .pagination > li:first-child > a,\n  .pagination > li:first-child > span {\n    margin-left: 0;\n    border-bottom-left-radius: 4px;\n    border-top-left-radius: 4px;\n  }\n\n  .pagination > li:last-child > a,\n  .pagination > li:last-child > span {\n    margin-right: 0;\n    border-top-right-radius: 4px;\n    border-bottom-right-radius: 4px;\n  }\n`;\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nexport default function Purchase({ showModal, setShowModal }) {\n  return (\n    <Fragment>\n      <ModalOverlay showModal={showModal} />\n      <ModalWrapper showModal={showModal} onClick={() => setShowModal(false)}>\n        <ModalInner>123123123</ModalInner>\n      </ModalWrapper>\n    </Fragment>\n  );\n}\n\nconst ModalOverlay = styled.div`\n  pointer-events: ${({ showModal }) => (showModal ? 'initial' : 'none')};\n  opacity: ${({ showModal }) => (showModal ? 1 : 0)};\n  transition: all 0.25s ease-in;\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 999;\n`;\nconst ModalWrapper = styled.div`\n  pointer-events: ${({ showModal }) => (showModal ? 'initial' : 'none')};\n  transform: translateY(${({ showModal }) => (showModal ? '0' : '700px')});\n  opacity: ${({ showModal }) => (showModal ? 1 : 0)};\n  transition: all 0.25s ease-in;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  outline: 0;\n  z-index: 1000;\n`;\nconst ModalInner = styled.div`\n  ${({ theme }) => theme.flex(null, null, 'column')};\n  box-sizing: border-box;\n  position: relative;\n  box-shadow: 0 0 6px #ebebeb;\n  background-color: white;\n  border-radius: 10px;\n  width: 70%;\n  top: 50%;\n  transform: translateY(-50%);\n  margin: 0 auto;\n  padding: 20px;\n  height: 90vh;\n`;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport regeneratorRuntime from 'regenerator-runtime';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport CallendarManage from '../../../Components/CallendarManage';\nimport SelectSearch from '../../../Components/SelectSearch';\nimport FilterBox from '../../../Components/FilterBox';\nimport SellerSearchFilter from '../../../Components/SellerSearchFilter';\n\nexport default function FiltersContainer({\n  currentDate,\n  handleStartDate,\n  handleEndDate,\n  differentFilter,\n  filters,\n  handleSellerName,\n  sellerName,\n  hadleSelectSearch,\n  selectBox,\n  handleSearch,\n  resetFilter,\n  btnFilter,\n  handleBtnFilter,\n}) {\n  const sellerNameId = 'seller_name';\n  const attributeId = 'attribute';\n  const salesId = 'sale';\n  const displayId = 'display';\n  const discountId = 'discount';\n\n  // store에 저장되어 있는 filter_list를 가져온다.\n  const { is_master } = useSelector(({ userInfo }) => ({\n    is_master: userInfo.is_master,\n  }));\n\n  console.log(is_master, '이거이거');\n\n  return (\n    <FilterContainer>\n      <FilterCategoryTitle>\n        <FilterTitle>조회 기간</FilterTitle>\n        {/* 시작일, 마감일을 출력하는 date picker 컴포넌트*/}\n        <CallendarManage\n          currentDate={currentDate}\n          handleStartDate={handleStartDate}\n          handleEndDate={handleEndDate}\n        />\n      </FilterCategoryTitle>\n      <FiltersCategoryTitle>\n        {/* 마스터에만 있는 셀러명 필터 렌더 */}\n        {is_master && (\n          // 셀러명 필터를 출력하는 컴포넌트\n          <SellerSearchFilter\n            sellerName={sellerName}\n            differentFilter={differentFilter}\n            handleSellerName={handleSellerName}\n          />\n        )}\n        <SelectFilterCategory>\n          {/* 상품카테고리 선택 후 검색하는 컴포넌트 */}\n          <SelectSearch\n            selectBox={selectBox}\n            hadleSelectSearch={hadleSelectSearch}\n          />\n        </SelectFilterCategory>\n      </FiltersCategoryTitle>\n      {/* 각 필터별로 다른 name을 가지기 때문에 각각 렌더 */}\n      {filters.filter_list &&\n        filters.filter_list.map((cate, i) => {\n          return (\n            <FilterBox\n              key={i}\n              cate={cate}\n              i={i}\n              handleBtnFilter={handleBtnFilter}\n              btnFilter={btnFilter}\n            />\n          );\n        })}\n      <SearchContainer>\n        <SearchBtn onClick={handleSearch}>검색</SearchBtn>\n        <CanclehBtn onClick={resetFilter}>초기화</CanclehBtn>\n      </SearchContainer>\n    </FilterContainer>\n  );\n}\n\nconst FilterContainer = styled.div`\n  width: 100%;\n  border: 3px solid #eee;\n  background-color: #fff;\n  margin-bottom: 20px;\n`;\n\nconst FilterCategoryTitle = styled.div`\n  ${({ theme }) => theme.flex('', 'center')}\n  margin-top: 10px;\n  margin-bottom: 5px;\n  padding-right: 15px;\n\n  select {\n    ${({ theme }) => theme.flex('', 'center')}\n    width: 100px;\n    height: 30px;\n    margin-left: 15px;\n    border: 1px solid #e5e5e5;\n  }\n`;\n\nconst FiltersCategoryTitle = styled(FilterCategoryTitle)`\n  @media only screen and (max-width: 934px) {\n    ${({ theme }) => theme.flex('', 'center', 'column')}\n  }\n`;\n\nconst SelectFilterCategory = styled(FilterCategoryTitle)`\n  display: inline-flex;\n  width: ${({ cate }) => (cate > 5 ? '100%' : '50%')};\n\n  @media only screen and (max-width: 940px) {\n    width: 100%;\n  }\n`;\n\nconst FilterTitle = styled.div`\n  ${({ theme }) => theme.flex('', 'center')}\n  width: 100px;\n  height: 25px;\n  padding-left: 15px;\n  color: #222222;\n  text-overflow: hidden;\n  white-space: nowrap;\n`;\n\nconst SearchContainer = styled(FilterCategoryTitle)`\n  ${({ theme }) => theme.flex('center')}\n`;\n\nconst CanclehBtn = styled.button`\n  padding: 6px 50px;\n  border: 1px solid #adadad;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #e6e6e6;\n  }\n`;\n\nconst SearchBtn = styled.button`\n  padding: 6px 50px;\n  border: 1px solid #adadad;\n  margin-right: 4px;\n  background-color: #428bca;\n  color: white;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #3071a9;\n  }\n`;\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nexport default function SelectSearch({ selectBox, hadleSelectSearch }) {\n  return (\n    <Fragment>\n      <select\n        name=\"select\"\n        value={selectBox.select || ''}\n        onChange={(e) => hadleSelectSearch(e)}\n      >\n        <option>Select</option>\n        <option value=\"product_name\">상품명</option>\n        <option value=\"product_id\">상품번호</option>\n        <option value=\"product_code\">상품코드</option>\n      </select>\n      <SearchBox>\n        <ProductSearch\n          name=\"search\"\n          value={selectBox.search || ''}\n          onChange={(e) => hadleSelectSearch(e)}\n          placeholder=\"검색어를 입력하세요.\"\n          type=\"text\"\n        ></ProductSearch>\n      </SearchBox>\n    </Fragment>\n  );\n}\n\nconst SearchBox = styled.div`\n  display: table;\n  border: 1px solid #e5e5e5;\n  width: 51%;\n  margin: 0;\n\n  @media only screen and (max-width: 934px) {\n    width: 100%;\n  }\n`;\n\nconst ProductSearch = styled.input`\n  width: 100%;\n  display: table-cell;\n  padding: 6px 12px;\n  cursor: inherit;\n\n  ::placeholder {\n    text-align: center;\n  }\n`;\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nexport default function FilterBox({\n  cate,\n  i,\n  changeFilter,\n  filterStatus,\n  btnFilter,\n  handleBtnFilter,\n}) {\n  return (\n    <SelectFilterCategory cate={cate.category.length} key={i}>\n      <SelectFilterTitle>{cate.filterTitle} :\u001c</SelectFilterTitle>\n      <FilterBtnBox>\n        {cate.category.map((sub, idx) => {\n          return (\n            <SelectBtn\n              key={idx}\n              onClick={() => handleBtnFilter(cate.id, sub.category_id, idx)}\n              idx={idx}\n              btnFilter={btnFilter}\n              name={cate.id}\n            >\n              {sub.category_title}\n            </SelectBtn>\n          );\n        })}\n      </FilterBtnBox>\n    </SelectFilterCategory>\n  );\n}\nconst SelectFilterCategory = styled.div`\n  display: inline-flex;\n  width: ${({ cate }) => (cate > 5 ? '100%' : '50%')};\n  margin-top: 10px;\n  margin-bottom: 5px;\n  padding-right: 15px;\n\n  select {\n    ${({ theme }) => theme.flex('', 'center')}\n    width: 100px;\n    height: 30px;\n    margin-left: 15px;\n    border: 1px solid #e5e5e5;\n  }\n\n  @media only screen and (max-width: 940px) {\n    width: 100%;\n  }\n`;\n\nconst SelectFilterTitle = styled.div`\n  display: inline-flex;\n  width: 100px;\n  height: 25px;\n  padding-left: 15px;\n  color: #222222;\n  text-overflow: hidden;\n  white-space: nowrap;\n`;\n\nconst FilterBtnBox = styled.div`\n  margin: 0px 15px;\n`;\n\nconst SelectBtn = styled.button`\n  background-color: ${({ name, btnFilter, idx }) =>\n    btnFilter[`${name}Selected`][idx] && '#428bca'};\n\n  &:hover {\n    background-color: ${({ name, btnFilter, idx }) =>\n      btnFilter[`${name}Selected`][idx] && '#3071a9'};\n\n    background-color: ${({ name, btnFilter, idx }) =>\n      !btnFilter[`${name}Selected`][idx] && '#e6e6e6'};\n  }\n\n  color: ${({ name, btnFilter, idx }) =>\n    btnFilter[`${name}Selected`][idx] && 'white'};\n\n  margin-right: 3px;\n  padding: 6px 12px;\n  border: 1px solid #adadad;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nexport default function SellerSearchFilter({ sellerName, handleSellerName }) {\n  return (\n    <SelectFilterCategory>\n      <FilterTitle>셀러명</FilterTitle>\n      <SellerSearchBox>\n        <SellerSearch\n          name=\"셀러명\"\n          value={sellerName || ''}\n          onChange={(e) => handleSellerName(e)}\n          type=\"text\"\n          placeholder=\"검색어를 입력하세요.\"\n        ></SellerSearch>\n      </SellerSearchBox>\n    </SelectFilterCategory>\n  );\n}\nconst SelectFilterCategory = styled.div`\n  display: inline-flex;\n  width: ${({ cate }) => (cate > 5 ? '100%' : '50%')};\n  margin-top: 10px;\n  margin-bottom: 5px;\n  padding-right: 15px;\n\n  select {\n    ${({ theme }) => theme.flex('', 'center')}\n    width: 100px;\n    height: 30px;\n    margin-left: 15px;\n    border: 1px solid #e5e5e5;\n  }\n\n  @media only screen and (max-width: 940px) {\n    width: 100%;\n  }\n`;\n\nconst FilterTitle = styled.div`\n  ${({ theme }) => theme.flex('', 'center')}\n  width: 100px;\n  height: 25px;\n  padding-left: 15px;\n  color: #222222;\n  text-overflow: hidden;\n  white-space: nowrap;\n`;\n\nconst SellerSearchBox = styled.div`\n  display: table;\n  border: 1px solid #e5e5e5;\n  width: 68%;\n  margin: 0 0 0 15px;\n\n  @media only screen and (max-width: 934px) {\n    width: 100%;\n  }\n`;\n\nconst SellerSearch = styled.input`\n  display: table-cell;\n  width: 100%;\n  padding: 6px 12px;\n  cursor: pointer;\n\n  ::placeholder {\n    text-align: center;\n  }\n`;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport regeneratorRuntime from 'regenerator-runtime';\nimport styled from 'styled-components';\nimport Nav from '../../Components/Nav/Nav';\nimport Header from '../../Components/Header/Header';\nimport Footer from '../../Components/Footer/Footer';\nimport { API } from '../../config';\n\nexport default function Purchase({}) {\n  return (\n    <Fragment>\n      <Header />\n      <Main>\n        <Nav />\n        <Section>수정님이 작업할 영역</Section>\n      </Main>\n      <Footer />\n    </Fragment>\n  );\n}\n\nconst Main = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Section = styled.div`\n  width: 100%;\n  padding: 20px 20px;\n  margin-top: 45px;\n  border-radius: 0 0 0 4px;\n  background-color: #fafafa;\n\n  h3 {\n    font-size: 26px;\n    margin-bottom: 15px;\n    font-weight: 300;\n    color: #666;\n  }\n`;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport regeneratorRuntime from 'regenerator-runtime';\nimport Highcharts, { error } from 'highcharts';\n// import HighchartsReact from 'highcharts-react-official';\n// import { GoGraph } from 'react-icons/go';\nimport ProductManage from './Components/ProductManage';\nimport RefundManage from './Components/RefundManage';\nimport Bookmark from './Components/Bookmark';\nimport QnA from './Components/QnA';\nimport Notice from './Components/Notice';\nimport Nav from '../../Components/Nav/Nav';\nimport Header from '../../Components/Header/Header';\nimport Footer from '../../Components/Footer/Footer';\nimport Chart from './Components/Chart';\nimport { API } from '../../config';\n\nexport default function Home() {\n  const history = useHistory();\n  // axios시 받은 data를 data 상태로 관리한다.\n  const [sellerStatus, setSellerStatus] = useState();\n\n  // Test : json형식 mock-data 생성\n  // axios get을 사용하여 데이터를 받아온다.\n  const getData = async () => {\n    const localToken = localStorage.getItem('token');\n\n    try {\n      // const result = await axios.get(`/public/Data/DataHomeSeller.json`);\n      const result = await axios.get(`${API}/home`, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: localToken,\n        },\n        timeout: 3000,\n      });\n      if (result.status === 200) {\n        // 받아온 데이터를 비구조 할당하여 data에 저장한다.\n        const DataHomeSeller = result.data.success;\n        setSellerStatus(DataHomeSeller);\n      } else {\n        alert(result.data.client_message);\n        history.push('/');\n      }\n    } catch (err) {\n      if (err.response) {\n        if (err.response.statusText === 'CONFLICT') {\n          alert(err.response.data.client_message);\n          history.push('/');\n        }\n      } else if (error.request) {\n        // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n        // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n        // Node.js의 http.ClientRequest 인스턴스입니다.\n        console.log(err.request);\n      } else {\n        // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n        console.log('Error', error.message);\n      }\n    }\n  };\n\n  // 페이지 마운트시 fetch 하여 배송, 즐겨찾기, 차트 데이터 등을 받아온다.\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // 매출 금액 차트에 들어가는 일별 Price\n  const priceOfSales =\n    sellerStatus &&\n    sellerStatus.statistics.map((item) => {\n      return item.sales;\n    });\n\n  // 매출 건수 차트에 들어가는 일별 건수\n  const numOfSales =\n    sellerStatus &&\n    sellerStatus.statistics.map((item) => {\n      return item.count;\n    });\n\n  // 매출 차트에 공통으로 사용되는 금액, 건수의 날짜\n  const dateBySales =\n    sellerStatus &&\n    sellerStatus.statistics.map((item) => {\n      return item.datetime;\n    });\n\n  // 매출 금액에 들어가는 차트 데이터\n  const priceChart = () =>\n    chartForm(priceOfSales, dateBySales, null, '결제 금액', '원');\n\n  // 매출 건수에 들어가는 차트 데이터\n  const numChart = () =>\n    chartForm(numOfSales, dateBySales, '#AA4643', '결제 건수', '건');\n\n  const chartForm = (series, date, color, tooltipTitle, tooltipUnit) => {\n    const options = {\n      title: {\n        // 차트에 표기되는 메인 Title을 보이지 않게 Null로 변경\n        text: null,\n      },\n      credits: {\n        // 차트에 표기되는 highchart 제거\n        enabled: false,\n      },\n      // 차트에 표시되는 선의 종류\n      series: [\n        {\n          color: color,\n          // 차트에 표기되는 Data ( 매출 건수, 매출 금액)\n          data: series,\n          // 차트에 표기되는 Data 이름\n          name: tooltipTitle,\n          // 차트 하단에 표기되는 Name을 표시하지 않게 해줍니다.\n          showInLegend: false,\n        },\n      ],\n      // X축 관련 Format 및 data\n      xAxis: {\n        // X축에 표시되는 Data\n        categories: date,\n        labels: {\n          // 차트에 월,일만 표기되도록 앞에 년도를 짤라서 출력 (데이터에 따른 수정 예정)\n          formatter: function () {\n            return this.value;\n          },\n        },\n      },\n      // Y축 관련 Format 및 data\n      yAxis: {\n        // Y축 왼쪽에 표시되는 Title을 보이지 않게 null로 설정\n        title: {\n          text: null,\n        },\n        // Y축 표시도는 data format을 1 000단위로 설정\n        labels: {\n          format: '{value:,.0f} ',\n        },\n      },\n      // 차트에 hover 하였을때 출력되는 툴팁\n      tooltip: {\n        formatter: function () {\n          // axios에서 넘겨받은 날짜를 xx년 xx월 xx일 형식으로 바꾸기 위해서 split\n          const splitDate = this.x.split('/');\n          // 위에서 split한 Data를 각 Format에 맞게 넣어 출력한다.\n          var tooltipText = `${tooltipTitle} <br> <b> ${splitDate[0]}월  ${splitDate[1]}일 : ${this.y} ${tooltipUnit}</b>`;\n          return tooltipText;\n        },\n      },\n      showInLegend: true,\n    };\n    return options;\n  };\n\n  return (\n    <Fragment>\n      <Header />\n      <Main>\n        <Nav />\n        <Section>\n          <SalesContainer>\n            {/* 상품, 배송 상태 차트 컴포넌트 */}\n            <ProductManage sellerStatus={sellerStatus} />\n            {/* 환불, 반품 상태 차트 컴포넌트 */}\n            <RefundManage />\n            {/* 즐겨찾기, 전체 상품수 등 상태 차트 컴포넌트 */}\n            <Bookmark sellerStatus={sellerStatus} />\n          </SalesContainer>\n          <StaticsContainer>\n            {/* 매출 통계 건수 차트 생성하여 컴포넌트 분리 예정 */}\n            <Chart highcharts={Highcharts} options={numChart()} />\n            <Chart highcharts={Highcharts} options={priceChart()} />\n            {/* <StaticsBox>\n              <StaticsStatus>\n                <StaticsTitle>\n                  <GoGraph />\n                  <span>\n                    매출 통계[최근 30일간의 결제완료된 주문 건수의 합계]\n                  </span>\n                </StaticsTitle>\n                <StaticsGraph>\n                  <HighchartsReact\n                    highcharts={Highcharts}\n                    options={numChart()}\n                  />\n                </StaticsGraph>\n              </StaticsStatus>\n            </StaticsBox>\n             */}\n            {/* 매출 통계 금액 차트 생성하여 컴포넌트 분리 예정 */}\n            {/* <StaticsBox>\n              <StaticsStatus>\n                <StaticsTitle>\n                  <GoGraph />\n                  <span>\n                    매출 통계[최근 30일간의 결제완료된 주문 금액의 합계]\n                  </span>\n                </StaticsTitle>\n                <StaticsGraph>\n                  <HighchartsReact\n                    highcharts={Highcharts}\n                    options={priceChart()}\n                  />\n                </StaticsGraph>\n              </StaticsStatus>\n            </StaticsBox>\n           */}\n          </StaticsContainer>\n          <StaticsContainer>\n            {/* Q&A 차트 컴포넌트 */}\n            <QnA />\n            {/* 공지사항 컴포넌트 */}\n            <Notice />\n          </StaticsContainer>\n        </Section>\n      </Main>\n      <Footer />\n    </Fragment>\n  );\n}\n\nconst Main = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Section = styled.div`\n  width: 100%;\n  padding: 20px;\n  padding-top: 65px;\n  border-radius: 0 0 0 4px;\n  background-color: #fafafa;\n`;\n\nconst SalesContainer = styled.div`\n  display: flex;\n\n  @media only screen and (max-width: 750px) {\n    ${({ theme }) => theme.flex('', '', 'column')}\n  }\n`;\n\nconst StaticsContainer = styled.div`\n  display: flex;\n  margin-bottom: 22px;\n\n  @media only screen and (max-width: 750px) {\n    ${({ theme }) => theme.flex('', '', 'column')}\n  }\n`;\n\n// const StaticsBox = styled.div`\n//   display: inline-block;\n//   width: 50%;\n//   min-height: 1px;\n//   padding: 0px 10px;\n\n//   @media only screen and (max-width: 750px) {\n//     width: 100%;\n//   }\n// `;\n\n// const StaticsStatus = styled.div`\n//   border: 1px solid #dddddd;\n// `;\n\n// const StaticsTitle = styled.div`\n//   padding: 10px 15px;\n//   background-color: #f5f5f5;\n//   border-bottom: 1px solid #dddddd;\n\n//   svg {\n//     vertical-align: bottom;\n//     color: gray;\n//   }\n\n//   span {\n//     padding-left: 5px;\n//     font-size: 13px;\n//     color: gray;\n//   }\n// `;\n\n// const StaticsGraph = styled.div`\n//   padding: 10px;\n// `;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function ProductManage({ sellerStatus }) {\n  return (\n    <SalesBox>\n      <SalesStatus>\n        <SalesCategory>\n          <span>상품 준비 : </span>\n          <b>{sellerStatus && sellerStatus.order_preparing}건 </b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>배송 준비 : </span>\n          <b>2건 </b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>배송 중 : </span>\n          <b>5건 </b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>배송 완료 : </span>\n          <b>{sellerStatus && sellerStatus.order_delivered}건 </b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>구매 확정 : </span>\n          <b>3건 </b>\n        </SalesCategory>\n      </SalesStatus>\n    </SalesBox>\n  );\n}\n\nconst SalesBox = styled.div`\n  display: inline-block;\n  width: 33.3%;\n  padding: 0 15px;\n  margin-bottom: 22px;\n\n  @media only screen and (max-width: 750px) {\n    width: 100%;\n  }\n`;\n\nconst SalesStatus = styled.div`\n  background-color: #fff;\n  padding: 15px 20px 0px 20px;\n  border: 1px solid #dddddd;\n  border-radius: 3px;\n`;\n\nconst SalesCategory = styled.div`\n  ${({ theme }) => theme.flex('space-between')}\n  height:30px;\n\n  span {\n    font-size: 13px;\n  }\n\n  b {\n    font-size: 13px;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function RefundManage() {\n  return (\n    <SalesBox>\n      <SalesStatus>\n        <SalesCategory>\n          <span>환불 요청 :</span>\n          <b>1 건</b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>반품 진행 :</span>\n          <b>5 건</b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>주문 취소중 :</span>\n          <b>3 건</b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>환불 승인중 :</span>\n          <b>2 건</b>\n        </SalesCategory>\n      </SalesStatus>\n    </SalesBox>\n  );\n}\n\nconst SalesBox = styled.div`\n  display: inline-block;\n  width: 33.3%;\n  padding: 0 15px;\n  margin-bottom: 22px;\n\n  @media only screen and (max-width: 750px) {\n    width: 100%;\n  }\n`;\n\nconst SalesStatus = styled.div`\n  height: 100%;\n  background-color: #fff;\n  padding: 15px 20px 0px 20px;\n  border: 1px solid #dddddd;\n  border-radius: 3px;\n`;\n\nconst SalesCategory = styled.div`\n  ${({ theme }) => theme.flex('space-between')}\n  height:30px;\n\n  span,\n  b {\n    font-size: 13px;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function Bookmark({ sellerStatus }) {\n  return (\n    <SalesBox>\n      <SalesStatus>\n        <SalesCategory>\n          <span>즐겨찾기 수:\u001c</span>\n          <b>9 건</b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>전체 상품 수:\u001c</span>\n          <b>{sellerStatus && sellerStatus.total_product} 건</b>\n        </SalesCategory>\n        <SalesCategory>\n          <span>노출 상품 수:\u001c</span>\n          <b>{sellerStatus && sellerStatus.products_on_sale} 건</b>\n        </SalesCategory>\n      </SalesStatus>\n    </SalesBox>\n  );\n}\n\nconst SalesBox = styled.div`\n  display: inline-block;\n  width: 33.3%;\n  padding: 0 15px;\n  margin-bottom: 22px;\n\n  @media only screen and (max-width: 750px) {\n    width: 100%;\n  }\n`;\n\nconst SalesStatus = styled.div`\n  background-color: #fff;\n  height: 100%;\n  padding: 15px 20px 0px 20px;\n  border: 1px solid #dddddd;\n  border-radius: 3px;\n`;\n\nconst SalesCategory = styled.div`\n  ${({ theme }) => theme.flex('space-between')}\n  height:30px;\n\n  span,\n  b {\n    font-size: 13px;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport DataQnA from '../Data/DataQnA';\nimport { GoListUnordered } from 'react-icons/go';\n\nexport default function QnA() {\n  return (\n    <StaticsBox>\n      <StaticsStatus>\n        <StaticsTitle>\n          <GoListUnordered />\n          <span>Q&A 미답변</span>\n        </StaticsTitle>\n        <StaticsQnA>\n          <ul>\n            <li>전체</li>\n            <li>미답변</li>\n            <li>답변</li>\n            <NullLi></NullLi>\n          </ul>\n        </StaticsQnA>\n        <StaticsCategory>\n          <ul>\n            <QnANickName>회원 닉네임</QnANickName>\n            <QnAQuestion>질문</QnAQuestion>\n            <QnATitle>상품명</QnATitle>\n            <QnARegist>등록일</QnARegist>\n          </ul>\n        </StaticsCategory>\n        <StaticsContent>\n          {DataQnA.map((question, idx) => {\n            return (\n              <SellerNoti key={idx}>\n                <QnANickName>{question.nickname}</QnANickName>\n                <QnAQuestion>{question.question}</QnAQuestion>\n                <QnATitle>{question.itemTitle}</QnATitle>\n                <QnARegist>{question.registration}</QnARegist>\n              </SellerNoti>\n            );\n          })}\n        </StaticsContent>\n      </StaticsStatus>\n    </StaticsBox>\n  );\n}\n\nconst StaticsBox = styled.div`\n  display: inline-block;\n  width: 50%;\n  min-height: 1px;\n  padding: 0px 10px;\n\n  @media only screen and (max-width: 750px) {\n    width: 100%;\n  }\n`;\n\nconst StaticsStatus = styled.div`\n  border: 1px solid #dddddd;\n`;\n\nconst StaticsTitle = styled.div`\n  padding: 10px 15px;\n  background-color: #f5f5f5;\n  border-bottom: 1px solid #dddddd;\n\n  svg {\n    vertical-align: bottom;\n    color: gray;\n  }\n\n  span {\n    padding-left: 5px;\n    font-size: 13px;\n    color: gray;\n  }\n`;\n\nconst StaticsQnA = styled.div`\n  ul {\n    display: flex;\n    margin: 0px;\n    padding: 0px;\n    height: 100%;\n\n    li {\n      width: 18%;\n      padding: 10px 15px;\n      font-size: 13px;\n      text-align: center;\n      border-top: 1px solid #dddddd;\n      border-right: 1px solid #dddddd;\n      border-left: 1px solid #dddddd;\n    }\n  }\n`;\n\nconst NullLi = styled.div`\n  width: 100%;\n  border-bottom: 1px solid #dddddd;\n`;\n\nconst StaticsCategory = styled.div`\n  ul {\n    display: flex;\n    margin: 0px;\n    padding: 0px;\n  }\n`;\n\nconst StaticsContent = styled.div`\n  height: 100%;\n  ul {\n    display: flex;\n    margin: 0px;\n    padding: 0px;\n  }\n`;\n\nconst SellerNoti = styled.ul`\n  display: flex;\n  margin: 0px;\n  padding: 0px;\n  border-top: 1px solid #dddddd;\n\n  li {\n    font-size: 13px;\n  }\n`;\n\nconst QnANickName = styled.li`\n  text-align: center;\n  padding: 8px;\n  font-size: 13px;\n  width: 20%;\n`;\n\nconst QnAQuestion = styled(QnANickName)`\n  width: 36%;\n`;\n\nconst QnATitle = styled(QnANickName)`\n  width: 20%;\n`;\n\nconst QnARegist = styled(QnANickName)`\n  width: 24%;\n`;\n","const DataQnA = [\n  {\n    id: 1,\n    nickname: '상준',\n    question: '주문 취소 요청합니다.',\n    itemTitle: '셔츠',\n    registration: '2020.10.13',\n  },\n  {\n    id: 2,\n    nickname: '지형',\n    question: '배송 문의드립니다.',\n    itemTitle: '상의',\n    registration: '2020.10.14',\n  },\n  {\n    id: 3,\n    nickname: '지은',\n    question: '상품 수정 요청합니다.',\n    itemTitle: '가디건',\n    registration: '2020.10.19',\n  },\n  ,\n  {\n    id: 4,\n    nickname: '성은',\n    question: '오배송 문의드립니다.',\n    itemTitle: '와이드핏 슬랙스',\n    registration: '2020.10.20',\n  },\n  ,\n  {\n    id: 5,\n    nickname: '수정',\n    question: '환불 요청 방법을 알고 싶습니다.',\n    itemTitle: '블라우스',\n    registration: '2020.10.23',\n  },\n];\n\nexport default DataQnA;\n","import React from 'react';\nimport styled from 'styled-components';\nimport DataNotification from '../Data/DataNotification';\nimport { AiOutlineNotification } from 'react-icons/ai';\n\nexport default function Notice() {\n  return (\n    <StaticsBox>\n      <StaticsStatus>\n        <StaticsTitle>\n          <AiOutlineNotification />\n          <span>공지사항</span>\n        </StaticsTitle>\n        <StaticsContent>\n          {DataNotification.map((question, idx) => {\n            return (\n              <CustomerQnA key={idx}>\n                <NotiNum>{question.categoryNum}</NotiNum>\n                <NotiCategory>{question.category}</NotiCategory>\n                <NotiTitle>{question.categoryTitle}</NotiTitle>\n                <NotiWriter>{question.writer}</NotiWriter>\n                <NotiRegistDate>{question.registData}</NotiRegistDate>\n              </CustomerQnA>\n            );\n          })}\n        </StaticsContent>\n      </StaticsStatus>\n    </StaticsBox>\n  );\n}\n\nconst StaticsBox = styled.div`\n  display: inline-block;\n  width: 50%;\n  min-height: 1px;\n  padding: 0px 10px;\n\n  @media only screen and (max-width: 750px) {\n    width: 100%;\n  }\n`;\n\nconst StaticsStatus = styled.div`\n  border: 1px solid #dddddd;\n`;\n\nconst StaticsTitle = styled.div`\n  padding: 10px 15px;\n  background-color: #f5f5f5;\n  border-bottom: 1px solid #dddddd;\n\n  svg {\n    vertical-align: bottom;\n    color: gray;\n  }\n\n  span {\n    padding-left: 5px;\n    font-size: 13px;\n    color: gray;\n  }\n`;\n\nconst StaticsContent = styled.div`\n  height: 100%;\n\n  ul {\n    display: flex;\n    margin: 0px;\n    padding: 0px;\n  }\n`;\n\nconst CustomerQnA = styled.ul`\n  display: flex;\n  margin: 0px;\n  padding: 0px;\n  border-top: 1px solid #dddddd;\n\n  li {\n    font-size: 13px;\n  }\n`;\n\nconst NotiNum = styled.li`\n  text-align: center;\n  padding: 8px;\n  width: 10%;\n`;\n\nconst NotiCategory = styled(NotiNum)`\n  width: 24%;\n`;\n\nconst NotiTitle = styled(NotiNum)`\n  width: 24%;\n`;\n\nconst NotiWriter = styled(NotiNum)`\n  width: 18%;\n`;\n\nconst NotiRegistDate = styled(NotiNum)`\n  width: 24%;\n`;\n","const DataNotification = [\n  {\n    id: 1,\n    categoryNum: '공지',\n    category: '공통',\n    categoryTitle: '브랜디 공지글입니다',\n    writer: '은수',\n    registData: '2020.10.13',\n  },\n  {\n    id: 2,\n    categoryNum: '공지',\n    category: '일반',\n    categoryTitle: '브랜디 카페 이용 안내',\n    writer: '규덕',\n    registData: '2020.10.13',\n  },\n  {\n    id: 3,\n    categoryNum: 1,\n    category: '공통',\n    categoryTitle: '배송 환불 규정 안내',\n    writer: '성진',\n    registData: '2020.10.13',\n  },\n  ,\n  {\n    id: 4,\n    categoryNum: 2,\n    category: '일반',\n    categoryTitle: '명절 배송 관련 안내',\n    writer: '지선',\n    registData: '2020.10.14',\n  },\n  ,\n  {\n    id: 5,\n    categoryNum: 3,\n    category: '공통',\n    categoryTitle: '서비스 상세 안내',\n    writer: '다솜',\n    registData: '2020.10.18',\n  },\n  ,\n  {\n    id: 6,\n    categoryNum: 4,\n    category: '공통',\n    categoryTitle: '베스트 상품 안내',\n    writer: '도길',\n    registData: '2020.10.19',\n  },\n  ,\n  {\n    id: 7,\n    categoryNum: 5,\n    category: '공통',\n    categoryTitle: '사이즈 문의 내용',\n    writer: '상호',\n    registData: '2020.10.21',\n  },\n];\n\nexport default DataNotification;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { GoGraph } from 'react-icons/go';\n\nexport default function Chart({ highcharts, options }) {\n  return (\n    <StaticsBox>\n      <StaticsStatus>\n        <StaticsTitle>\n          <GoGraph />\n          <span>매출 통계[최근 30일간의 결제완료된 주문 건수의 합계]</span>\n        </StaticsTitle>\n        <StaticsGraph>\n          <HighchartsReact highcharts={Highcharts} options={options} />\n        </StaticsGraph>\n      </StaticsStatus>\n    </StaticsBox>\n  );\n}\n\nconst StaticsBox = styled.div`\n  display: inline-block;\n  width: 50%;\n  min-height: 1px;\n  padding: 0px 10px;\n\n  @media only screen and (max-width: 750px) {\n    width: 100%;\n  }\n`;\n\nconst StaticsStatus = styled.div`\n  border: 1px solid #dddddd;\n`;\n\nconst StaticsTitle = styled.div`\n  padding: 10px 15px;\n  background-color: #f5f5f5;\n  border-bottom: 1px solid #dddddd;\n\n  svg {\n    vertical-align: bottom;\n    color: gray;\n  }\n\n  span {\n    padding-left: 5px;\n    font-size: 13px;\n    color: gray;\n  }\n`;\n\nconst StaticsGraph = styled.div`\n  padding: 10px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Header from '../../Components/Header/Header';\nimport Nav from '../../Components/Nav/Nav';\nimport Footer from '../../Components/Footer/Footer';\nimport OrderManagement from './OrderManagement';\n\nexport default function Order() {\n  return (\n    <div>\n      <Header />\n      <Section>\n        <Nav />\n        <OrderManagement />\n      </Section>\n      <Footer />\n    </div>\n  );\n}\n\nconst Section = styled.div`\n  display: flex;\n  width: 100vw;\n`;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport regeneratorRuntime from 'regenerator-runtime';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Filter from './Filter';\nimport OrderList from './OrderList';\nimport dateFormatChange from '../../Components/ChangeTimeFormat';\nimport COMPONENT_ORDER from './DataOrderComponent';\n\nexport default function OrderManagement() {\n  // 주소에 있는 id 파라미터로 동일한 컴포넌트에서 다른 데이터를 사용하여 각 주문 상태에 따른 내용을 가져옵니다.\n  const match = useParams();\n  // 해당 주소가 담겨 오면 숫자로 리턴한다.\n  const categoryId = () => {\n    if (match.id === 'prepareList') {\n      return 1;\n    }\n    if (match.id === 'deliveryList') {\n      return 2;\n    }\n    if (match.id === 'deliveryPrepareList') {\n      return 2;\n    }\n    if (match.id === 'deliveryCompleteList') {\n      return 3;\n    }\n    if (match.id === 'orderConfirmList') {\n      return 4;\n    }\n    return match.id;\n  };\n\n  const pagetext = COMPONENT_ORDER[categoryId() - 1];\n\n  // 현재 시간을 newData에 할당\n  const newDate = new Date();\n\n  // 몇일전, 몇달전으로 리턴하는 함수\n  const changeDate = (dayAgo, monthAgo) => {\n    const year = newDate.getFullYear();\n    const month = newDate.getMonth() - monthAgo;\n    const day = newDate.getDate() - dayAgo;\n    return new Date(year, month, day);\n  };\n\n  // datePicker에서 현재 가지고 있는 상태\n  const [currentDate, setCurrentDate] = useState({\n    startDate: changeDate(3, 0),\n    endDate: new Date(),\n  });\n\n  // 검색버튼 클릭시 보낼 데이터 관리\n  const [params, setParams] = useState({\n    startDate: null,\n    endDate: null,\n    searchKeyword: null,\n    searchOption: null,\n  });\n\n  // axios.get 시 주문 항목 관리\n  const [orderList, setOrderList] = useState();\n\n  // 현재 클릭되어 있는 날짜 상태\n  const [selectDate, setSelectDate] = useState([\n    false,\n    false,\n    true,\n    false,\n    false,\n    false,\n  ]);\n\n  const handleEndDate = (date) => {\n    setCurrentDate({ ...currentDate, endDate: date });\n  };\n\n  // DatePicker 라이브러리에서 지원하는 form과 관리하는 form이 달라서 따로 관리해주었다.\n  const handleStartDate = (date) => {\n    setCurrentDate({ ...currentDate, startDate: date });\n  };\n\n  const filterReset = () => {\n    setCurrentDate({\n      startDate: changeDate(3, 0),\n      endDate: new Date(),\n    });\n    setParams({\n      startDate: null,\n      endDate: null,\n      searchKeyword: null,\n      searchOption: null,\n    });\n    setSelectDate([false, false, true, false, false, false]);\n  };\n\n  // axios.get 하게되는 함수이다. params를 따로 인자로 빼어 params만 넣어서 언제든 실행 가능\n  const getProductInfo = async (params) => {\n    try {\n      const url = () => {\n        if (categoryId() === 1) {\n          return `/public/Data/DataProductPreManage.json`;\n        }\n        if (categoryId() === 2) {\n          return `/public/Data/DataShippingMansge.json`;\n        }\n        if (categoryId() === 3) {\n          return `/public/Data/DataDeliveryComplitedManage.json`;\n        }\n        if (categoryId() === 4) {\n          return `/public/Data/DataConfirmPurchase.json`;\n        }\n      };\n      const result = await axios.get(\n        url(),\n        // `/public/Data/DataProductPreManage.json`,\n        // `/public/Data/DataShippingMansge.json`,\n        // `/public/Data/DataDeliveryComplitedManage.json`,\n        // `/public/Data/DataConfirmPurchase.json`,\n        {\n          params: params,\n          timeout: 3000, //3초\n        }\n      );\n      if (result.status === 200) {\n        const { DataProductManage } = result.data;\n        setOrderList(DataProductManage.productItem);\n      } else {\n        if (result.statusText === 'CONFLICT') {\n          alert(result.data.client_message);\n          history.push('/');\n        }\n      }\n    } catch (err) {\n      console.log('erer', err);\n      if (err.response) {\n        if (err.response.statusText === 'UNAUTHORIZED') {\n          alert(err.response.data.client_message);\n          history.push('/');\n        }\n      } else if (err.request) {\n        alert('서버에서 응답이 없습니다.', err.request);\n        console.log('서버 응답 실패');\n        console.log(err.request);\n      } else {\n        alert('메세지 에러', err.message);\n        console.log(err.message);\n        if (err.message === '[INVILD_MESSAGE]') {\n          alert('무슨 응답을 받았습니다.', err.message);\n        }\n      }\n    }\n  };\n\n  // 언마운트시 axios.get\n  useEffect(() => {\n    getProductInfo();\n  }, []);\n\n  useEffect(() => {\n    getProductInfo();\n    filterReset();\n  }, [categoryId()]);\n\n  // 현재 클릭된 버튼에 따라 동작한다.\n  const handleDate = (value, i) => {\n    setSelectDate(\n      selectDate && selectDate.map((el, idx) => (idx === i ? true : false))\n    );\n\n    if (value === '전체') {\n      setParams({ ...params, startDate: null, endDate: null });\n      setCurrentDate({ startDate: null, endDate: null });\n    } else if (value === '오늘') {\n      setParams({\n        ...params,\n        startDate: dateFormatChange(newDate),\n        endDate: dateFormatChange(newDate),\n      });\n      setCurrentDate({\n        startDate: new Date(),\n        endDate: new Date(),\n      });\n    } else if (value === '3일') {\n      // const dayAgo = new Date().getTime() - oneDay * 3;\n      setParams({\n        ...params,\n        startDate: dateFormatChange(changeDate(3, 0)),\n        endDate: dateFormatChange(newDate),\n      });\n      setCurrentDate({\n        startDate: changeDate(3, 0),\n        endDate: new Date(),\n      });\n    } else if (value === '1주일') {\n      setParams({\n        ...params,\n        startDate: dateFormatChange(changeDate(7, 0)),\n        endDate: dateFormatChange(newDate),\n      });\n      setCurrentDate({\n        startDate: changeDate(7, 0),\n        endDate: new Date(),\n      });\n    } else if (value === '1개월') {\n      setParams({\n        ...params,\n        startDate: dateFormatChange(changeDate(0, 1)),\n        endDate: dateFormatChange(newDate),\n      });\n      setCurrentDate({\n        startDate: changeDate(0, 1),\n        endDate: new Date(),\n      });\n    } else if (value === '3개월') {\n      setParams({\n        ...params,\n        startDate: dateFormatChange(changeDate(0, 3)),\n        endDate: dateFormatChange(newDate),\n      });\n      setCurrentDate({\n        startDate: changeDate(0, 3),\n        endDate: new Date(),\n      });\n    }\n  };\n\n  // 검색버튼 클릭시 파람스에 객체를 넣어 해당 쿼리로 get\n  const sendQuery = () => {\n    const changeParams = {\n      ...params,\n      [`${params.searchOption}`]: params.searchKeyword,\n      searchOption: null,\n      searchKeyword: null,\n    };\n    console.log('전송될', changeParams);\n    getProductInfo(changeParams);\n  };\n\n  // 현재 날짜가 변경되면 params도 최신화 시킨다.\n  useEffect(() => {\n    setParams({\n      ...params,\n      startDate: dateFormatChange(currentDate.startDate),\n      endDate: dateFormatChange(currentDate.endDate),\n    });\n  }, [currentDate]);\n\n  return (\n    <ManagementContainer>\n      <Title>\n        <h3>주문 관리</h3>\n        <span>{pagetext.title} 관리</span>\n        <div>\n          {pagetext.description &&\n            pagetext.description.map((el, index) => <p key={index}>{el}</p>)}\n        </div>\n      </Title>\n      <Filter\n        handleStartDate={handleStartDate}\n        handleEndDate={handleEndDate}\n        pagetext={pagetext}\n        currentDate={currentDate}\n        setCurrentDate={setCurrentDate}\n        handleDate={handleDate}\n        selectDate={selectDate}\n        params={params}\n        setParams={setParams}\n        sendQuery={sendQuery}\n        filterReset={filterReset}\n      />\n      <OrderList\n        pagetext={pagetext}\n        orderList={orderList}\n        setOrderList={setOrderList}\n        setOrderList={setOrderList}\n      />\n    </ManagementContainer>\n  );\n}\n\nconst ManagementContainer = styled.div`\n  width: 100%;\n  min-height: 875px;\n  padding: 72px 20px 20px 20px;\n  background: #fafafa;\n  border-radius: 0 0 0 4px;\n`;\n\nconst Title = styled.div`\n  h3 {\n    display: inline-block;\n    margin-right: 6px;\n    color: #666;\n    font-size: 26px;\n    font-weight: 400;\n    letter-spacing: -1px;\n  }\n  span {\n    font-size: 14px;\n    font-weight: 300;\n    color: #888;\n  }\n  div {\n    margin-top: 12px;\n    p {\n      font-size: 14px;\n      font-weight: 400;\n      color: #888;\n      margin-bottom: 5px;\n      line-height: 1.5;\n    }\n  }\n`;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport DateFilter from './DateFilter';\nimport CallendarManage from '../../Components/CallendarManage';\n\nexport default function Filter({\n  pagetext,\n  currentDate,\n  setCurrentDate,\n  handleDate,\n  selectDate,\n  params,\n  setParams,\n  sendQuery,\n  filterReset,\n  handleStartDate,\n  handleEndDate,\n}) {\n  return (\n    <FilterContainer>\n      <Div>\n        <Select\n          value={params.searchOption || ''}\n          onChange={(e) =>\n            setParams({ ...params, searchOption: e.target.value })\n          }\n        >\n          <option value=\"\">Select..</option>\n          <option value=\"ORDER_DETAIL_NO\">주문상세번호</option>\n          <option value=\"ORDER_NO\">주문번호</option>\n          <option value=\"ORDRR_NAME\">주문자명</option>\n          <option value=\"ORDRR_HP\">핸드폰번호</option>\n          <option value=\"PRODUCT_NAME\">상품명</option>\n        </Select>\n        <SearchInput\n          onChange={(e) =>\n            setParams({ ...params, searchKeyword: e.target.value })\n          }\n          value={params.searchKeyword ? params.searchKeyword : ''}\n          type=\"text\"\n          placeholder=\"검색어를 입력하세요.\"\n        />\n      </Div>\n      <Divs>\n        <FilterBox>\n          <span>{pagetext.filter_date} :</span>\n          <DateBtn\n            idx={0}\n            selectDate={selectDate}\n            type=\"button\"\n            value=\"전체\"\n            onClick={(e) => handleDate(e.target.value, 0)}\n          />\n          <DateBtn\n            idx={1}\n            selectDate={selectDate}\n            type=\"button\"\n            value=\"오늘\"\n            onClick={(e) => handleDate(e.target.value, 1)}\n          />\n          <DateBtn\n            idx={2}\n            selectDate={selectDate}\n            type=\"button\"\n            value=\"3일\"\n            onClick={(e) => handleDate(e.target.value, 2)}\n          />\n          <DateBtn\n            idx={3}\n            selectDate={selectDate}\n            type=\"button\"\n            value=\"1주일\"\n            onClick={(e) => handleDate(e.target.value, 3)}\n          />\n          <DateBtn\n            idx={4}\n            selectDate={selectDate}\n            type=\"button\"\n            value=\"1개월\"\n            onClick={(e) => handleDate(e.target.value, 4)}\n          />\n          <DateBtn\n            idx={5}\n            selectDate={selectDate}\n            type=\"button\"\n            value=\"3개월\"\n            onClick={(e) => handleDate(e.target.value, 5)}\n          />\n        </FilterBox>\n        <CallendarManage\n          currentDate={currentDate}\n          setCurrentDate={setCurrentDate}\n          handleStartDate={handleStartDate}\n          handleEndDate={handleEndDate}\n        />\n      </Divs>\n      <Div>\n        <Button search onClick={() => sendQuery()}>\n          검색\n        </Button>\n        <Button onClick={filterReset}>초기화</Button>\n      </Div>\n    </FilterContainer>\n  );\n}\n\nconst FilterContainer = styled.div`\n  border: 3px solid #eee;\n  padding-left: 5px;\n  padding-bottom: 3px;\n  margin-top: 15px;\n  margin-bottom: 20px;\n`;\n\nconst Div = styled.div`\n  ${({ theme }) => theme.flex('', 'center')}\n  width: 100%;\n  margin-top: 10px;\n  margin-left: 20px;\n  &:last-child {\n    ${({ theme }) => theme.flex('center')}\n    padding-right: 100px;\n  }\n  span {\n    /* width: 90px; */\n    margin-right: 35px;\n    text-align: center;\n    font-size: 14px;\n    color: #222;\n  }\n`;\n\nconst Divs = styled(Div)`\n  @media only screen and (max-width: 1067px) {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst FilterBox = styled.div`\n  @media only screen and (max-width: 1067px) {\n    margin-bottom: 10px;\n  }\n\n  span {\n    margin-left: 15px;\n  }\n`;\n\nconst Select = styled.select`\n  margin-left: 15px;\n  height: 30px;\n  width: 120px;\n  margin-right: 5px;\n  padding: 2px 10px;\n  border: 1px solid #e5e5e5;\n  border-radius: 4px;\n  line-height: 28px;\n  color: #666;\n`;\n\nconst SearchInput = styled.input`\n  height: 30px;\n  width: 35%;\n  padding: 6px 10px;\n  background: white;\n  border: 1px solid #e5e5e5;\n  border-radius: 4px;\n  font-size: 13px;\n`;\n\nconst DateBtn = styled.input`\n  height: 32px;\n  margin-right: 3px;\n  padding: 6px 12px;\n  background: #fff;\n  color: #333;\n  font-size: 14px;\n  border: 1px solid #e5e5e5;\n  border-radius: 4px;\n  &:hover {\n    background: #e6e6e6;\n    border-color: #adadad;\n  }\n  ${({ selectDate, idx }) =>\n    selectDate &&\n    selectDate[idx] &&\n    css`\n      background: #428bca;\n      color: white;\n      &:hover {\n        background: #428bca;\n      }\n    `}\n`;\n\nconst Button = styled.button`\n  height: 34px;\n  margin: 10px 2px;\n  padding: 6px 50px;\n  background: white;\n  color: #333;\n  border: 1px solid #e5e5e5;\n  cursor: pointer;\n  &:hover {\n    background: #e6e6e6;\n    border-color: #adadad;\n  }\n  ${(props) =>\n    props.search &&\n    css`\n      background: #428bca;\n      border-color: #357ebd;\n      color: white;\n      &:hover {\n        background: #3071a9;\n        border-color: #285e8e;\n      }\n    `}\n`;\n","import React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport styled from 'styled-components';\nimport './datepick.css';\n\nexport default function DateFilter({ handleStartDate, handleEndDate }) {\n  return (\n    <InquiryperiodBox>\n      <SelectPeriod\n        selected={searchDate.startDate}\n        onChange={(date) => handleStartDate(date)}\n        dateFormat=\"yyyy-MM-dd\"\n        placeholderText=\"클릭해주세요.\"\n        shouldCloseOnSelect={false}\n      />\n      <span>~</span>\n      <SelectPeriod\n        selected={searchDate.endDate}\n        onChange={(date) => handleEndDate(date)}\n        dateFormat=\"yyyy-MM-dd\"\n        placeholderText=\"클릭해주세요.\"\n        shouldCloseOnSelect={false}\n      />\n    </InquiryperiodBox>\n  );\n}\n\nconst InquiryperiodBox = styled.div`\n  ${({ theme }) => theme.flex('center', 'center')};\n  display: table;\n  width: 22%;\n  height: 34px;\n  margin: 0 15px;\n  background: white;\n  border: 1px solid #e5e5e5;\n  border-radius: 4px;\n  span {\n    display: table-cell;\n    padding: 8px 12px;\n    background: #e5e5e5;\n    text-align: center;\n  }\n`;\n\nconst SelectPeriod = styled(DatePicker)`\n  text-align: center;\n  font-size: 14px;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { KeyboardArrowRight, List } from '@styled-icons/material';\nimport Table from './Table';\n\nexport default function OrderList({ pagetext, orderList, setOrderList }) {\n  return (\n    <div>\n      <Pagebar>\n        <ul>\n          <li>\n            <List size={25} />\n          </li>\n          <li>\n            주문관리\n            <KeyboardArrowRight size={15} color=\"#999\" />\n          </li>\n          <li>\n            {pagetext.title} 관리\n            <KeyboardArrowRight size={15} color=\"#999\" />\n          </li>\n          <li>{pagetext.title} 리스트</li>\n        </ul>\n        <div>\n          <Select>\n            <option value=\"NEWEST\">최신주문일순</option>\n            <option value=\"OLDEST\">주문일의 역순</option>\n          </Select>\n          <Select defaultValue=\"50_EACH\">\n            <option value=\"10_EACH\">10개씩보기</option>\n            <option value=\"20_EACH\">20개씩보기</option>\n            <option value=\"50_EACH\">50개씩보기</option>\n            <option value=\"100_EACH\">100개씩보기</option>\n            <option value=\"150_EACH\">150개씩보기</option>\n          </Select>\n        </div>\n      </Pagebar>\n      <Table\n        pagetext={pagetext}\n        orderList={orderList}\n        setOrderList={setOrderList}\n      />\n    </div>\n  );\n}\n\nconst Pagebar = styled.div`\n  ${({ theme }) => theme.flex('space-between', 'center', 'row')}\n  margin-left: -20px;\n  margin-right: -20px;\n  padding-left: 10px;\n  padding-right: 20px;\n  margin-bottom: 10px;\n  padding: 3px 0;\n  background: #eee;\n  ul {\n    ${({ theme }) => theme.flex('', 'center', '')}\n    padding-left: 20px;\n    li {\n      ${({ theme }) => theme.flex('', 'center', '')}\n      font-size: 14px;\n      color: #222;\n      &:first-child {\n        padding-right: 5px;\n      }\n    }\n  }\n`;\n\nconst Select = styled.select`\n  height: 30px;\n  width: 120px;\n  padding: 2px 10px;\n  border: 1px solid #e5e5e5;\n  border-radius: 4px;\n  line-height: 28px;\n  color: #666;\n  outline: none;\n  &:last-child {\n    margin-right: 20px;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport regeneratorRuntime from 'regenerator-runtime';\nimport axios from 'axios';\nimport { API } from '../../config';\nimport ORDER_EXAMPLE from './DataOrder';\n\nexport default function Table({ pagetext, orderList, setOrderList }) {\n  const history = useHistory();\n\n  // 전체 버튼의 클릭 상태\n  const [allCheck, setAllCheck] = useState(false);\n\n  // 현재 클릭된 주문 항목의 id\n  const [checkOrder, setCheckOrder] = useState([]);\n\n  // 현재 클릭된 배열의 상태\n  const [isSelected, setIsSelected] = useState(\n    new Array(orderList && orderList.length).fill(false)\n  );\n\n  const [changeId, setChangeId] = useState();\n\n  useEffect(() => {\n    console.log(checkOrder);\n  }, [checkOrder]);\n\n  // 전체 주문 리스트가 변경하게 되면 배열 새로 생성\n  useEffect(() => {\n    setIsSelected(new Array(orderList && orderList.length).fill(false));\n    setAllCheck(false);\n  }, [orderList]);\n\n  // 전체 버튼을 클릭했을 경우 실행\n  const handleClickAll = () => {\n    if (allCheck) {\n      setAllCheck(!allCheck);\n      setIsSelected(new Array(orderList.length).fill(!allCheck));\n      setCheckOrder([]);\n    } else {\n      setAllCheck(!allCheck);\n      setIsSelected(new Array(orderList.length).fill(!allCheck));\n      setCheckOrder(orderList.map((el) => String(el.id)));\n    }\n  };\n\n  //개별 버튼을 클릭했을 경우 실행\n  const selectProduct = (e, idx, orderId) => {\n    const { checked, id } = e.target;\n    const newSelceted = isSelected.map((el, i) => (idx === i ? !el : el));\n    setChangeId(orderId);\n    setIsSelected(newSelceted);\n\n    // 모든 버튼이 눌렸을 경우\n    if (newSelceted.every((item) => item)) {\n      setAllCheck(true);\n    } else {\n      setAllCheck(false);\n    }\n\n    // 체크된 상품의 id를 저장한다.\n    if (!!checked) {\n      setCheckOrder(checkOrder.concat(id));\n    } else {\n      setCheckOrder(checkOrder.filter((el) => el !== id));\n    }\n  };\n\n  const sendChangeProduct = async (changeData) => {\n    const localToken = localStorage.getItem('token');\n    console.log('보내즌ㄴ 데이터', changeData);\n\n    try {\n      const result = await axios.post(\n        `${API}/order/change`,\n        { ...changeData },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: localToken,\n          },\n          timeout: 3000,\n        }\n      );\n\n      console.log(result.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const goToProductDetail = (code) => {\n    history.push(`/${code}`);\n  };\n\n  const changedApply = (e) => {\n    // 상품이 하나도 체크되지 않았을 경우\n    if (!checkOrder.length) {\n      console.log(checkOrder);\n      return alert('상품을 선택하세요');\n    }\n\n    // 전체버튼이 체크되지 않는 경우\n    if (!!checkOrder.length) {\n      // 상품의 진열여부, 판매여부를 변경한다.\n      setOrderList(\n        orderList.map((el) => {\n          if (checkOrder.includes(String(el.id))) {\n            return { ...el, order_status: pagetext.button };\n          } else {\n            return el;\n          }\n        })\n      );\n\n      console.log('123123123123', changeId, checkOrder);\n      const changeQuery = {\n        id: checkOrder.map((el) => Number(el)),\n        status_id: changeId,\n      };\n      sendChangeProduct(changeQuery);\n      // 적용 후 모든 상태를 초기화시킨다.\n      setAllCheck(false);\n      setCheckOrder([]);\n    }\n  };\n  return (\n    <div>\n      <UpperTable>\n        <div>\n          <Total>\n            전체 조회건 수: <b>0</b> 건\n          </Total>\n          {pagetext.button && (\n            <Button blue onClick={(e) => changedApply(e)}>\n              {pagetext.button}\n            </Button>\n          )}\n        </div>\n        <div>\n          <Button>전체주문 엑셀다운로드</Button>\n          <Button>선택주문 엑셀다운로드</Button>\n        </div>\n      </UpperTable>\n      <TableContainer>\n        <table>\n          <thead>\n            <tr>\n              <th className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  checked={allCheck ? 'checked' : ''}\n                  onChange={handleClickAll}\n                  defaultValue=\"\"\n                />\n              </th>\n              {pagetext.table_header &&\n                pagetext.table_header.map((el, index) => (\n                  <th key={index}>{el}</th>\n                ))}\n            </tr>\n          </thead>\n          <tbody>\n            {orderList &&\n              orderList.map((order, index) => (\n                <tr key={index}>\n                  <td className=\"checkbox\">\n                    <input\n                      type=\"checkbox\"\n                      id={order.id}\n                      checked={isSelected[index] ? 'checked' : ''}\n                      onChange={(e) =>\n                        selectProduct(e, index, order.order_status_id)\n                      }\n                    />\n                  </td>\n                  {Object.values(order)\n                    .slice(1)\n                    .map((el, index) =>\n                      order.detail_order_number === el ? (\n                        <td\n                          key={index}\n                          onClick={(el) =>\n                            goToProductDetail(order.detail_order_number)\n                          }\n                        >\n                          {el}\n                        </td>\n                      ) : (\n                        order.order_status_id !== el && (\n                          <td key={index}>{el}</td>\n                        )\n                      )\n                    )}\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </TableContainer>\n      <UnderTable>\n        <Button>전체주문 엑셀다운로드</Button>\n        <Button>선택주문 엑셀다운로드</Button>\n      </UnderTable>\n    </div>\n  );\n}\n\nconst UpperTable = styled.div`\n  ${({ theme }) => theme.flex('space-between')}\n`;\n\nconst Total = styled.span`\n  font-size: 13px;\n  margin-right: 15px;\n`;\n\nconst Button = styled.button`\n  height: 22px;\n  padding: 2px 5px;\n  margin-left: 3px;\n  color: white;\n  background: #5cb85c;\n  border: 1px solid #4cae4c;\n  border-radius: 4px;\n  font-size: 12px;\n  ${(props) =>\n    props.blue &&\n    css`\n      background: #428bca;\n      border-color: #357ebd;\n    `}\n`;\n\nconst TableContainer = styled.div`\n  width: 100%;\n  overflow-x: scroll;\n  white-space: nowrap;\n  table {\n    margin-top: 10px;\n    width: 100%;\n    th {\n      padding: 8px;\n      background: #eee;\n      border: 1px solid #ddd;\n      font-size: 14px;\n      font-weight: 500;\n      text-align: start;\n      overflow-x: hidden;\n      white-space: nowrap;\n      &.checkbox {\n        width: 25px;\n        text-align: center;\n      }\n    }\n    td {\n      padding: 8px;\n      border: 1px solid #ddd;\n      font-size: 14px;\n      color: #222;\n      overflow-x: hidden;\n      white-space: nowrap;\n      &.checkbox {\n        width: 25px;\n        text-align: center;\n      }\n    }\n    input[type='checkbox'] {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst UnderTable = styled.div`\n  ${({ theme }) => theme.flex('flex-end')}\n  margin-top: 10px;\n`;\n","// 실제 백에서 전달해줄 key값에 맞는 Mockdata를 만들었습니다\n\nconst ORDER_EXAMPLE = [\n  [\n    // 상품준비관리에서 받는 데이터 형태\n    {\n      id: 1,\n      paid_at: '2020-10-18 11:21:39',\n      order_number: 20201018000001000,\n      detail_order_number: 'B2020101800001001',\n      product_name: '행복하세요-*',\n      option_info: '1234',\n      quantity: 1,\n      receiver_name: '이지형',\n      receiver_contact: '010-2017-9999',\n      order_status: '상품준비',\n      order_status_id: 3,\n    },\n    {\n      id: 2,\n      paid_at: '2020-10-23 14:21:08',\n      order_number: 20201018000002000,\n      detail_order_number: 'B2020101800001002',\n      product_name: '고군분투상준님 화이팅 아자아자',\n      option_info: '4321',\n      quantity: 1,\n      receiver_name: '김상준',\n      receiver_contact: '010-9937-1234',\n      order_status: '상품준비',\n      order_status_id: 3,\n    },\n    {\n      id: 3,\n      paid_at: '2020-10-23 14:21:08',\n      order_number: 20201018000002000,\n      detail_order_number: 'B2020101800001002',\n      product_name: '도길님 맨날 놀려서 미안해요 030',\n      option_info: '4321',\n      quantity: 1,\n      receiver_name: '김도길',\n      receiver_contact: '010-9937-1234',\n      order_status: '상품준비',\n      order_status_id: 3,\n    },\n  ],\n  [\n    // 배송중관리에서 받는 데이터 형태\n    {\n      id: 1,\n      paid_at: '2020-10-18 11:21:39',\n      order_number: 20201018000001000,\n      shipment_from: '2020-10-18 11:21:39',\n      detail_order_number: 'B2020101800001001',\n      product_name: '고생하셨어요 다솜님',\n      receiver_name: '정다솜',\n      receiver_contact: '010-2017-9999',\n      order_status: '배송중',\n      order_status_id: 4,\n    },\n    {\n      id: 2,\n      paid_at: '2020-10-18 11:21:39',\n      order_number: 20201018000001000,\n      shipment_from: '2020-10-18 11:21:39',\n      detail_order_number: 'B2020101800001001',\n      product_name: '지은님 보고싶어여',\n      receiver_name: '나지은',\n      receiver_contact: '010-2017-9999',\n      order_status: '배송중',\n      order_status_id: 4,\n    },\n  ],\n  [\n    // 배송완료관리에서 받는 데이터 형태\n    {\n      id: 1,\n      paid_at: '2020-10-18 11:21:39',\n      order_number: 20201018000001000,\n      shipment_until: '2020-10-18 11:21:39',\n      detail_order_number: 'B2020101800001001',\n      product_name: '종일님 남은 협업 화이팅입니다',\n      receiver_name: '손종일',\n      receiver_contact: '010-2017-9999',\n      order_status: '배송완료',\n      order_status_id: 4,\n    },\n    {\n      id: 2,\n      paid_at: '2020-10-18 11:21:39',\n      order_number: 20201018000001000,\n      shipment_until: '2020-10-18 11:21:39',\n      detail_order_number: 'B2020101800001001',\n      product_name: '맥북 2020 16 inch...선물드리고 싶네요',\n      receiver_name: '김수정',\n      receiver_contact: '010-2017-9999',\n      order_status: '배송완료',\n      order_status_id: 4,\n    },\n  ],\n  [\n    // 구매확정관리에서 받는 데이터 형태\n    {\n      id: 1,\n      paid_at: '2020-10-18 11:21:39',\n      confirmed_at: '2020-10-23 11:21:39',\n      order_number: 20201018000001000,\n      detail_order_number: 'B2020101800001001',\n      product_name: '성은님 감사합니다-!',\n      option_info: '1234',\n      quantity: 1,\n      receiver_name: '홍성은',\n      receiver_contact: '010-2017-9999',\n      order_status: '구매확정',\n      order_status_id: 5,\n    },\n    {\n      id: 2,\n      paid_at: '2020-10-23 14:21:08',\n      confirmed_at: '2020-10-22 13:01:23',\n      order_number: 20201018000002000,\n      detail_order_number: 'B2020101800001002',\n      product_name: '호큐니파이리',\n      option_info: '4321',\n      quantity: 1,\n      receiver_name: '김호균',\n      receiver_contact: '010-9937-1234',\n      order_status: '구매확정',\n      order_status_id: 5,\n    },\n    {\n      id: 3,\n      paid_at: '2020-10-23 14:21:08',\n      confirmed_at: '2020-10-22 13:01:23',\n      order_number: 20201018000002000,\n      detail_order_number: 'B2020101800001002',\n      product_name: '주희님짱!',\n      option_info: '4321',\n      quantity: 1,\n      receiver_name: '장주희',\n      receiver_contact: '010-9937-1234',\n      order_status: '구매확정',\n      order_status_id: 5,\n    },\n  ],\n  [],\n];\n\nexport default ORDER_EXAMPLE;\n","const COMPONENT_ORDER = [\n  {\n    id: 1,\n    title: '상품준비',\n    filter_date: '결제완료일',\n    description: [\n      '( 상품준비 단계에서는 구매회원의 주문취소가 가능하며, 배송준비단계로 처리할 경우 3영업일 동안은 구매회원의 주문취소가 불가능합니다. )',\n      '( 배송준비로 변경하신 후 3영업일 이내로 상품 배송이 시작되지 않을 경우 구매회원의 주문취소가 가능하며 이에 따른 책임은 판매자 회원에게 있습니다. (전자상거래법 제 15조 1항에 근거) )',\n    ],\n    table_header: [\n      '결제일자',\n      '주문번호',\n      '주문상세번호',\n      '상품명',\n      '옵션정보',\n      '수량',\n      '주문자명',\n      '핸드폰번호',\n      '주문상태',\n    ],\n    button: '배송처리',\n  },\n  {\n    id: 2,\n    title: '배송중',\n    filter_date: '배송시작일',\n    table_header: [\n      '결제일자',\n      '배송시작일',\n      '주문번호',\n      '주문상세번호',\n      '상품명',\n      '주문자명',\n      '핸드폰번호',\n      '주문상태',\n    ],\n    button: '배송완료처리',\n  },\n  {\n    id: 3,\n    title: '배송완료',\n    filter_date: '배송시작일',\n    table_header: [\n      '결제일자',\n      '배송완료일',\n      '주문번호',\n      '주문상세번호',\n      '상품명',\n      '주문자명',\n      '핸드폰번호',\n      '주문상태',\n    ],\n  },\n  {\n    id: 4,\n    title: '구매확정',\n    filter_date: '구매확정일',\n    table_header: [\n      '결제일자',\n      '결제확정일',\n      '주문번호',\n      '주문상세번호',\n      '상품명',\n      '옵션정보',\n      '수량',\n      '주문자명',\n      '핸드폰번호',\n      '주문상태',\n    ],\n  },\n];\nexport default COMPONENT_ORDER;\n","import { combineReducers } from 'redux';\nimport userInfo from './userInfo';\n\nexport default combineReducers({\n  userInfo,\n});\n","import { createGlobalStyle } from 'styled-components';\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap');\n  * {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  box-sizing: border-box;\n  font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  }\n\n  a {\n  text-decoration: none;\n  color: inherit;\n  }\n\n  img {\n    max-width: 100%;\n  }\n\n  button,\n  input {\n    outline: 0;\n    border: 0;\n    background: none;\n    cursor: pointer;\n  }\n\n  body {\n    line-height: 1;\n    margin: 0;\n    height: 100vh;\n    width: 100vw;\n    background-color: #34373A;\n  }\n\n  ol,\n  ul {\n    list-style: none;\n  }\n\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  \n  html,\n  body {\n    width: 100%;\n    height: 100%;\n    font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  }\n`;\nexport default GlobalStyle;\n","import { css } from 'styled-components';\n\nconst theme = {\n  flex: (justify = null, align = null, direction = null) => {\n    return css`\n      display: flex;\n      justify-content: ${justify};\n      align-items: ${align};\n      flex-direction: ${direction};\n    `;\n  },\n};\nexport default theme;\n","export const API = 'http://10.58.7.141:5000';\n// export const API = 'http://10.251.1.180:5000';\n// export const API = 'http://192.168.7.12:5000';\n\nexport const localToken = localStorage.getItem('token');\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isClear } from '../../Store/Reducer/userInfo';\nimport styled from 'styled-components';\nimport { KeyboardArrowDown } from '@styled-icons/material';\nimport { GoSignOut } from 'react-icons/go';\n\nexport default function Header() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { is_master } = useSelector(({ userInfo }) => ({\n    is_master: userInfo.is_master,\n  }));\n\n  const logOut = () => {\n    history.push('/');\n    localStorage.removeItem('token');\n    dispatch(isClear());\n  };\n  return (\n    <HeaderContainer>\n      <Contents>\n        <div>\n          <img src=\"/public/Images/logo.png\" />\n          <KeyboardArrowDown size=\"16\" color=\"#CCC\" />\n        </div>\n      </Contents>\n      <StatusBtn>\n        <LogoutBox>{is_master ? 'intern_master' : 'intern_seller'}</LogoutBox>\n        <KeyboardArrowDown size=\"15\" color=\"#999ba2\" />\n        <div>\n          <LogoutText onClick={logOut}>\n            <GoSignOut />\n            Log Out\n          </LogoutText>\n        </div>\n      </StatusBtn>\n    </HeaderContainer>\n  );\n}\n\nconst HeaderContainer = styled.div`\n  ${({ theme }) => theme.flex('space-between', 'center', 'row')}\n  position: fixed;\n  width: 100vw;\n  height: 45px;\n  background: #873b53;\n  z-index: 100;\n  div {\n    ${({ theme }) => theme.flex('', 'center', 'row')}\n  }\n  img {\n    width: 100px;\n    margin-right: 3px;\n  }\n  span {\n    /* color: white; */\n    font-size: 13px;\n    font-weight: 400;\n    margin: 0 0 2px 10px;\n  }\n`;\n\nconst LogoutBox = styled.span`\n  color: #cecfd3;\n`;\n\nconst Contents = styled.div`\n  ${({ theme }) => theme.flex('', 'center', 'row')}\n  margin: 0 20px;\n`;\n\nconst StatusBtn = styled.div`\n  ${({ theme }) => theme.flex('', 'center', 'row')}\n  width: 130px;\n  height: 45px;\n  margin-right: 20px;\n  border-left: 1px solid white;\n  span {\n    /* color: #cecfd3; */\n    margin-right: 3px;\n    margin-left: 16px;\n  }\n  div {\n    display: none;\n\n    svg {\n      vertical-align: middle;\n    }\n  }\n\n  &:hover {\n    background-color: #414247;\n\n    div {\n      display: block;\n      background-color: white;\n      position: absolute;\n      top: 45px;\n      right: 6px;\n      width: 160px;\n      height: 30px;\n      border: 1px solid gray;\n      text-align: center;\n      color: black;\n      cursor: pointer;\n\n      span {\n        color: black;\n        display: block;\n        margin-top: 7px;\n      }\n\n      &:hover {\n        background-color: #eee;\n        cursor: pointer;\n      }\n    }\n  }\n`;\n\nconst LogoutText = styled.span`\n  color: black;\n  display: block;\n  margin-top: 7px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport NavList from './NavList';\nimport { KeyboardArrowLeft } from '@styled-icons/material';\n\nexport default function Nav() {\n  const history = useHistory();\n  const [active, setActive] = useState([0, 0]);\n  const [navData, setNavData] = useState([]);\n  const [subActive, setSubActive] = useState(0);\n  const [sidebarSmall, setSidebarSmall] = useState(false);\n\n  // store에 있는 nav 정보를 가져온다.\n  const { nav_list, filter_list } = useSelector(({ userInfo }) => ({\n    nav_list: userInfo.nav_list,\n  }));\n\n  //nav가 변경되면 nav 데이터를 최신화\n  useEffect(() => {\n    // if (!nav_list[0]) {\n    //   alert('다시 로그인 해주세요.');\n    //   history.push('/');\n    // }\n\n    setNavData(nav_list);\n  }, [nav_list]);\n\n  // 네브가 눌렸을때, 페이지 이동 함수\n  const handlePage = (menuTitle, subTitle) => {\n    setActive([menuTitle, subTitle]);\n  };\n\n  return (\n    <NavContainer sidebarSmall={sidebarSmall}>\n      <SideToggler\n        sizeToggle={sidebarSmall}\n        onClick={() => setSidebarSmall(!sidebarSmall)}\n      >\n        <KeyboardArrowLeft size={20} />\n      </SideToggler>\n      <NavBox>\n        {navData &&\n          navData.map((el, idx) => (\n            <NavList\n              setSubActive={(e) => setSubActive(e)}\n              active={active}\n              subActive={subActive}\n              key={idx}\n              index={idx + 1}\n              menuTitle={el.menu_title}\n              subTitle={el.sub_menus}\n              handlePage={handlePage}\n              sidebarSmall={sidebarSmall}\n              link={el.main_url}\n            />\n          ))}\n      </NavBox>\n    </NavContainer>\n  );\n}\n\nconst NavContainer = styled.div`\n  @media only screen and (max-width: 934px) {\n    display: none;\n  }\n\n  width: 215px;\n  height: 100vh;\n  padding-top: 45px;\n  background: #35373a;\n  z-index: 10;\n  ${({ sidebarSmall }) =>\n    sidebarSmall &&\n    css`\n      width: 40px;\n    `}\n`;\n\nconst NavBox = styled.ul`\n  padding-top: 53px;\n`;\n\nconst SideToggler = styled.div`\n  ${({ theme }) => theme.flex('center', 'center')}\n  width: 23px;\n  height: 23px;\n  margin-top: 15px;\n  background-color: #fcfcfc;\n  border-radius: 4px 0 0 4px;\n  float: right;\n  cursor: pointer;\n  ${({ sizeToggle }) =>\n    sizeToggle &&\n    css`\n      transform: rotate(180deg);\n      border-radius: 0 4px 4px 0;\n    `};\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { KeyboardArrowUp } from '@styled-icons/material';\n\nexport default function Footer() {\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <FooterContainer>\n      <div>\n        {' '}\n        | 상호 : (주)브랜디 | 주소 : (06223) 서울특별시 강남구 테헤란로 32길 26\n        청송빌딩 | 사업자등록번호 : 220-88-93187 | 통신판매업신고 :\n        2016-서울강남-00359호 | 이메일 : help@brandi.co.kr\n        <br />\n        2018 © brandi inc.\n      </div>\n      <div onClick={() => scrollToTop()}>\n        <span>\n          <KeyboardArrowUp size={25} />\n        </span>\n      </div>\n    </FooterContainer>\n  );\n}\n\nconst FooterContainer = styled.div`\n  ${({ theme }) => theme.flex('space-between', '', '')}\n  width: 100vw;\n  height: 50px;\n  padding: 10px 20px 5px 20px;\n  background: #35373a;\n  z-index: 100;\n  div {\n    color: #999ba2;\n    line-height: 1.5;\n    font-size: 12px;\n  }\n  span {\n    display: block;\n    width: 25px;\n    height: 25px;\n    background-color: #4d4f55;\n    border-radius: 20px;\n    cursor: pointer;\n  }\n`;\n","const TYPE_MASTER = 'userInfo/TYPE_MASTER';\nconst TYPE_CLEAR = 'userInfo/TYPE_CLEAR';\nconst SAVE_NAV = 'userInfo/SAVE_NAV';\nconst SAVE_FILTER = 'userInfo/SAVE_FILTER';\n\n// 마스터인지 셀러인지\nexport const isMaster = (items) => ({\n  type: TYPE_MASTER,\n  payload: items,\n});\n\n// nav Data\nexport const saveNav = (items) => ({\n  type: SAVE_NAV,\n  payload: items,\n});\n\n// filter Data\nexport const saveFilter = (items) => ({\n  type: SAVE_FILTER,\n  payload: items,\n});\n\n// 로그아웃시 clear\nexport const isClear = () => ({\n  type: TYPE_CLEAR,\n});\n\n// 기본값\nconst initialState = {\n  is_master: false,\n  filter_list: [],\n  nav_list: [],\n  //   attribute: \"쇼핑몰\"\n  // created_at: \"Sun, 25 Oct 2020 21:54:53 GMT\"\n  // discount_rate: null\n  // image_url: \"https://image.brandi.me/cproduct/2020/10/25/21534186_1603617675_image1_M.jpg\"\n  // is_displayed: 1\n  // is_on_sale: 1\n  // price: 20000\n  // product_code: 1\n  // product_name: \"[대박예쁨/2C] 보카시 크롭 어깨 퍼프 숏 니트 _ 러브모노\"\n  // product_number: 1\n  // seller_name: \"러브모노\"\n  // filter_list: [\n  //   {\n  //     filterTitle: '판매여부',\n  //     id: 'sale',\n  //     category: [\n  //       {\n  //         category_id: '',\n  //         category_title: '전체',\n  //       },\n  //       {\n  //         category_id: 1,\n  //         category_title: '판매',\n  //       },\n  //       {\n  //         category_id: 0,\n  //         category_title: '미판매',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     filterTitle: '진열여부',\n  //     id: 'display',\n  //     category: [\n  //       {\n  //         category_id: '',\n  //         category_title: '전체',\n  //       },\n  //       {\n  //         category_id: 1,\n  //         category_title: '진열',\n  //       },\n  //       {\n  //         category_id: 0,\n  //         category_title: '미진열',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     filterTitle: '할인여부',\n  //     id: 'discount',\n  //     category: [\n  //       {\n  //         category_id: '',\n  //         category_title: '전체',\n  //       },\n  //       {\n  //         category_id: 1,\n  //         category_title: '할인',\n  //       },\n  //       {\n  //         category_id: 0,\n  //         category_title: '미할인',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     filterTitle: '셀러명',\n  //     id: 'seller_name',\n  //   },\n  //   {\n  //     filterTitle: '셀러속성',\n  //     id: 'attribute',\n  //     category: [\n  //       {\n  //         category_id: 0,\n  //         category_title: '전체',\n  //       },\n  //       {\n  //         category_id: 1,\n  //         category_title: '마켓',\n  //       },\n  //       {\n  //         category_id: 2,\n  //         category_title: '쇼핑몰',\n  //       },\n  //       {\n  //         category_id: 3,\n  //         category_title: '그랜드마켓',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     filterTitle: 'test',\n  //     id: 'test',\n  //     category: [\n  //       {\n  //         category_id: 0,\n  //         category_title: '전체',\n  //       },\n  //       {\n  //         category_id: 1,\n  //         category_title: '마켓',\n  //       },\n  //       {\n  //         category_id: 2,\n  //         category_title: '쇼핑몰',\n  //       },\n  //       {\n  //         category_id: 3,\n  //         category_title: '그랜드마켓',\n  //       },\n  //     ],\n  //   },\n  // ],\n  // nav_list: [\n  //   {\n  //     id: 1,\n  //     main_url: 'home',\n  //     menu_title: '홈',\n  //     sub_menus: [\n  //       {\n  //         sub_menu_id: 1,\n  //         sub_menu_title: '홈',\n  //         sub_url: 'home',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     id: 2,\n  //     main_url: '',\n  //     menu_title: '통계',\n  //     sub_menus: [\n  //       {\n  //         sub_menu_id: 2,\n  //         sub_menu_title: '생략',\n  //         sub_url: '',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     id: 3,\n  //     main_url: 'order',\n  //     menu_title: '주문관리',\n  //     sub_menus: [\n  //       {\n  //         sub_menu_id: 4,\n  //         sub_menu_title: '상품준비관리',\n  //         sub_url: 'prepareList',\n  //         // sub_url: 'prepareList',\n  //       },\n  //       {\n  //         sub_menu_id: 5,\n  //         sub_menu_title: '배송준비관리',\n  //         sub_url: 'deliveryPrepareList',\n  //         // sub_url: 'deliveryPrepareList',\n  //       },\n  //       {\n  //         sub_menu_id: 6,\n  //         sub_menu_title: '배송중관리',\n  //         sub_url: 'deliveryList',\n  //         // sub_url: 'deliveryList',\n  //       },\n  //       {\n  //         sub_menu_id: 7,\n  //         sub_menu_title: '배송완료관리',\n  //         sub_url: 'deliveryCompleteList',\n  //         // sub_url: 'deliveryCompleteList',\n  //       },\n  //       {\n  //         sub_menu_id: 8,\n  //         sub_menu_title: '구매확정관리',\n  //         sub_url: 'orderConfirmList',\n  //         // sub_url: 'orderConfirmList',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     id: 4,\n  //     main_url: '',\n  //     menu_title: '취소/환불관리',\n  //     sub_menus: [\n  //       {\n  //         sub_menu_id: 2,\n  //         sub_menu_title: '생략',\n  //         sub_url: '',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     id: 5,\n  //     main_url: 'product',\n  //     menu_title: '상품관리',\n  //     sub_menus: [\n  //       {\n  //         sub_menu_id: 9,\n  //         sub_menu_title: '상품관리',\n  //         sub_url: 'product',\n  //       },\n  //       {\n  //         sub_menu_id: 10,\n  //         sub_menu_title: '상품등록',\n  //         sub_url: 'product',\n  //         // sub_url: 'register',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     id: 6,\n  //     main_url: '',\n  //     menu_title: '고객응대관리',\n  //     sub_menus: [\n  //       {\n  //         sub_menu_id: 2,\n  //         sub_menu_title: '생략',\n  //         sub_url: '',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     id: 7,\n  //     main_url: '',\n  //     menu_title: '기획전/쿠폰관리',\n  //     sub_menus: [\n  //       {\n  //         sub_menu_id: 2,\n  //         sub_menu_title: '생략',\n  //         sub_url: '',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     id: 8,\n  //     main_url: 'account',\n  //     menu_title: '회원 관리',\n  //     sub_menus: [\n  //       {\n  //         sub_menu_id: 14,\n  //         sub_menu_title: '회원 관리_커뮤니티',\n  //         sub_url: '',\n  //       },\n  //       {\n  //         sub_menu_id: 15,\n  //         sub_menu_title: '셀러 계정 관리',\n  //         sub_url: 'seller',\n  //       },\n  //     ],\n  //   },\n  // ],\n};\n\nconst userInfo = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case TYPE_MASTER:\n      return { ...state, is_master: payload };\n    case SAVE_FILTER:\n      return { ...state, filter_list: payload };\n    case SAVE_NAV:\n      return { ...state, nav_list: payload };\n    case TYPE_CLEAR:\n      return {};\n    default:\n      return state;\n  }\n};\nexport default userInfo;\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nexport default function LoginFooter() {\n  return (\n    <Fragment>\n      <FooterFantom></FooterFantom>\n      <Footer>\n        <FooterInner>\n          <CompanyInfo>\n            회사명 : (주)브랜디 | 주소 : (06223) 서울특별시 강남구 테헤란로 32길\n            26 청송빌딩 | 사업자등록번호 : 220-88-93187 I 통신판매업신고 :\n            2016-서울강남-00359호\n          </CompanyInfo>\n          <CompanyInfo>\n            이메일 : help@brandi.co.kr | 2018 © brandi inc.\n          </CompanyInfo>\n          <Policy>\n            <a>이용약관</a> | <a>개인정보처리방침</a>\n          </Policy>\n        </FooterInner>\n      </Footer>\n    </Fragment>\n  );\n}\n\nconst Footer = styled.div`\n  ${({ theme }) => theme.flex('cneter')}\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  padding: 20px 0;\n  background-color: #212121;\n`;\n\nconst FooterFantom = styled.div`\n  display: block;\n  width: 100%;\n  height: 100px;\n  padding: 20px 0;\n  background-color: #212121;\n`;\n\nconst FooterInner = styled.div`\n  width: 720px;\n  font-size: 11px;\n  color: #999ba2;\n  a {\n    margin-top: 2px;\n    color: #fff;\n  }\n`;\n\nconst CompanyInfo = styled.p`\n  line-height: 1.5;\n`;\n\nconst Policy = styled.div`\n  margin-top: 10px;\n`;\n","import React from 'react';\n\nexport default function dateFormatChange(date) {\n  if (!!date) {\n    var year = date.getFullYear(); //YYYY\n    var month = 1 + date.getMonth(); //MM\n    month = month >= 10 ? month : '0' + month; //MM 두자리로 저장\n    var day = date.getDate(); //D\n    day = day >= 10 ? day : '0' + day; //DD\n    return `${year}-${month}-${day}`;\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport DatePicker from 'react-datepicker';\nimport '../../src/Styles/datepick.css';\nimport { ko } from 'date-fns/esm/locale';\n\nexport default function CallendarManage({\n  currentDate,\n  handleStartDate,\n  handleEndDate,\n}) {\n  return (\n    <InquiryperiodBox>\n      <SelectPeriod\n        selected={currentDate.startDate || ''}\n        locale={ko}\n        dateFormat=\"yyyy-MM-dd\"\n        onChange={(date) => {\n          handleStartDate(date);\n        }}\n        placeholderText=\"클릭해주세요.\"\n        shouldCloseOnSelect={false}\n      />\n      <span>~</span>\n      <SelectPeriod\n        selected={currentDate.endDate || ''}\n        locale={ko}\n        dateFormat=\"yyyy-MM-dd\"\n        onChange={(date) => handleEndDate(date)}\n        placeholderText=\"클릭해주세요.\"\n        shouldCloseOnSelect={false}\n      />\n    </InquiryperiodBox>\n  );\n}\nconst InquiryperiodBox = styled.div`\n  display: table;\n  border: 1px solid #e5e5e5;\n  width: 25%;\n  margin: 0 15px;\n\n  @media only screen and (max-width: 934px) {\n    width: 100%;\n  }\n\n  span {\n    display: table-cell;\n    padding: 6px 12px;\n    background: #e5e5e5;\n  }\n`;\n\nconst SelectPeriod = styled(DatePicker)`\n  text-align: center;\n  cursor: pointer;\n`;\n"],"sourceRoot":""}